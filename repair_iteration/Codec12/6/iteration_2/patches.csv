bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  len  +  1);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,int)  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  len  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  len  +  1);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,int)	644	None	replace
2	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(b,  0,  c  +  1);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(b,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(b,  0,  c  +  1);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  incompatible  types	644	None	replace
3	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  offset  +  1);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  offset  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  offset  +  1);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,int)	644	None	replace
4	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b  +  1);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	644	None	replace
5	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  buf.length  +  1);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  buf.length  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  buf.length  +  1);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  incompatible  types	644	None	replace
6	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  c.decode(buf,  0,  baseNCodec  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  c.decode(buf,  0,  baseNCodec  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  c.decode(buf,  0,  baseNCodec  +  1);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	644	None	replace
7	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c  +  1,  len);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c  +  1,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c  +  1,  len);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,int)	644	None	replace
8	[BUG]  [BUGGY]  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	475	None	replace
9	[BUG]  [BUGGY]  AssertionError  <  Object>  baseNCodec  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  baseNCodec  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  baseNCodec  =  isEnabled(Feature.QUOTE_FIELD_NAME);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	475	None	replace
10	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);  }  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);  }	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	475	None	replace
11	[BUG]  [BUGGY]  AssertionError  <  Object>  buf  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  buf  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  buf  =  isEnabled(Feature.QUOTE_FIELD_NAME);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	475	None	replace
12	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_NAME);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  ';'  expected	475	None	replace
13	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  cannot  find  symbol  Feature  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  isEnabled(Feature.QUOTE_FIELD_NAME);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  Feature	475	None	replace
14	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_N  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_N  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  doEncode  =  isEnabled(Feature.QUOTE_FIELD_N	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  ')'  expected	475	None	replace
15	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  error  =  isEnabled(Feature.QUOTE_FIELD_NAME);  }  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  error  =  isEnabled(Feature.QUOTE_FIELD_NAME);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  AssertionError  <  Object>  error  =  isEnabled(Feature.QUOTE_FIELD_NAME);  }	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    AssertionError    <    Object>    doEncode    =    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	475	None	replace
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	20	add
17	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	20	add
18	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  [CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    BaseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);	  	non-compiled	[CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context	120	None	add
19	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	20	add
20	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	20	add
21	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    BaseNCodec  b  =  getBaseNCodec();	  	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	120	None	add
22	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	25	add
23	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	120	25	add
24	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    BaseNCodec  b  =  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);	  	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	120	None	add
25	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {	  	non-compiled	[CE]  ';'  expected	120	None	add
26	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);	  	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	120	None	add
27	[BUG]  [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  System.arraycopy(b,  0,  c);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(b,    0,    c);    baseNCodec.encode(b,  0,  c);  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  System.arraycopy(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(b,        0,        c);        baseNCodec.encode(b,    0,    c);    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  baseNCodec.encode(b,  0,  c);  }  else  {  System.arraycopy(b,  0,  c);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	120	None	add
28	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  buf,  c);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  buf,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  buf,  c);	  BaseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)	154	None	replace
29	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.encode(b,  0,  c);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.encode(b,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.encode(b,  0,  c);	  BaseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  incompatible  types	154	None	replace
30	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  c,  buf);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  c,  buf);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  c,  buf);	  BaseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])	154	None	replace
31	[BUG]  [BUGGY]  BaseNCodec.encodeByte(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encodeByte(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encodeByte(buf,  0,  c);	  BaseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
32	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  c,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  c,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  c,  len);	  BaseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	154	None	replace
33	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  c,  offset);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  c,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  c,  offset);	  BaseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	154	None	replace
34	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  buf.length,  c);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  buf.length,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  buf.length,  c);	  BaseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	154	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  b,  0,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  b,  0,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  b,  0,  doEncode,  len);	  System.arraycopy(buf,    offset,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  buf,  offset,  b,  0,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  buf,  offset,  b,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  buf,  offset,  b,  0,  doEncode);	  System.arraycopy(buf,    offset,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  b,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  b,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  0,  b,  offset,  doEncode);	  System.arraycopy(buf,    offset,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  b,  0,  c,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  b,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  b,  0,  c,  doEncode);	  System.arraycopy(buf,    offset,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  0,  buf,  offset,  doEncode);	  System.arraycopy(buf,    offset,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  b,  0,  doEncode,  buf.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  b,  0,  doEncode,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  b,  0,  doEncode,  buf.length);	  System.arraycopy(buf,    offset,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(buf,    0,    len    +    1);    baseNCodec.decode(buf,  0,  len  +  1);	  timeout    	compilable	  [FE]  AssertionError  	222	20	add
42	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    baseNCodec.decode(buf,  0,  len  +  1);	  timeout    	compilable	  [FE]  AssertionError  	222	20	add
43	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec.decode(buf,  0,  len  +  1);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec.decode(buf,  0,  len  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    BaseNCodec.decode(buf,  0,  len  +  1);	  timeout    	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	222	None	add
44	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec  baseNCodec.decode(buf,  0,  len  +  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec  baseNCodec.decode(buf,  0,  len  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    BaseNCodec  baseNCodec.decode(buf,  0,  len  +  1);	  timeout    	non-compiled	[CE]  ';'  expected	222	None	add
45	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.decode(buf,  0,  len  +  1);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.decode(buf,  0,  len  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    BaseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.decode(buf,  0,  len  +  1);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	222	None	add
46	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.decode(buf,  0,  len  +  1);  }  [CE]  'else'  without  'if'  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.decode(buf,  0,  len  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.decode(buf,  0,  len  +  1);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	222	None	add
47	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  len  +  1);  }  [CE]  'else'  without  'if'  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  BaseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  len  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    BaseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  len  +  1);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	222	None	add
48	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  len  +  1);  }  [CE]  'else'  without  'if'  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  len  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  len  +  1);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	222	None	add
49	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	non-compiled	[CE]  	222	None	add
50	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  len  +  1);  baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,    0,    len    +    1);    baseNCodec.decode(buf,  0,  len  +  1);  }  else  if(doEncode)  {  throw  new  IllegalStateException( " ");  }	  timeout    	non-compiled	[CE]  	222	None	add
51	[BUG]  [BUGGY]  angle2D.encode(buf,  0,  c);  [CE]  cannot  find  symbol  angle2D  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  angle2D.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	angle2D.encode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(!doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol  angle2D	682	None	replace
52	[BUG]  [BUGGY]  rackBase(baseNCodec,  0,  c);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase(baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase(baseNCodec,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(!doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol	682	None	replace
53	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  offset,  len);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  offset,  len);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    new    BaseNCodec(buf,    offset,    len);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	667	None	replace
54	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(buf,  offset,  len);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(buf,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(buf,  offset,  len);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    new    BaseNCodec(buf,    offset,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	667	None	replace
55	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  offset,  len);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  offset,  len);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    new    BaseNCodec(buf,    offset,    len);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	667	None	replace
56	[BUG]  [BUGGY]  rackBase(baseNCodec,  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase(baseNCodec,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase(baseNCodec,  buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
57	[BUG]  [BUGGY]  placeByte  b  =  getByteBuffer();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  placeByte  b  =  getByteBuffer();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	placeByte  b  =  getByteBuffer();	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
58	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
59	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
60	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	115	None	add
61	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
62	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
63	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
64	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
65	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }	  	non-compiled	[CE]  ';'  expected	115	None	add
66	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }	  	non-compiled	[CE]  ';'  expected	115	None	add
67	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	115	None	add
68	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "... ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "... ");  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
69	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "... ");  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "... ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( "... ");  }	  	compilable	  [FE]  IllegalStateException  	115	25	add
70	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  ';'  expected  [FE]                    IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }	  	non-compiled	[CE]  ';'  expected	115	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
72	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
74	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	242	19	add
76	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	242	19	add
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	242	19	add
78	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	242	19	add
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
80	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
82	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
84	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
85	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {	  	non-compiled	[CE]  ';'  expected	242	None	add
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
87	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	242	19	add
88	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(!doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(!doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {	  	non-compiled	[CE]  ';'  expected	242	None	add
89	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
90	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
91	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
92	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
93	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
94	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
95	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	432	None	add
96	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
97	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
98	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }	  	non-compiled	[CE]  ';'  expected	432	None	add
99	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(DoEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [CE]  cannot  find  symbol  DoEncode  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(DoEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(DoEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	non-compiled	[CE]  cannot  find  symbol  DoEncode	432	None	add
100	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  =  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  =  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
101	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  =  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  =  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  =  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
102	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
103	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    =    len;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	432	21	add
104	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(buf,  c).getDecodedByte();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(buf,  c).getDecodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(buf,  c).getDecodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  cannot  find  symbol	657	None	replace
105	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(c),  baseNCodec.getDecodedByte();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(c),  baseNCodec.getDecodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(c),  baseNCodec.getDecodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  ';'  expected	657	None	replace
106	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(baseNCodec).getDecodedByte();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(baseNCodec).getDecodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(baseNCodec).getDecodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  cannot  find  symbol	657	None	replace
107	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(c,  baseNCodec).getDecodedByte();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(c,  baseNCodec).getDecodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(c,  baseNCodec).getDecodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  cannot  find  symbol	657	None	replace
108	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(c),  BaseNCodec.getDecodedByte();  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(c),  BaseNCodec.getDecodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(c),  BaseNCodec.getDecodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  ';'  expected	657	None	replace
109	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(b).getDecodedByte();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(b).getDecodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(b).getDecodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  cannot  find  symbol	657	None	replace
110	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(c).decodedByte();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(c).decodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(c).decodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  cannot  find  symbol	657	None	replace
111	[BUG]  [BUGGY]  GuvernedByte  b  =  getCommonByte(c,  offset).getDecodedByte();  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  GuvernedByte  b  =  getCommonByte(c,  offset).getDecodedByte();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	GuvernedByte  b  =  getCommonByte(c,  offset).getDecodedByte();	  GuvernedByte    b    =    getCommonByte(c).getDecodedByte();    	non-compiled	[CE]  cannot  find  symbol	657	None	replace
112	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBase();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBase();  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBase();	  baseNCodec.encode(buf,    0,    len);    BaseNCodec    baseNCodec    =    getBase();    	non-compiled	[CE]  cannot  find  symbol	704	None	replace
113	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
114	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
115	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
116	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
117	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
118	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
119	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
120	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
121	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(buf,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
122	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(buf,  offset,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(buf,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
123	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.encode(buf,  offset,  len);  [CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.encode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.encode(buf,  offset,  len);	  	non-compiled	[CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context	503	None	add
124	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(buf,  offset,  len);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(buf,  offset,  len);	  	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	503	None	add
125	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.baseNCodec.encode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.baseNCodec.encode(buf,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
126	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.baseNCodec.encode(buf,  offset,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.encode(buf,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.baseNCodec.encode(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.encode(buf,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.baseNCodec.encode(buf,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	503	24	add
127	[BUG]  [BUGGY]  ®ndecodeBaseNCodec.encode(buf,  0,  c);  [CE]  illegal  character:  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNCodec.encode(buf,  0,  c);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
128	[BUG]  [BUGGY]  ®ndecodeBaseNCodec.encode(b,  0,  len);  [CE]  illegal  character:  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNCodec.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNCodec.encode(b,  0,  len);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
129	[BUG]  [BUGGY]  ®bufferedByte.encode(buf,  0,  len);  [CE]  illegal  character:  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedByte.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedByte.encode(buf,  0,  len);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
130	[BUG]  [BUGGY]  ®bufferedBaseNCodec.encode(buf,  0,  len);  [CE]  illegal  character:  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedBaseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedBaseNCodec.encode(buf,  0,  len);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
131	[BUG]  [BUGGY]  ®bufferedNCodec.encode(buf,  0,  len);  [CE]  illegal  character:  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedNCodec.encode(buf,  0,  len);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
132	[BUG]  [BUGGY]  ®ndecodeBaseNCodec.encode(buf,  0,  len,  c);  [CE]  illegal  character:  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNCodec.encode(buf,  0,  len,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNCodec.encode(buf,  0,  len,  c);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
133	[BUG]  [BUGGY]  ®BaseNCodec.encode(buf,  0,  c);  [CE]  illegal  character:  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®BaseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®BaseNCodec.encode(buf,  0,  c);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
134	[BUG]  [BUGGY]  ®baseNCodec.encode(buf,  0,  len);  [CE]  illegal  character:  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®baseNCodec.encode(buf,  0,  len);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
135	[BUG]  [BUGGY]  ®ndecodeBase.encode(buf,  0,  c);  [CE]  illegal  character:  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBase.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBase.encode(buf,  0,  c);	  îndecodeBaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	633	None	replace
136	[BUG]  [BUGGY]  rackBase(baseNCodec,  0,  len);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase(baseNCodec,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase(baseNCodec,  0,  len);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    offset    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol	306	None	replace
137	[BUG]  [BUGGY]  rackBounds(baseNCodec,  0,  len);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBounds(baseNCodec,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBounds(baseNCodec,  0,  len);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    offset    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol	306	None	replace
138	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  readLen);  [CE]  illegal  character:  [FE]        IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  offset,  len,  readLen);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
139	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  doEncode);  [CE]  illegal  character:  [FE]          IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  offset,  len,  doEncode);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
140	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(buf,  offset,  len);  [CE]  illegal  character:  [FE]            IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(buf,  offset,  len);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
141	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len  +  1);  [CE]  illegal  character:  [FE]              IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  offset,  len  +  1);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
142	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(baseNCodec,  offset,  len);  [CE]  illegal  character:  [FE]                IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(baseNCodec,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(baseNCodec,  offset,  len);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
143	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  writeLen);  [CE]  illegal  character:  [FE]                  IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  writeLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  offset,  len,  writeLen);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
144	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  buf);  [CE]  illegal  character:  [FE]                    IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  buf);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  offset,  len,  buf);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
145	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  buf.length);  [CE]  illegal  character:  [FE]                      IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  offset,  len,  buf.length);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
146	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len);  [CE]  illegal  character:  [FE]                        IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  offset,  len);	  îndecodeBaseNonEscaped(b,    offset,    len);    	non-compiled	[CE]  illegal  character:  	511	None	replace
147	[BUG]  [BUGGY]  baseNCodec.decodeBase64(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decodeBase64(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decodeBase64(buf,  0,  len);	  angleEdge.decodeBase64(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	415	None	replace
148	[BUG]  [BUGGY]  BaseNCodec.decodeBase64(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.decodeBase64(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.decodeBase64(buf,  0,  len);	  angleEdge.decodeBase64(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	415	None	replace
149	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decodeBase64(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decodeBase64(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decodeBase64(buf,  0,  len);	  angleEdge.decodeBase64(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	415	None	replace
150	[BUG]  [BUGGY]  BaseNCodec  baseNCodec.decodeBase64(buf,  0,  len);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec.decodeBase64(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec.decodeBase64(buf,  0,  len);	  angleEdge.decodeBase64(buf,    0,    len);    	non-compiled	[CE]  ';'  expected	415	None	replace
151	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec().decodeBase64(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec().decodeBase64(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec().decodeBase64(buf,  0,  len);	  angleEdge.decodeBase64(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	415	None	replace
152	[BUG]  [BUGGY]  BaseNCodec.decodeBase64(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.decodeBase64(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.decodeBase64(buf,  0,  c);	  angleEdge.decodeBase64(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	415	None	replace
153	[BUG]  [BUGGY]  codec.decodeBase64(buf,  0,  len);  [CE]  cannot  find  symbol  codec  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  codec.decodeBase64(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	codec.decodeBase64(buf,  0,  len);	  angleEdge.decodeBase64(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  codec	415	None	replace
154	[BUG]  [BUGGY]  AssertionError  <  Integer>  doEncode  =  doEncode(buf,  0,  c);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Integer>  doEncode  =  doEncode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Integer>  doEncode  =  doEncode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	104	None	replace
155	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
156	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode);  }  [CE]  'else'  without  'if'  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
157	[BUG]  [BUGGY]  AssertionError  <  Integer>  baseNCodec  =  doEncode(buf,  0,  c);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Integer>  baseNCodec  =  doEncode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Integer>  baseNCodec  =  doEncode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	104	None	replace
158	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  doEncode))  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  doEncode))  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  doEncode))  {  baseNCodec.encode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
159	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  doEncode  =  doEncode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  doEncode  =  doEncode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  doEncode  =  doEncode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
160	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  throw  new  IllegalArgumentException( " ");  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  	104	None	replace
161	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  doEncode);  }  [CE]  'else'  without  'if'  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  doEncode);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  doEncode);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Integer>    doEncode    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
162	[BUG]  [BUGGY]  AssertionError  expected  =  doEncode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  expected  =  doEncode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  expected  =  doEncode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
163	[BUG]  [BUGGY]  AssertionError  throws  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  throws  IllegalArgumentException( " ");  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  throws  IllegalArgumentException( " ");	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    	non-compiled	[CE]  not  a  statement	106	None	replace
164	[BUG]  [BUGGY]  AssertionError  throws  InvalidBytegerException( " ");  [CE]  not  a  statement  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  throws  InvalidBytegerException( " ");  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  throws  InvalidBytegerException( " ");	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    	non-compiled	[CE]  not  a  statement	106	None	replace
165	[BUG]  [BUGGY]  AssertionError  throws  IOException( " ");  [CE]  not  a  statement  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  throws  IOException( " ");  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  throws  IOException( " ");	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    	non-compiled	[CE]  not  a  statement	106	None	replace
166	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  e  =  new  AssertionError( "Reading  byte[ "  +  doEncode  + "] ");  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	AssertionError  e  =  new  AssertionError( "Reading  byte[ "  +  doEncode  + "] ");	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    	compilable	timeout	106	1	replace
167	[BUG]  [BUGGY]  AssertionError  e  =  new  AssertionError( "Reading  byte[ "  +  doEncode  + "] ");  timeout  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  e  =  new  AssertionError( "Reading  byte[ "  +  doEncode  + "] ");  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  e  =  new  AssertionError( "Reading  byte[ "  +  doEncode  + "] ");	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    	compilable	timeout	106	1	replace
168	[BUG]  [BUGGY]  timeout  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
169	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
170	[BUG]  [BUGGY]  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
171	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
172	[BUG]  [BUGGY]  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
173	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
174	[BUG]  [BUGGY]  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
175	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
176	[BUG]  [BUGGY]  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
177	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset,  buf,  0,  len);  }  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	compilable	timeout	569	1	replace
178	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    	non-compiled	[CE]  ')'  expected	569	None	replace
179	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  c  +  1,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  c  +  1,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  c  +  1,  len);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	645	None	replace
180	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  offset,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c  +  1,  offset,  len);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)	645	None	replace
181	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  b  +  1,  len);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  b  +  1,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  b  +  1,  len);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	645	None	replace
182	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  len,  offset);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  len,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c  +  1,  len,  offset);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)	645	None	replace
183	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  c  +  1,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  c  +  1,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  c  +  1,  len);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	645	None	replace
184	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  len  +  1,  c);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  len  +  1,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  len  +  1,  c);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	645	None	replace
185	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  buf  +  1,  len);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  buf  +  1,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  buf  +  1,  len);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	645	None	replace
186	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  len  +  1,  buf);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  len  +  1,  buf);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  len  +  1,  buf);	  baseNCodec.encode(buf,    0,    c    +    1,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])	645	None	replace
187	[BUG]  [BUGGY]  baseNCodec.decodeBase(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decodeBase(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decodeBase(buf,  0,  c);	  angleEdge.decodeBase(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	427	None	replace
188	[BUG]  [BUGGY]  BaseNCodec.decodeBase(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.decodeBase(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.decodeBase(buf,  0,  c);	  angleEdge.decodeBase(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	427	None	replace
189	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decodeBase(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decodeBase(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decodeBase(buf,  0,  c);	  angleEdge.decodeBase(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	427	None	replace
190	[BUG]  [BUGGY]  BaseNCodec  baseNCodec.decodeBase(buf,  0,  c);  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec.decodeBase(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec.decodeBase(buf,  0,  c);	  angleEdge.decodeBase(buf,    0,    c);    	non-compiled	[CE]  ';'  expected	427	None	replace
191	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(baseNCodec.decodeBase(buf,  0,  c);  [CE]  ')'  expected  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(baseNCodec.decodeBase(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(baseNCodec.decodeBase(buf,  0,  c);	  angleEdge.decodeBase(buf,    0,    c);    	non-compiled	[CE]  ')'  expected	427	None	replace
192	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  0,  c);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  0,  c);	  angleEdge.decodeBase(buf,    0,    c);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	427	None	replace
193	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  c);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  c);	  angleEdge.decodeBase(buf,    0,    c);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	427	None	replace
194	[BUG]  [BUGGY]  Systems.arraycopy(b,  offset  +  1,  buf,  0,  len);  [CE]  cannot  find  symbol  Systems  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  Systems.arraycopy(b,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	Systems.arraycopy(b,  offset  +  1,  buf,  0,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  Systems	567	None	replace
195	[BUG]  [BUGGY]  sistem.arraycopy(b,  offset  +  1,  buf,  0,  len);  [CE]  cannot  find  symbol  sistem  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  sistem.arraycopy(b,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	sistem.arraycopy(b,  offset  +  1,  buf,  0,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  sistem	567	None	replace
196	[BUG]  [BUGGY]  System.arraycopy(b,  off  +  1,  buf,  0,  len);  [CE]  cannot  find  symbol  off  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  off  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  off  +  1,  buf,  0,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  off	567	None	replace
197	[BUG]  [BUGGY]  system.arraycopy(b,  offset  +  1,  buf,  0,  len);  [CE]  cannot  find  symbol  system  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  system.arraycopy(b,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	system.arraycopy(b,  offset  +  1,  buf,  0,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  system	567	None	replace
198	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  readLen);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  readLen);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
199	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  b,  offset,  len,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  b,  offset,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  b,  offset,  len,  doEncode);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
200	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  readLen);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  len,  readLen);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
201	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  c);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  c);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
202	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  c,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  c,  doEncode);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  0,  buf,  offset,  len,  doEncode);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
204	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  offset,  len,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  offset,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  offset,  len,  doEncode);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
205	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  baseNCodec);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  baseNCodec);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  len,  doEncode,  baseNCodec);	  System.arraycopy(b,    offset,    buf,    offset,    len,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	87	None	replace
206	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	21	add
207	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	21	add
208	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  off  +  1,  buf,  0,  c  +  1);  [CE]  cannot  find  symbol  off  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  off  +  1,  buf,  0,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  off  +  1,  buf,  0,  c  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  off	371	None	add
209	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  b,  0,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  b,  0,  c  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	21	add
210	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  b,  0,  c  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  b,  0,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  b,  0,  c  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	21	add
211	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  0,  len  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  buf,  0,  len  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	25	add
212	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  0,  len  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  0,  len  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  buf,  0,  len  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	25	add
213	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  Buf,  0,  c  +  1);  [CE]  cannot  find  symbol  Buf  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  Buf,  0,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  Buf,  0,  c  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Buf	371	None	add
214	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  2,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  buf,  2,  c  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	21	add
215	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  2,  c  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c  +  1);  System.arraycopy(b,  offset  +  1,  buf,  2,  c  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    offset    +    1,    buf,    0,    c    +    1);    System.arraycopy(b,  offset  +  1,  buf,  2,  c  +  1);	  timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	371	21	add
216	[BUG]  [BUGGY]  rackSingleByte.encode(c,  0,  doEncode);  [CE]  cannot  find  symbol  rackSingleByte  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackSingleByte.encode(c,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackSingleByte.encode(c,  0,  doEncode);	  if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    offset,    len);    }    timeout    	non-compiled	[CE]  cannot  find  symbol  rackSingleByte	678	None	replace
217	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	568	25	replace
218	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	568	25	replace
219	[BUG]  [BUGGY]  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	timeout	568	1	replace
220	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	timeout	568	1	replace
221	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	568	25	replace
222	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	568	25	replace
223	[BUG]  [BUGGY]  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	timeout	568	1	replace
224	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	timeout	568	1	replace
225	[BUG]  [BUGGY]  timeout  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	timeout	568	1	replace
226	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }  timeout  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	timeout	568	1	replace
227	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	568	25	replace
228	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	568	25	replace
229	[BUG]  [BUGGY]  rackBase(baseNCodec.encode(buf,  0,  c));  [CE]  'void'  type  not  allowed  here  [FE]    IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase(baseNCodec.encode(buf,  0,  c));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase(baseNCodec.encode(buf,  0,  c));	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  'void'  type  not  allowed  here	116	None	replace
230	[BUG]  [BUGGY]  îndecodeBaseNCodec.decode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  îndecodeBaseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	îndecodeBaseNCodec.decode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  cannot  find  symbol  	116	None	replace
231	[BUG]  [BUGGY]  ®ndecodeBaseNonByte.encode(b,  0,  doEncode);  [CE]  illegal  character:  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte.encode(b,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte.encode(b,  0,  doEncode);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
232	[BUG]  [BUGGY]  ®bufferedByte.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedByte.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedByte.encode(buf,  0,  doEncode);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
233	[BUG]  [BUGGY]  ®ndecodeBaseNonByte.encode(buf,  0,  c);  [CE]  illegal  character:  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte.encode(buf,  0,  c);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
234	[BUG]  [BUGGY]  ®bNonByte.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                      IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bNonByte.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bNonByte.encode(buf,  0,  doEncode);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
235	[BUG]  [BUGGY]  ®BaseNonByte.encode(b,  0,  doEncode);  [CE]  illegal  character:  [FE]                        IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®BaseNonByte.encode(b,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®BaseNonByte.encode(b,  0,  doEncode);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
236	[BUG]  [BUGGY]  ®bdcodeBaseNonByte.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                          IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bdcodeBaseNonByte.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bdcodeBaseNonByte.encode(buf,  0,  doEncode);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
237	[BUG]  [BUGGY]  ®bufferedNonByte.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                            IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedNonByte.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedNonByte.encode(buf,  0,  doEncode);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
238	[BUG]  [BUGGY]  ®BaseNonByte.encode(buf,  0,  c);  [CE]  illegal  character:  [FE]                              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®BaseNonByte.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®BaseNonByte.encode(buf,  0,  c);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
239	[BUG]  [BUGGY]  ®b.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®b.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®b.encode(buf,  0,  doEncode);	  îndecodeBaseNonByte.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	411	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.encode(buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  AssertionError  	68	24	replace
241	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.encode(buf,  0,  len);  }  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.encode(buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  AssertionError  	68	24	replace
242	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(baseNCodec,  0,  len);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(baseNCodec,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(baseNCodec,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	68	None	replace
243	[BUG]  [BUGGY]  timeout  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.decode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.decode(buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	68	1	replace
244	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.decode(buf,  0,  len);  }  timeout  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.decode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  baseNCodec.decode(buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	68	1	replace
245	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  IllegalArgumentException  	68	25	replace
246	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  IllegalArgumentException  	68	25	replace
247	[BUG]  [BUGGY]  timeout  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	68	1	replace
248	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	68	1	replace
249	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(baseNCodec,  0,  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(baseNCodec,  0,  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  else  {  System.arraycopy(baseNCodec,  0,	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
250	[BUG]  [BUGGY]  rackBase(baseNCodec,  0,  buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase(baseNCodec,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase(baseNCodec,  0,  buf,  offset,  len);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol	628	None	replace
251	[BUG]  [BUGGY]  cast(baseNCodec,  0,  buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec,  0,  buf,  offset,  len);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol	628	None	replace
252	[BUG]  [BUGGY]  rackSingleByte.decode(buf,  0,  c);  [CE]  cannot  find  symbol  rackSingleByte  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackSingleByte.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackSingleByte.decode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol  rackSingleByte	628	None	replace
253	[BUG]  [BUGGY]  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  buf,  0,  b.length);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
254	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  b.length);  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  0,  b.length);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
255	[BUG]  [BUGGY]  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  buf,  0,  len  -  1);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
256	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  len  -  1);  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  0,  len  -  1);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
257	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  -  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  -  1,  buf,  0,  len);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	366	25	replace
258	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  -  1,  buf,  0,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  -  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  -  1,  buf,  0,  len);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	366	25	replace
259	[BUG]  [BUGGY]  timeout  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  buf,  0,  readLen);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
260	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  readLen);  timeout  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  0,  readLen);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
261	[BUG]  [BUGGY]  timeout  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  0,  buf,  offset  +  1,  len);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
262	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset  +  1,  len);  timeout  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  0,  buf,  offset  +  1,  len);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    len);    timeout    	compilable	timeout	366	1	replace
263	[BUG]  [BUGGY]  AssertionError  <  =  doEncode(buf,  0,  readLen);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
264	[BUG]  [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  doEncode(buf,  0,  readLen);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  ';'  expected	489	None	replace
265	[BUG]  [BUGGY]  assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  ';'  expected	489	None	replace
266	[BUG]  [BUGGY]  AssertionError  <?>  baseNCodec  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <?>  baseNCodec  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <?>  baseNCodec  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	489	None	replace
267	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.encode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	compilable	timeout	489	1	replace
268	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  readLen);  timeout  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	compilable	timeout	489	1	replace
269	[BUG]  [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  ';'  expected	489	None	replace
270	[BUG]  [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  doEncode(buf,  0,  len);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  doEncode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  doEncode(buf,  0,  len);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  ';'  expected	489	None	replace
271	[BUG]  [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  null;  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  null;  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <?>  baseNCodec.encode(buf,  0,  readLen):  null;	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  ';'  expected	489	None	replace
272	[BUG]  [BUGGY]  AssertionError  <  =  doEncode(buf,  1,  readLen);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  =  doEncode(buf,  1,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  =  doEncode(buf,  1,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
273	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  doEncode);	  System.arraycopy(b,    offset,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	523	None	replace
274	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  buffer,  doEncode);  [CE]  cannot  find  symbol  buffer  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  buffer,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  buffer,  doEncode);	  System.arraycopy(b,    offset,    buf,    buffer,    doEncode);    	non-compiled	[CE]  cannot  find  symbol  buffer	523	None	replace
275	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  readLen,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  readLen,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  readLen,  doEncode);	  System.arraycopy(b,    offset,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	523	None	replace
276	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  offset,  doEncode);	  System.arraycopy(b,    offset,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	523	None	replace
277	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  len,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  len,  doEncode);	  System.arraycopy(b,    offset,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	523	None	replace
278	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  b,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  b,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  b,  doEncode);	  System.arraycopy(b,    offset,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	523	None	replace
279	[BUG]  [BUGGY]  îndecodeBaseNCodec.decode(b,  0,  c);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  îndecodeBaseNCodec.decode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	îndecodeBaseNCodec.decode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(doEncode)    {    baseNCodec.decode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  	574	None	replace
280	[BUG]  [BUGGY]  rackBase(baseNCodec,  0,  readLen);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase(baseNCodec,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase(baseNCodec,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode    ||    readLen    <    =    0)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	642	None	replace
281	[BUG]  [BUGGY]  castError(baseNCodec.encode(buf,  0,  c),  readLen);  [CE]  'void'  type  not  allowed  here  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(buf,  0,  c),  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(buf,  0,  c),  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode    ||    readLen    <    =    0)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	642	None	replace
282	[BUG]  [BUGGY]  rackSingleByte.encode(b,  0,  c);  [CE]  cannot  find  symbol  rackSingleByte  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackSingleByte.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackSingleByte.encode(b,  0,  c);	  if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    timeout    	non-compiled	[CE]  cannot  find  symbol  rackSingleByte	285	None	replace
283	[BUG]  [BUGGY]  rackBounds(b,  0,  len);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBounds(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBounds(b,  0,  len);	  if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    timeout    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
284	[BUG]  [BUGGY]  rackBounds(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBounds(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBounds(buf,  0,  len);	  if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    timeout    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
285	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
286	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
287	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	230	19	add
288	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	230	19	add
289	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
290	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
291	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
292	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
293	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {	  	non-compiled	[CE]  ';'  expected	230	None	add
294	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  buf);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[])  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  buf);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  buf);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[])	230	None	add
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
296	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
298	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	230	19	add
299	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int,int)  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int,int)	230	None	add
300	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  BaseNCodec  baseNCodec  =  getBaseNCodec();  if(baseNCodec!=  null)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  BaseNCodec  baseNCodec  =  getBaseNCodec();  if(baseNCodec!=  null)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        System.arraycopy(b,        0,        buf,        offset,        len);        }        if(doEncode)    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  BaseNCodec  baseNCodec  =  getBaseNCodec();  if(baseNCodec!=  null)  {  baseNCodec.encode(buf,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	230	None	add
301	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();  [CE]  cannot  find  symbol  base  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =(BaseNCodec)base.read();	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =(BaseNCodec)base.read();    	non-compiled	[CE]  cannot  find  symbol  base	530	None	replace
302	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();  [CE]  cannot  find  symbol  base  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =(BaseNCodec)base.read();    	non-compiled	[CE]  cannot  find  symbol  base	530	None	replace
303	[BUG]  [BUGGY]  baseNCodec  =(BaseNCodec)base.read();  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =(BaseNCodec)base.read();  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =(BaseNCodec)base.read();	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =(BaseNCodec)base.read();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	530	None	replace
304	[BUG]  [BUGGY]  baseNCodec.decode(b,  0,  len);  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();  [CE]  cannot  find  symbol  base  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(b,  0,  len);  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(b,  0,  len);  BaseNCodec  baseNCodec  =(BaseNCodec)base.read();	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =(BaseNCodec)base.read();    	non-compiled	[CE]  cannot  find  symbol  base	530	None	replace
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	191	19	add
306	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	191	19	add
307	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol	191	None	add
308	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol	191	None	add
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	191	19	add
310	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	191	19	add
311	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  off,  len);  [CE]  cannot  find  symbol  off  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  off,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  off,  len);	  	non-compiled	[CE]  cannot  find  symbol  off	191	None	add
312	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  off,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [CE]  cannot  find  symbol  off  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  off,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  off,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol  off	191	None	add
313	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  system.arraycopy(b,  0,  buf,  offset,  len);  [CE]  cannot  find  symbol  system  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  system.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  system.arraycopy(b,  0,  buf,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol  system	191	None	add
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	191	19	add
315	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(buf,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	191	19	add
316	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
317	[BUG]  [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
318	[BUG]  [BUGGY]  timeout  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	timeout	675	1	add
319	[BUG]  [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  timeout  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	timeout	675	1	add
320	[BUG]  [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  If(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  If(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    If(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	675	None	add
321	[BUG]  [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  BaseNCodec.encode(b,  0,  c);  }  [CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  BaseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  BaseNCodec.encode(b,  0,  c);  }	  	non-compiled	[CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context	675	None	add
322	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.decode(b,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
323	[BUG]  [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.decode(b,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
324	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
325	[BUG]  [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
326	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  1,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  1,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
327	[BUG]  [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  1,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(!doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(!doEncode)  {  baseNCodec.encode(b,  1,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)  {  baseNCodec.encode(b,  1,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	675	20	add
328	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b,  offset,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b,  offset,  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	170	None	replace
329	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length,  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	170	None	replace
330	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  offset,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(b,  0,  offset,  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	170	None	replace
331	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length,  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	170	None	replace
332	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  len,  readLen);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  len,  readLen);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  len,  readLen);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	170	None	replace
333	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf,  offset,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf,  offset,  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	170	None	replace
334	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buffer.length,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buffer.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buffer.length,  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	170	None	replace
335	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
336	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
337	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
338	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
339	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
340	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
341	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	311	None	add
342	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
343	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
344	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
345	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
346	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
347	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  =  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	311	21	add
348	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {	  	non-compiled	[CE]  ';'  expected	311	None	add
349	[BUG]  [BUGGY]  baseNCodec.decodeBaseCode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decodeBaseCode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decodeBaseCode(buf,  0,  c);	  angleEdge.decodeBaseCode(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	425	None	replace
350	[BUG]  [BUGGY]  BaseNCodec.decodeBaseCode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.decodeBaseCode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.decodeBaseCode(buf,  0,  c);	  angleEdge.decodeBaseCode(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	425	None	replace
351	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decodeBaseCode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decodeBaseCode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decodeBaseCode(buf,  0,  c);	  angleEdge.decodeBaseCode(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	425	None	replace
352	[BUG]  [BUGGY]  BaseNCodec  baseNCodec.decodeBaseCode(buf,  0,  c);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec.decodeBaseCode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec.decodeBaseCode(buf,  0,  c);	  angleEdge.decodeBaseCode(buf,    0,    c);    	non-compiled	[CE]  ';'  expected	425	None	replace
353	[BUG]  [BUGGY]  codec.decodeBaseCode(buf,  0,  c);  [CE]  cannot  find  symbol  codec  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  codec.decodeBaseCode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	codec.decodeBaseCode(buf,  0,  c);	  angleEdge.decodeBaseCode(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  codec	425	None	replace
354	[BUG]  [BUGGY]  grundNCodec.decodeBaseCode(buf,  0,  c);  [CE]  cannot  find  symbol  grundNCodec  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  grundNCodec.decodeBaseCode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	grundNCodec.decodeBaseCode(buf,  0,  c);	  angleEdge.decodeBaseCode(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  grundNCodec	425	None	replace
355	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
356	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
357	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
358	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
359	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
360	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
361	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
362	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	540	19	add
363	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	540	20	add
364	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  c);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	540	20	add
365	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  this.baseNCodec.decode(buf,  0,  len);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  this.baseNCodec.decode(buf,  0,  len);	  	non-compiled	[CE]  ')'  expected	540	None	add
366	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(c,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(c,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	540	25	add
367	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(c,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [FE]  ArrayStoreException  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(c,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(c,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	540	25	add
368	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  system.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [CE]  cannot  find  symbol  system  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  system.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    this.baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  system.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  system	540	None	add
369	[BUG]  [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(buf,  0,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  baseNCodec.decode(buf,  0,  len);	  BaseNCodec    buf    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	56	None	replace
370	[BUG]  [BUGGY]  BaseNCodec  buf  =  baseNCodec.encode(buf,  0,  c);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  baseNCodec.encode(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  baseNCodec.encode(buf,  0,  c);	  BaseNCodec    buf    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	56	None	replace
371	[BUG]  [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(buf,  0,  c  +  1);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(buf,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  baseNCodec.decode(buf,  0,  c  +  1);	  BaseNCodec    buf    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	56	None	replace
372	[BUG]  [BUGGY]  BaseNCodec  buf  =  baseNCodec.decodeByte(buf,  0,  c);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  baseNCodec.decodeByte(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  baseNCodec.decodeByte(buf,  0,  c);	  BaseNCodec    buf    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	56	None	replace
373	[BUG]  [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(b,  0,  c,  offset);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(b,  0,  c,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  baseNCodec.decode(b,  0,  c,  offset);	  BaseNCodec    buf    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	56	None	replace
374	[BUG]  [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(b,  0,  c,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  baseNCodec.decode(b,  0,  c,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  baseNCodec.decode(b,  0,  c,  len);	  BaseNCodec    buf    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	56	None	replace
375	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	171	25	add
376	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	171	25	add
377	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	171	25	add
378	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	171	25	add
379	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	171	None	add
380	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	171	None	add
381	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	171	None	add
382	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	171	None	add
383	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	171	None	add
384	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	171	None	add
385	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	171	None	add
386	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	345	25	replace
387	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	345	25	replace
388	[BUG]  [BUGGY]  timeout  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
389	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  timeout  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
390	[BUG]  [BUGGY]  timeout  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
391	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }  timeout  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
392	[BUG]  [BUGGY]  timeout  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
393	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  timeout  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
394	[BUG]  [BUGGY]  timeout  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
395	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }  timeout  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	timeout	345	1	replace
396	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  else  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(b,  offset  +  1,  len);  }  else  {	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	non-compiled	[CE]  ';'  expected	345	None	replace
397	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	345	25	replace
398	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(b,  offset  +  1,  len);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    baseNCodec.decode(b,    offset    +    1,    len);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	345	25	replace
399	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
400	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
401	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
402	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
403	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	299	None	add
404	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	299	None	add
405	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
406	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
407	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(DoEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [CE]  cannot  find  symbol  DoEncode  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(DoEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(DoEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }	  	non-compiled	[CE]  cannot  find  symbol  DoEncode	299	None	add
408	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
409	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	299	21	add
410	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	299	None	add
411	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        offset        +=        len;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    offset    +=    len;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {	  	non-compiled	[CE]  ';'  expected	299	None	add
412	[BUG]  [BUGGY]  rackBaseNCodec.encode(b,  0,  c);  [CE]  cannot  find  symbol  rackBaseNCodec  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBaseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBaseNCodec.encode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol  rackBaseNCodec	187	None	replace
413	[BUG]  [BUGGY]  rackBase.encode(b,  0,  c);  [CE]  cannot  find  symbol  rackBase  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase.encode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol  rackBase	187	None	replace
414	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
415	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
416	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
417	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
418	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
419	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
420	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
421	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	263	25	add
422	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	263	None	add
423	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	263	None	add
424	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isSingleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isSingleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(isSingleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	263	None	add
425	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isSingleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(isSingleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(isSingleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	263	None	add
426	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset,  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    len,    offset);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	168	None	replace
427	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b,  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b,  offset);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    len,    offset);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	168	None	replace
428	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset,  readLen);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset,  readLen);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset,  readLen);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    len,    offset);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	168	None	replace
429	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset  +  1);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len,  offset  +  1);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    len,    offset);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	168	None	replace
430	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  len,  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  len,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(b,  0,  len,  offset);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    len,    offset);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	168	None	replace
431	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length,  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length,  offset);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    len,    offset);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	168	None	replace
432	[BUG]  [BUGGY]  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.clone();    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	130	None	replace
433	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.clone();    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	130	None	replace
434	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.clone();    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	130	None	replace
435	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.clone();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.clone();    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	130	None	replace
436	[BUG]  [BUGGY]  b  =(BaseNCodec)this.singleByte.clone();  [CE]  inconvertible  types  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b  =(BaseNCodec)this.singleByte.clone();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b  =(BaseNCodec)this.singleByte.clone();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.clone();    	non-compiled	[CE]  inconvertible  types	130	None	replace
437	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.encode(buf,  0,  c  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.encode(buf,  0,  c  +  1);  }	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	compilable	timeout	212	1	replace
438	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.encode(buf,  0,  c  +  1);  }  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.encode(buf,  0,  c  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.encode(buf,  0,  c  +  1);  }	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	compilable	timeout	212	1	replace
439	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  bufferNCodec.encode(buf,  0,  c  +  1);  }  [CE]  cannot  find  symbol  bufferNCodec  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  bufferNCodec.encode(buf,  0,  c  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  bufferNCodec.encode(buf,  0,  c  +  1);  }	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	non-compiled	[CE]  cannot  find  symbol  bufferNCodec	212	None	replace
440	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	compilable	timeout	212	1	replace
441	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  timeout  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	compilable	timeout	212	1	replace
442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	compilable	  [FE]  IllegalArgumentException  	212	25	replace
443	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	compilable	  [FE]  IllegalArgumentException  	212	25	replace
444	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  c  +  1);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.encode(buf,    0,    c    +    1);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	212	None	replace
445	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	499	25	add
446	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	499	25	add
447	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	499	25	add
448	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	499	25	add
449	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  BaseNCodec.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  BaseNCodec.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    BaseNCodec.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol	499	None	add
450	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  len);  [CE]  cannot  find  symbol  system  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  system	499	None	add
451	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	499	25	add
452	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    len);    System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	499	25	add
453	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(buf);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(buf);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(buf);	  BaseNCodec    baseNCodec    =    getBaseNCodec(baseNIndex);    	non-compiled	[CE]  cannot  find  symbol	532	None	replace
454	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(len);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(len);	  BaseNCodec    baseNCodec    =    getBaseNCodec(baseNIndex);    	non-compiled	[CE]  cannot  find  symbol	532	None	replace
455	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(b);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(b);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(b);	  BaseNCodec    baseNCodec    =    getBaseNCodec(baseNIndex);    	non-compiled	[CE]  cannot  find  symbol	532	None	replace
456	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(baseNCodec);  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(baseNCodec);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(baseNCodec);	  BaseNCodec    baseNCodec    =    getBaseNCodec(baseNIndex);    	non-compiled	[CE]  cannot  find  symbol	532	None	replace
457	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(p);  [CE]  cannot  find  symbol  p  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(p);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(p);	  BaseNCodec    baseNCodec    =    getBaseNCodec(baseNIndex);    	non-compiled	[CE]  cannot  find  symbol  p	532	None	replace
458	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(buf,  c);  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(buf,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(buf,  c);	  BaseNCodec    baseNCodec    =    getBaseNCodec(baseNIndex);    	non-compiled	[CE]  cannot  find  symbol	532	None	replace
459	[BUG]  [BUGGY]  enforcer(baseNCodec).encode(buf,  0,  doEncode);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(baseNCodec).encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(baseNCodec).encode(buf,  0,  doEncode);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
460	[BUG]  [BUGGY]  enforcer(c).encode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(c).encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(c).encode(buf,  0,  c);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
461	[BUG]  [BUGGY]  enforcer(b).encode(buf,  0,  doEncode);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(b).encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(b).encode(buf,  0,  doEncode);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
462	[BUG]  [BUGGY]  enforcer(c).encode(buf,  0,  doEncode,  baseNCodec);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(c).encode(buf,  0,  doEncode,  baseNCodec);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(c).encode(buf,  0,  doEncode,  baseNCodec);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
463	[BUG]  [BUGGY]  enforcer(c).encode(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(c).encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(c).encode(buf,  0,  len);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
464	[BUG]  [BUGGY]  enforcer(c).encode(buf,  0,  b);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(c).encode(buf,  0,  b);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(c).encode(buf,  0,  b);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
465	[BUG]  [BUGGY]  enforcer(c).encode(buf,  0,  doEncode,  c);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(c).encode(buf,  0,  doEncode,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(c).encode(buf,  0,  doEncode,  c);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
466	[BUG]  [BUGGY]  enforcer(c),  baseNCodec.encode(buf,  0,  doEncode);  [CE]  ';'  expected  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  enforcer(c),  baseNCodec.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	enforcer(c),  baseNCodec.encode(buf,  0,  doEncode);	  enforcer(c).encode(buf,    0,    doEncode);    	non-compiled	[CE]  ';'  expected	28	None	replace
467	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  len);  [CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  len);	  rackSingleByte.encode(b,    0,    len);    	non-compiled	[CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context	288	None	replace
468	[BUG]  [BUGGY]  BYTE.encode(b,  0,  len);  [CE]  cannot  find  symbol  BYTE  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BYTE.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BYTE.encode(b,  0,  len);	  rackSingleByte.encode(b,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  BYTE	288	None	replace
469	[BUG]  [BUGGY]  Byte.encode(b,  0,  len);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  Byte.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	Byte.encode(b,  0,  len);	  rackSingleByte.encode(b,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	288	None	replace
470	[BUG]  [BUGGY]  BaseNCodec  baseNCodec.encode(b,  0,  len);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec.encode(b,  0,  len);	  rackSingleByte.encode(b,    0,    len);    	non-compiled	[CE]  ';'  expected	288	None	replace
471	[BUG]  [BUGGY]  b.encode(b,  0,  len);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b.encode(b,  0,  len);	  rackSingleByte.encode(b,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	288	None	replace
472	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);	  timeout    	compilable	  [FE]  AssertionError  	447	14	add
473	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);	  timeout    	compilable	  [FE]  AssertionError  	447	14	add
474	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
475	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  len);  [FE]  AssertionError  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
476	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  system.arraycopy(b,  0,  buf,  0,  offset);  [CE]  cannot  find  symbol  system  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  system.arraycopy(b,  0,  buf,  0,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  system.arraycopy(b,  0,  buf,  0,  offset);	  timeout    	non-compiled	[CE]  cannot  find  symbol  system	447	None	add
477	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
478	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  len);  [FE]  AssertionError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
479	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  system.arraycopy(b,  0,  buf,  0,  len);  [CE]  cannot  find  symbol  system  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  system.arraycopy(b,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  system.arraycopy(b,  0,  buf,  0,  len);	  timeout    	non-compiled	[CE]  cannot  find  symbol  system	447	None	add
480	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  offset);	  timeout    	compilable	  [FE]  AssertionError  	447	14	add
481	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  offset);  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  offset);	  timeout    	compilable	  [FE]  AssertionError  	447	14	add
482	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  off);  [CE]  cannot  find  symbol  off  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  off);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  off);	  timeout    	non-compiled	[CE]  cannot  find  symbol  off	447	None	add
483	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
484	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  len);  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);System.arraycopy(b,  0,  buf,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
485	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(b,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	17	add
486	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(b,  0,  len);  [FE]  AssertionError  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(b,  0,  len);	  timeout    	compilable	  [FE]  AssertionError  	447	17	add
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  c);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
488	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  c);  [FE]  AssertionError  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  0,  offset);  System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,    0,    buf,    0,    offset);    System.arraycopy(b,  0,  buf,  0,  offset);  baseNCodec.decode(buf,  0,  c);	  timeout    	compilable	  [FE]  AssertionError  	447	19	add
489	[BUG]  [BUGGY]  AssertionError  <  Object>  doEncode  =  asEncoding();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  doEncode  =  asEncoding();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  doEncode  =  asEncoding();	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Object>    doEncode    =    asEncoding();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	550	None	replace
490	[BUG]  [BUGGY]  AssertionError  <  Object>  baseNCodec  =  asEncoding();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  baseNCodec  =  asEncoding();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  baseNCodec  =  asEncoding();	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Object>    doEncode    =    asEncoding();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	550	None	replace
491	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  doEncode);  [CE]  no  suitable  method  found  for  encode(byte[],int,boolean)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  doEncode);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Object>    doEncode    =    asEncoding();    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,boolean)	550	None	replace
492	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Object>    doEncode    =    asEncoding();    	non-compiled	[CE]  'else'  without  'if'	550	None	replace
493	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  doEncode);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  doEncode);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  doEncode);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Object>    doEncode    =    asEncoding();    	non-compiled	[CE]  'else'  without  'if'	550	None	replace
494	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(buf,  doEncode);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingException(buf,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	aughtExceptionHandler.handleMissingException(buf,  doEncode);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Object>    doEncode    =    asEncoding();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	550	None	replace
495	[BUG]  [BUGGY]  AssertionError  <  Object>  doEncode  =  asEncoding().encode(buf,  0,  doEncode);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  doEncode  =  asEncoding().encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  doEncode  =  asEncoding().encode(buf,  0,  doEncode);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    Object>    doEncode    =    asEncoding();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	550	None	replace
496	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);	  	compilable	  [FE]  AssertionError  	213	18	add
497	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);	  	compilable	  [FE]  AssertionError  	213	18	add
498	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    BaseNCodec  baseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);	  	non-compiled	[CE]  ';'  expected	213	None	add
499	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    BaseNCodec.decode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);	  	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	213	None	add
500	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  BaseNCodec.decode(buf,  1,  c  +  1);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  BaseNCodec.decode(buf,  1,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    baseNCodec.decode(buf,  0,  c  +  1);  BaseNCodec.decode(buf,  1,  c  +  1);	  	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	213	None	add
501	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec  =  baseNCodec.encode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec  =  baseNCodec.encode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    BaseNCodec  baseNCodec  =  baseNCodec.encode(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);	  	non-compiled	[CE]  incompatible  types	213	None	add
502	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    baseNCodec.decode(buf,  0,  c  +  1);	  	compilable	  [FE]  AssertionError  	213	19	add
503	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  baseNCodec.decode(buf,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    baseNCodec.decode(buf,  0,  c  +  1);	  	compilable	  [FE]  AssertionError  	213	19	add
504	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  0,  c  +  1);  baseNCodec.decode(buf,  1,  c  +  1);	  	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	213	None	add
505	[BUG]  [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec  =  getBaseNCodec();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,    0,    c    +    1);    baseNCodec.decode(buf,  1,  c  +  1);  BaseNCodec  baseNCodec  =  getBaseNCodec();  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,        0,        c        +        1);        baseNCodec.decode(buf,    1,    c    +    1);    BaseNCodec  baseNCodec  =  getBaseNCodec();	  	non-compiled	[CE]  cannot  find  symbol	213	None	add
506	[BUG]  [BUGGY]  BaseNCodec  b  =  getByte(offset);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  getByte(offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  getByte(offset);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	484	None	replace
507	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  getByte(offset);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  getByte(offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  getByte(offset);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	484	None	replace
508	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  getByte(offset);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  getByte(offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  getByte(offset);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	484	None	replace
509	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  b  =  getByte(offset);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  b  =  getByte(offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  len);  BaseNCodec  b  =  getByte(offset);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	484	None	replace
510	[BUG]  [BUGGY]  BaseNCodec  b  =  getByte(offset,  len);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  getByte(offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  getByte(offset,  len);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	484	None	replace
511	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  len);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  len);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    len);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	651	None	replace
512	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(b.length,  len);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(b.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(b.length,  len);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	651	None	replace
513	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  len);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  len);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    len);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	651	None	replace
514	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  len);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  len);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    len);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	651	None	replace
515	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(b,  0,  len);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(b,  0,  len);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	651	None	replace
516	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  offset  +  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  offset  +  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  offset  +  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
517	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length  +  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length  +  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  buf.length  +  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
518	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
519	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b  +  offset);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
520	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len  +  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len  +  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len  +  offset);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
521	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  offset  +  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  offset  +  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(b,  0,  offset  +  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
522	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  +  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  +  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  +  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
523	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  bOffset  +  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  bOffset  +  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  bOffset  +  len);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
524	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset  +  len,  readLen);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset  +  len,  readLen);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset  +  len,  readLen);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    offset    +    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	167	None	replace
525	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  buf.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.decode(buf,  0,  buf.length);	  BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	673	None	replace
526	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset);	  BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	673	None	replace
527	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len  +  1);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len  +  1);	  BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	673	None	replace
528	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len,  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len,  offset);	  BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	673	None	replace
529	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(b,  0,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.decode(b,  0,  len);	  BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	673	None	replace
530	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset,  len);	  BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	673	None	replace
531	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset  +  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset  +  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.decode(buf,  0,  offset  +  len);	  BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	673	None	replace
532	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  len);  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	357	None	replace
533	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  len);  BaseNCodec  c  =  baseNCodec.decode(buf,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	357	None	replace
534	[BUG]  [BUGGY]  c  =  baseNCodec.decode(buf,  0,  len);  [CE]  incompatible  types  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  c  =  baseNCodec.decode(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	c  =  baseNCodec.decode(buf,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    c    =    baseNCodec.decode(buf,    0,    len);    	non-compiled	[CE]  incompatible  types	357	None	replace
535	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
536	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
537	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  system.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  [CE]  cannot  find  symbol  system  [FE]      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  system.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  system.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  system	584	None	add
538	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
539	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
540	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  }	  	compilable	  [FE]  ArrayStoreException  	584	25	add
541	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  }  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  }	  	compilable	  [FE]  ArrayStoreException  	584	25	add
542	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  this.singleByte  =  doEncode(buf,  0,  len);  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]            ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  this.singleByte  =  doEncode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  this.singleByte  =  doEncode(buf,  0,  len);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	584	None	add
543	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]              ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  ArrayStoreException  	584	25	add
544	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [FE]  ArrayStoreException  [FE]              ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  ArrayStoreException  	584	25	add
545	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  }	  	compilable	  [FE]  ArrayStoreException  	584	25	add
546	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  }  [FE]  ArrayStoreException  [FE]                ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  }	  	compilable	  [FE]  ArrayStoreException  	584	25	add
547	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                  ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
548	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);  [FE]  ArrayStoreException  [FE]                  ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
549	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
550	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  [FE]  ArrayStoreException  [FE]                    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	584	25	add
551	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  this.singleByte  =  doEncode(b,  offset  +  1,  len);  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  this.singleByte  =  doEncode(b,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  len);  this.singleByte  =  doEncode(b,  offset  +  1,  len);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	584	None	add
552	[BUG]  [BUGGY]  baseNCodec  =  baseNCodec.decode(buf,  0,  c);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  baseNCodec.decode(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  baseNCodec.decode(buf,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	537	None	replace
553	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(b,  0,  c);  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(b,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(b,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  incompatible  types	537	None	replace
554	[BUG]  [BUGGY]  baseNCodec  =  baseNCodec.decode(b,  0,  c);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  baseNCodec.decode(b,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  baseNCodec.decode(b,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	537	None	replace
555	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  inputLen);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  inputLen);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(b,  0,  inputLen);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    inputLen);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	505	None	replace
556	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  inputLen);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  inputLen);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  inputLen);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    inputLen);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	505	None	replace
557	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  inputLen  +  1);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  inputLen  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  inputLen  +  1);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    inputLen);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	505	None	replace
558	[BUG]  [BUGGY]  angle2D.encode(b,  0,  c);  [CE]  cannot  find  symbol  angle2D  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  angle2D.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	angle2D.encode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol  angle2D	179	None	replace
559	[BUG]  [BUGGY]  timeout  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset,  b,  0,  len);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	timeout	314	1	replace
560	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  0,  len);  timeout  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  0,  len);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	timeout	314	1	replace
561	[BUG]  [BUGGY]  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset,  buf,  0,  len  -  1);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	timeout	314	1	replace
562	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  len  -  1);  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  len  -  1);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	timeout	314	1	replace
563	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  len  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset,  buf,  0,  len  +  1);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	314	25	replace
564	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  len  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  len  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  len  +  1);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	314	25	replace
565	[BUG]  [BUGGY]  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset,  buf,  0,  readLen);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	timeout	314	1	replace
566	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  readLen);  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  readLen);	  System.arraycopy(b,    offset,    buf,    0,    len);    timeout    	compilable	timeout	314	1	replace
567	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
568	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
569	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);	  	non-compiled	[CE]  ';'  expected	186	None	add
570	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  when(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  when(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    when(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	186	None	add
571	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
572	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
573	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
574	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
576	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
577	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
578	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
579	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
580	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	  	compilable	  [FE]  AssertionError  	186	12	add
581	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  when(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  when(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(b,        0,        c);        }        while(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    when(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  while(doEncode)  {  baseNCodec.decode(b,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	186	None	add
582	[BUG]  [BUGGY]  AssertionError  <  =  doEncode(buf,  0,  c);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  =  doEncode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  =  doEncode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  illegal  start  of  type	547	None	replace
583	[BUG]  [BUGGY]  assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  ';'  expected	547	None	replace
584	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	547	None	replace
585	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	547	None	replace
586	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  doEncode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	547	None	replace
587	[BUG]  [BUGGY]  assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	assertEquals(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  ';'  expected	547	None	replace
588	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  c);  }  AssertionError  <  =  doEncode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	547	None	replace
589	[BUG]  [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  if(!baseNCodec.encode(buf,  0,  c))  {  baseNCodec.encode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    AssertionError    <    =    doEncode(buf,    0,    c);    	non-compiled	[CE]  'else'  without  'if'	547	None	replace
590	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	149	19	add
591	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	149	19	add
592	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
593	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
594	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    baseNCodec.encode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	149	20	add
595	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  baseNCodec.encode(buf,  0,  c);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    baseNCodec.encode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	149	20	add
596	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	149	19	add
597	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	149	19	add
598	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
599	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
600	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
601	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
602	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
603	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
604	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
605	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	149	19	add
606	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  BaseNCodec  baseNCodec  =  getBaseNCodec();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  BaseNCodec  baseNCodec  =  getBaseNCodec();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    BaseNCodec  baseNCodec  =  getBaseNCodec();	  	non-compiled	[CE]  cannot  find  symbol	149	None	add
607	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.encode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	149	20	add
608	[BUG]  [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.encode(buf,  0,  c);  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          baseNCodec.encode(buf,    0,    c);    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                baseNCodec.encode(buf,        0,        c);        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.encode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	149	20	add
609	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	670	None	replace
610	[BUG]  [BUGGY]  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  baseNCodec.read(buf,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(buf,    0,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	670	None	replace
611	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	670	None	replace
612	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  len);  BaseNCodec  baseNCodec  =  baseNCodec.read(buf,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	670	None	replace
613	[BUG]  [BUGGY]  castError(baseNCodec.encode(b,  0,  c));  [CE]  'void'  type  not  allowed  here  [FE]        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(b,  0,  c));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(b,  0,  c));	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	328	None	replace
614	[BUG]  [BUGGY]  castError(baseNCodec.encode(buf,  0,  len));  [CE]  'void'  type  not  allowed  here  [FE]          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(buf,  0,  len));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(buf,  0,  len));	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	328	None	replace
615	[BUG]  [BUGGY]  setError(baseNCodec.encode(buf,  0,  c));  [CE]  'void'  type  not  allowed  here  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  setError(baseNCodec.encode(buf,  0,  c));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	setError(baseNCodec.encode(buf,  0,  c));	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	328	None	replace
616	[BUG]  [BUGGY]  castError(baseNCodec.encode(buf,  0,  c),  len);  [CE]  'void'  type  not  allowed  here  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(buf,  0,  c),  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(buf,  0,  c),  len);	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	328	None	replace
617	[BUG]  [BUGGY]  castError(baseNCodec.encode(buf,  0,  c),  doEncode);  [CE]  'void'  type  not  allowed  here  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(buf,  0,  c),  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(buf,  0,  c),  doEncode);	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	328	None	replace
618	[BUG]  [BUGGY]  castError(baseNCodec.encode(buf,  0,  buf.length));  [CE]  'void'  type  not  allowed  here  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(buf,  0,  buf.length));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(buf,  0,  buf.length));	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	328	None	replace
619	[BUG]  [BUGGY]  joinError(baseNCodec.encode(buf,  0,  c));  [CE]  'void'  type  not  allowed  here  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  joinError(baseNCodec.encode(buf,  0,  c));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	joinError(baseNCodec.encode(buf,  0,  c));	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	328	None	replace
620	[BUG]  [BUGGY]  castError(baseNCodec.encode(buf,  0,  b));  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[])  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(buf,  0,  b));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(buf,  0,  b));	  castError(baseNCodec.encode(buf,    0,    c));    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[])	328	None	replace
621	[BUG]  [BUGGY]  timeout  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }	  baseNCodec.encode(buf,    0,    len);    BaseNCodec    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	270	1	replace
622	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  timeout  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }	  baseNCodec.encode(buf,    0,    len);    BaseNCodec    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	270	1	replace
623	[BUG]  [BUGGY]  BaseNCodec  baseNCodec.encode(buf,  0,  len);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec.encode(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec.encode(buf,  0,  len);	  baseNCodec.encode(buf,    0,    len);    BaseNCodec    baseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  ';'  expected	270	None	replace
624	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  BaseNCodec  baseNCodec.encode(buf,  0,  len);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  BaseNCodec  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  BaseNCodec  baseNCodec.encode(buf,  0,  len);  }	  baseNCodec.encode(buf,    0,    len);    BaseNCodec    baseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  ';'  expected	270	None	replace
625	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  baseNCodec.encode(buf,    0,    len);    BaseNCodec    baseNCodec.encode(buf,    0,    len);    	compilable	  [FE]  IllegalArgumentException  	270	25	replace
626	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  baseNCodec.encode(buf,    0,    len);    BaseNCodec    baseNCodec.encode(buf,    0,    len);    	compilable	  [FE]  IllegalArgumentException  	270	25	replace
627	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  -  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  -  1,  buf,  0,  c);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	368	25	replace
628	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  -  1,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  -  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  -  1,  buf,  0,  c);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	368	25	replace
629	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset  +  1,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  0,  buf,  offset  +  1,  c);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	368	25	replace
630	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset  +  1,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset  +  1,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  0,  buf,  offset  +  1,  c);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	368	25	replace
631	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  buf,  0,  c  -  1);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	368	25	replace
632	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c  -  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  0,  c  -  1);	  System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	368	25	replace
633	[BUG]  [BUGGY]  cast(baseNCodec.encode(b,  0,  doEncode));  [CE]  no  suitable  method  found  for  encode(byte[],int,boolean)  [FE]          IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.encode(b,  0,  doEncode));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.encode(b,  0,  doEncode));	  cast(baseNCodec.encode(buf,    0,    doEncode));    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,boolean)	297	None	replace
634	[BUG]  [BUGGY]  cast(baseNCodec.encode(buf,  0,  c),  doEncode);  [CE]  'void'  type  not  allowed  here  [FE]            IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.encode(buf,  0,  c),  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.encode(buf,  0,  c),  doEncode);	  cast(baseNCodec.encode(buf,    0,    doEncode));    	non-compiled	[CE]  'void'  type  not  allowed  here	297	None	replace
635	[BUG]  [BUGGY]  cast(baseNCodec.encode(buf,  0,  c),  doEncode));  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.encode(buf,  0,  c),  doEncode));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.encode(buf,  0,  c),  doEncode));	  cast(baseNCodec.encode(buf,    0,    doEncode));    	non-compiled	[CE]  ';'  expected	297	None	replace
636	[BUG]  [BUGGY]  cast(baseNCodec.encode(buf,  0,  c,  doEncode));  [CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean)  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.encode(buf,  0,  c,  doEncode));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.encode(buf,  0,  c,  doEncode));	  cast(baseNCodec.encode(buf,    0,    doEncode));    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean)	297	None	replace
637	[BUG]  [BUGGY]  if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  no  suitable  method  found  for  encode(byte[],int,boolean)  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  else  {  throw  new  IllegalStateException( " ");  }	  cast(baseNCodec.encode(buf,    0,    doEncode));    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,boolean)	297	None	replace
638	[BUG]  [BUGGY]  if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  [CE]  no  suitable  method  found  for  encode(byte[],int,boolean)  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }	  cast(baseNCodec.encode(buf,    0,    doEncode));    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,boolean)	297	None	replace
639	[BUG]  [BUGGY]  if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [CE]  no  suitable  method  found  for  encode(byte[],int,boolean)  [FE]                      IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  cast(baseNCodec.encode(buf,  0,  doEncode));  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  cast(baseNCodec.encode(buf,    0,    doEncode));    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,boolean)	297	None	replace
640	[BUG]  [BUGGY]  rackCodec.encode(buf,  0,  c);  [CE]  cannot  find  symbol  rackCodec  [FE]        IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackCodec.encode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  rackCodec	451	None	replace
641	[BUG]  [BUGGY]  place(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  place(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	place(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	451	None	replace
642	[BUG]  [BUGGY]  placeFunction(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  placeFunction(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	placeFunction(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	451	None	replace
643	[BUG]  [BUGGY]  rackBindings(baseNCodec,  0,  c);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBindings(baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBindings(baseNCodec,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	451	None	replace
644	[BUG]  [BUGGY]  placeFunction(buf,  c,  doEncode);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  placeFunction(buf,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	placeFunction(buf,  c,  doEncode);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	451	None	replace
645	[BUG]  [BUGGY]  rackBindings(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBindings(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBindings(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	451	None	replace
646	[BUG]  [BUGGY]  cast(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	451	None	replace
647	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	265	25	add
648	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	265	25	add
649	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	265	None	add
650	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	265	25	add
651	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalArgumentException  	265	25	add
652	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	265	25	add
653	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	265	25	add
654	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	non-compiled	[CE]  ';'  expected	265	None	add
655	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]              IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	265	None	add
656	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	non-compiled	[CE]  ';'  expected	265	None	add
657	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                  IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(c  <  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	265	None	add
658	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	265	None	add
659	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	non-compiled	[CE]  ';'  expected	265	None	add
660	[BUG]  [BUGGY]  timeout  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  0,  buf,  0,  len);	  System.arraycopy(buf,    offset,    buf,    0,    len);    timeout    	compilable	timeout	446	1	replace
661	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  0,  len);  timeout  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  0,  buf,  0,  len);	  System.arraycopy(buf,    offset,    buf,    0,    len);    timeout    	compilable	timeout	446	1	replace
662	[BUG]  [BUGGY]  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset,  buf,  0,  b.length);	  System.arraycopy(buf,    offset,    buf,    0,    len);    timeout    	compilable	timeout	446	1	replace
663	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  buf,  0,  b.length);  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  buf,  0,  b.length);	  System.arraycopy(buf,    offset,    buf,    0,    len);    timeout    	compilable	timeout	446	1	replace
664	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(b,  offset,  len);  [CE]  illegal  character:  [FE]        IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(b,  offset,  len);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
665	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(buf,  offset,  len,  readLen);  [CE]  illegal  character:  [FE]          IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(buf,  offset,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(buf,  offset,  len,  readLen);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
666	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(baseNCodec,  offset,  len);  [CE]  illegal  character:  [FE]            IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(baseNCodec,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(baseNCodec,  offset,  len);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
667	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(baseNCodec,  buf,  offset,  len);  [CE]  illegal  character:  [FE]              IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(baseNCodec,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(baseNCodec,  buf,  offset,  len);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
668	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(buf,  offset,  len,  doEncode);  [CE]  illegal  character:  [FE]                IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(buf,  offset,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(buf,  offset,  len,  doEncode);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
669	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(baseNCodec,  buffer,  offset,  len);  [CE]  illegal  character:  [FE]                  IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(baseNCodec,  buffer,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(baseNCodec,  buffer,  offset,  len);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
670	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(c,  buf,  offset,  len);  [CE]  illegal  character:  [FE]                    IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(c,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(c,  buf,  offset,  len);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
671	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(c,  offset,  len);  [CE]  illegal  character:  [FE]                      IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(c,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(c,  offset,  len);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
672	[BUG]  [BUGGY]  ®ndecodeBaseNonByte(buf,  offset,  len,  c);  [CE]  illegal  character:  [FE]                        IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonByte(buf,  offset,  len,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonByte(buf,  offset,  len,  c);	  îndecodeBaseNonByte(buf,    offset,    len);    	non-compiled	[CE]  illegal  character:  	510	None	replace
673	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
674	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
675	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	  [FE]  IllegalArgumentException  	355	25	replace
676	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	  [FE]  IllegalArgumentException  	355	25	replace
677	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  bufferNCodec.encode(buf,  0,  len);  }  [CE]  cannot  find  symbol  bufferNCodec  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  bufferNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  bufferNCodec.encode(buf,  0,  len);  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  bufferNCodec	355	None	replace
678	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
679	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  timeout  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
680	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
681	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  timeout  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  offset  +=  len;  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
682	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  System.err.println(c);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  System.err.println(c);  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
683	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  System.err.println(c);  }  timeout  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  System.err.println(c);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  }  else  {  System.err.println(c);  }	  baseNCodec.decode(buf,    0,    len);    baseNCodec.encode(buf,    0,    len);    	compilable	timeout	355	1	replace
684	[BUG]  [BUGGY]  groundByte.encode(buf,  0,  c);  [CE]  cannot  find  symbol  groundByte  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  groundByte.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	groundByte.encode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(!doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  groundByte	261	None	replace
685	[BUG]  [BUGGY]  groundByte.decode(buf,  0,  c);  [CE]  cannot  find  symbol  groundByte  [FE]      IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  groundByte.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	groundByte.decode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(!doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  groundByte	261	None	replace
686	[BUG]  [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	125	None	replace
687	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	125	None	replace
688	[BUG]  [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  getBaseNCodec();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	125	None	replace
689	[BUG]  [BUGGY]  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
690	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	125	None	replace
691	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(b,  0,  c);  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.encode(b,  0,  c);  }  else  {	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  ';'  expected	125	None	replace
692	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset,  buf,  offset,  len);	  baseNCodec.encode(buf,    0,    len);    if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    System.arraycopy(b,    offset,    buf,    offset,    len);    }    	compilable	timeout	275	1	replace
693	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len);  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  len);	  baseNCodec.encode(buf,    0,    len);    if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    System.arraycopy(b,    offset,    buf,    offset,    len);    }    	compilable	timeout	275	1	replace
694	[BUG]  [BUGGY]  baseNCodec.arraycopy(b,  offset,  buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.arraycopy(b,  offset,  buf,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.arraycopy(b,  offset,  buf,  offset,  len);	  baseNCodec.encode(buf,    0,    len);    if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    System.arraycopy(b,    offset,    buf,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol	275	None	replace
695	[BUG]  [BUGGY]  BaseNCodec  c  =  getBaseNCodec();  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  getBaseNCodec();  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  getBaseNCodec();	  baseNCodec.encode(buf,    0,    len);    if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    System.arraycopy(b,    offset,    buf,    offset,    len);    }    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	275	None	replace
696	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(offset  +  len,  c  +  1);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(offset  +  len,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(offset  +  len,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    new    BaseNCodec(offset    +    len,    c    +    1);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	654	None	replace
697	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(offset  +  len,  c  +  1);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(offset  +  len,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(offset  +  len,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    new    BaseNCodec(offset    +    len,    c    +    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	654	None	replace
698	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  offset  +  len,  c  +  1);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  offset  +  len,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  offset  +  len,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    new    BaseNCodec(offset    +    len,    c    +    1);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	654	None	replace
699	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  offset  +  len,  c  +  1);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  offset  +  len,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(buf,  offset  +  len,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    new    BaseNCodec(offset    +    len,    c    +    1);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	654	None	replace
700	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b  +  len,  c  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b  +  len,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b  +  len,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    new    BaseNCodec(offset    +    len,    c    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	654	None	replace
701	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(buf,  offset  +  len,  c  +  1);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(buf,  offset  +  len,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(buf,  offset  +  len,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    new    BaseNCodec(offset    +    len,    c    +    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	654	None	replace
702	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(b,  offset  +  len,  c  +  1);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(b,  offset  +  len,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(b,  offset  +  len,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    new    BaseNCodec(offset    +    len,    c    +    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	654	None	replace
703	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(baseNCodec,  0,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(baseNCodec,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(baseNCodec,  0,  len);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
704	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(b,  0,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(b,  0,  len);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
705	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  c);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  c);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
706	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  offset,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(buf,  offset,  len);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
707	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  offset,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  offset,  len);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
708	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  len,  offset);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  len,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(buf,  0,  len,  offset);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
709	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(c,  0,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(c,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(c,  0,  len);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
710	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(len,  0,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(len,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(len,  0,  len);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
711	[BUG]  [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(baseN,  0,  len);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  new  BaseNCodec(baseN,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  new  BaseNCodec(baseN,  0,  len);	  BaseNCodec    buf    =    new    BaseNCodec(buf,    0,    len);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	58	None	replace
712	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
713	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
714	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
715	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
716	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
717	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
718	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  ';'  expected	112	None	add
719	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
720	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  IllegalStateException  	112	25	add
721	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(singleByte)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  ';'  expected	112	None	add
722	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(!doEncode)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  ';'  expected	112	None	add
723	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	367	25	add
724	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	367	25	add
725	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  buf,  0,  c);  [CE]  no  suitable  method  found  for  decode(byte[],int,byte[],int,int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  buf,  0,  c);	  	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,byte[],int,int)	367	None	add
726	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  system.arraycopy(buf,  offset  +  1,  buf,  0,  c);  [CE]  cannot  find  symbol  system  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  system.arraycopy(buf,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  system.arraycopy(buf,  offset  +  1,  buf,  0,  c);	  	non-compiled	[CE]  cannot  find  symbol  system	367	None	add
727	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  buf,  0,  len);  [CE]  no  suitable  method  found  for  decode(byte[],int,byte[],int,int)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  buf,  0,  len);	  	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,byte[],int,int)	367	None	add
728	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.encode(buf,  offset  +  1,  buf,  0,  c);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int,int)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.encode(buf,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.encode(buf,  offset  +  1,  buf,  0,  c);	  	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int,int)	367	None	add
729	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  ArrayIndexOutOfBoundsException.printStackTrace(buf,  offset  +  1,  buf,  0,  c);  [CE]  no  suitable  method  found  for  printStackTrace(byte[],int,byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  ArrayIndexOutOfBoundsException.printStackTrace(buf,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    ArrayIndexOutOfBoundsException.printStackTrace(buf,  offset  +  1,  buf,  0,  c);	  	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(byte[],int,byte[],int,int)	367	None	add
730	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	367	25	add
731	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.decode(buf,  offset  +  1,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	367	25	add
732	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  system.arraycopy(buf,  offset  +  1,  buf,  0,  len);  [CE]  cannot  find  symbol  system  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  system.arraycopy(buf,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  system.arraycopy(buf,  offset  +  1,  buf,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  system	367	None	add
733	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.encode(buf,  offset  +  1,  buf,  0,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int,int)  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.encode(buf,  offset  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  baseNCodec.encode(buf,  offset  +  1,  buf,  0,  len);	  	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int,int)	367	None	add
734	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  BaseNCodec.arraycopy(buf,  offset  +  1,  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  c);  BaseNCodec.arraycopy(buf,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    offset    +    1,    buf,    0,    c);    BaseNCodec.arraycopy(buf,  offset  +  1,  buf,  0,  c);	  	non-compiled	[CE]  cannot  find  symbol	367	None	add
735	[BUG]  [BUGGY]  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(doEncode)  {  baseNCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(doEncode)  {  baseNCodec.encode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  ';'  expected	183	None	replace
736	[BUG]  [BUGGY]  AssertionError(b)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError(b)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError(b)  {  if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  ';'  expected	183	None	replace
737	[BUG]  [BUGGY]  if(doEncode)  {  if(c  >  0)  {  baseNCodec.encode(b,  0,  c);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  if(c  >  0)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  if(c  >  0)  {  baseNCodec.encode(b,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  ';'  expected	183	None	replace
738	[BUG]  [BUGGY]  AssertionError(b)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError(b)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError(b)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  ';'  expected	183	None	replace
739	[BUG]  [BUGGY]  while(doEncode)  {  baseNCodec.encode(buf,  0,  c);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(doEncode)  {  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(doEncode)  {  baseNCodec.encode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  ';'  expected	183	None	replace
740	[BUG]  [BUGGY]  AssertionError  e  =  new  AssertionError(buf,  offset,  len);  [CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  e  =  new  AssertionError(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  e  =  new  AssertionError(buf,  offset,  len);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    while(doEncode)    {    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)	183	None	replace
741	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c,  len);	  baseNCodec.encode(buf,    0,    c.length);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	131	None	replace
742	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c,  offset.length);  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c,  offset.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c,  offset.length);	  baseNCodec.encode(buf,    0,    c.length);    	non-compiled	[CE]  int  cannot  be  dereferenced	131	None	replace
743	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  c.length);  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  c.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  c.length);	  baseNCodec.encode(buf,    0,    c.length);    	non-compiled	[CE]  int  cannot  be  dereferenced	131	None	replace
744	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c,  buf.length);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c,  buf.length);	  baseNCodec.encode(buf,    0,    c.length);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	131	None	replace
745	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c.length,  len);  [CE]  int  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c.length,  len);	  baseNCodec.encode(buf,    0,    c.length);    	non-compiled	[CE]  int  cannot  be  dereferenced	131	None	replace
746	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c,  buffer.length);  [CE]  cannot  find  symbol  buffer  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c,  buffer.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c,  buffer.length);	  baseNCodec.encode(buf,    0,    c.length);    	non-compiled	[CE]  cannot  find  symbol  buffer	131	None	replace
747	[BUG]  [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	390	None	replace
748	[BUG]  [BUGGY]  BaseNCodec  buf  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);  [CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  buf  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  buf  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  buf  is  already  defined  in  method  read(byte[],int,int)	390	None	replace
749	[BUG]  [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.decode(b,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  getBaseNCodec();  baseNCodec.decode(b,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  getBaseNCodec();  baseNCodec.decode(b,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	390	None	replace
750	[BUG]  [BUGGY]  b  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b  =  getBaseNCodec();  baseNCodec.decode(buf,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    b    =    getBaseNCodec();    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	390	None	replace
751	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  AssertionError  	688	12	add
752	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  AssertionError  	688	12	add
753	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {	  	non-compiled	[CE]  ';'  expected	688	None	add
754	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  while(doEncode)  {  baseNCodec.encode(buf,  0,  len);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  while(doEncode)  {  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    while(doEncode)  {  baseNCodec.encode(buf,  0,  len);	  	non-compiled	[CE]  ';'  expected	688	None	add
755	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  ||  doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  ||  doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    ||  doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	non-compiled	[CE]  illegal  start  of  expression	688	None	add
756	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(!doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  AssertionError  	688	23	add
757	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(!doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(!doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  AssertionError  	688	23	add
758	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  ||  doEncode)  {  baseNCodec.encode(buf,  0,  len);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  ||  doEncode)  {  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    ||  doEncode)  {  baseNCodec.encode(buf,  0,  len);	  	non-compiled	[CE]  illegal  start  of  expression	688	None	add
759	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	688	19	add
760	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  	compilable	  [FE]  AssertionError  	688	19	add
761	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	688	12	add
762	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	688	12	add
763	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	688	25	add
764	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	688	25	add
765	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    baseNCodec.encode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	688	23	add
766	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  baseNCodec.encode(buf,  0,  len);  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    baseNCodec.encode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	688	23	add
767	[BUG]  [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(singleByte)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  	111	None	replace
768	[BUG]  [BUGGY]  rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(singleByte)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	111	None	replace
769	[BUG]  [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(singleByte)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  ';'  expected	111	None	replace
770	[BUG]  [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(singleByte)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  ';'  expected	111	None	replace
771	[BUG]  [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackByteEncode(c,  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(singleByte)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  ';'  expected	111	None	replace
772	[BUG]  [BUGGY]  rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                      IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(singleByte)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	111	None	replace
773	[BUG]  [BUGGY]  rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  not  a  statement  [FE]                        IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackSingleByte)  {  baseNCodec.encode(buf,  0,  c);  }  else  {	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(singleByte)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	111	None	replace
774	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset,  b,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  b,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset,  b,  offset,  doEncode);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	521	None	replace
775	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  b,  offset,  buf,  offset,  doEncode);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	521	None	replace
776	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  baseNCodec,  buf,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  baseNCodec,  buf,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  baseNCodec,  buf,  offset,  doEncode);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	521	None	replace
777	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  buf,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  buf,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  baseNCodec,  buf,  offset,  doEncode);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	521	None	replace
778	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  baseNCodec,  doEncode);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	521	None	replace
779	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,  offset,  buf,  offset,  len);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	compilable	  [FE]  ArrayStoreException  	521	25	replace
780	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  len);  [FE]  ArrayStoreException  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset,  buf,  offset,  len);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	compilable	  [FE]  ArrayStoreException  	521	25	replace
781	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  c,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  baseNCodec,  c,  doEncode);	  System.arraycopy(baseNCodec,    offset,    buf,    offset,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	521	None	replace
782	[BUG]  [BUGGY]  ®ndecodeBase.decode(b,  0,  c);  [CE]  illegal  character:  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBase.decode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBase.decode(b,  0,  c);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
783	[BUG]  [BUGGY]  ®ndecodeBase.decode(buf,  0,  c,  doEncode);  [CE]  illegal  character:  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBase.decode(buf,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBase.decode(buf,  0,  c,  doEncode);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
784	[BUG]  [BUGGY]  ®bufferedByte.decode(buf,  0,  c);  [CE]  illegal  character:  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedByte.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedByte.decode(buf,  0,  c);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
785	[BUG]  [BUGGY]  ®b.decode(buf,  0,  c);  [CE]  illegal  character:  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®b.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®b.decode(buf,  0,  c);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
786	[BUG]  [BUGGY]  ®c.decode(buf,  0,  c);  [CE]  illegal  character:  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®c.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®c.decode(buf,  0,  c);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
787	[BUG]  [BUGGY]  ®baseNCodec.decode(buf,  0,  c);  [CE]  illegal  character:  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®baseNCodec.decode(buf,  0,  c);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
788	[BUG]  [BUGGY]  ®bufferedBase.decode(buf,  0,  c);  [CE]  illegal  character:  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedBase.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedBase.decode(buf,  0,  c);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
789	[BUG]  [BUGGY]  ®bs.decode(buf,  0,  c);  [CE]  illegal  character:  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bs.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bs.decode(buf,  0,  c);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
790	[BUG]  [BUGGY]  ®ndecodeBase.decode(buf,  0,  c,  len);  [CE]  illegal  character:  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBase.decode(buf,  0,  c,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBase.decode(buf,  0,  c,  len);	  îndecodeBase.decode(buf,    0,    c);    	non-compiled	[CE]  illegal  character:  	632	None	replace
791	[BUG]  [BUGGY]  cast(baseNCodec.getText(),  buf,  0,  len);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.getText(),  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.getText(),  buf,  0,  len);	  cast(baseNCodec.getText(),    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	410	None	replace
792	[BUG]  [BUGGY]  cast(buf.getText(),  baseNCodec,  0,  c);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(buf.getText(),  baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(buf.getText(),  baseNCodec,  0,  c);	  cast(baseNCodec.getText(),    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	410	None	replace
793	[BUG]  [BUGGY]  cast(baseNCodec,  buf.getText(),  0,  c);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec,  buf.getText(),  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec,  buf.getText(),  0,  c);	  cast(baseNCodec.getText(),    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	410	None	replace
794	[BUG]  [BUGGY]  cast(baseNCodec,  b.getText(),  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec,  b.getText(),  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec,  b.getText(),  buf,  0,  c);	  cast(baseNCodec.getText(),    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	410	None	replace
795	[BUG]  [BUGGY]  joinByte(baseNCodec.getText(),  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  joinByte(baseNCodec.getText(),  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	joinByte(baseNCodec.getText(),  buf,  0,  c);	  cast(baseNCodec.getText(),    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	410	None	replace
796	[BUG]  [BUGGY]  cast(baseNCodec,  getText(),  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec,  getText(),  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec,  getText(),  buf,  0,  c);	  cast(baseNCodec.getText(),    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	410	None	replace
797	[BUG]  [BUGGY]  cast(b.getText(),  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(b.getText(),  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(b.getText(),  buf,  0,  c);	  cast(baseNCodec.getText(),    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	410	None	replace
798	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  len,  buf,  0,  c);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  len,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  len,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    len,    buf,    0,    c);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	570	None	replace
799	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  len,  buf,  0,  c);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  len,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  len,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    len,    buf,    0,    c);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	570	None	replace
800	[BUG]  [BUGGY]  System.arraycopy(b,  off,  len,  buf,  0,  c);  [CE]  cannot  find  symbol  off  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  off,  len,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  off,  len,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    len,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  off	570	None	replace
801	[BUG]  [BUGGY]  Systems.arraycopy(b,  offset,  len,  buf,  0,  c);  [CE]  cannot  find  symbol  Systems  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  Systems.arraycopy(b,  offset,  len,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	Systems.arraycopy(b,  offset,  len,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    len,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  Systems	570	None	replace
802	[BUG]  [BUGGY]  Arrays.arraycopy(b,  offset,  len,  buf,  0,  c);  [CE]  cannot  find  symbol  Arrays  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  Arrays.arraycopy(b,  offset,  len,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	Arrays.arraycopy(b,  offset,  len,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    len,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  Arrays	570	None	replace
803	[BUG]  [BUGGY]  system.arraycopy(b,  offset,  len,  buf,  0,  c);  [CE]  cannot  find  symbol  system  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  system.arraycopy(b,  offset,  len,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	system.arraycopy(b,  offset,  len,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    len,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  system	570	None	replace
804	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  lan,  buf,  0,  c);  [CE]  cannot  find  symbol  lan  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  lan,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  lan,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    len,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  lan	570	None	replace
805	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
806	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
807	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
808	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
809	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  len);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	70	None	add
810	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
811	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
812	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  len);  baseNCodec.decode(b,  offset,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  len);  baseNCodec.decode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  len);  baseNCodec.decode(b,  offset,  len);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	70	None	add
813	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
814	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
815	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(b,  offset,  len);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(b,  offset,  len);	  	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	70	None	add
816	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(b,  offset,  len);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.decode(b,  offset,  len);	  	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	70	None	add
817	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  0,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  0,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
818	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  0,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  System.arraycopy(b,  0,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);    baseNCodec.decode(b,    offset,    len);    System.arraycopy(b,  0,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  baseNCodec.decode(b,  offset,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	25	add
819	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  buf.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(b,  0,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(b,  0,  buf.length);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	436	None	replace
820	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  -  1);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  -  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  -  1);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	436	None	replace
821	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  b.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  offset,  b.length);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	436	None	replace
822	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  +  1);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  +  1);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	436	None	replace
823	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  -  offset);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  -  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  b.length  -  offset);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	436	None	replace
824	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  readLen,  b.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  readLen,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  readLen,  b.length);	  BaseNCodec    c    =    baseNCodec.encode(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	436	None	replace
825	[BUG]  [BUGGY]  ||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    else    if(!doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	580	None	replace
826	[BUG]  [BUGGY]  ||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  [Delete]    else    if(!doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	580	None	replace
827	[BUG]  [BUGGY]  ||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ||!doEncode)  {  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	||!doEncode)  {  baseNCodec.encode(buf,  0,  c);	  [Delete]    else    if(!doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	580	None	replace
828	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	11	12	add
829	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	11	12	add
830	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  AssertionError  	11	12	add
831	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }	  	compilable	  [FE]  AssertionError  	11	12	add
832	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	11	12	add
833	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	11	12	add
834	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  1;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  1;  }	  	compilable	  [FE]  AssertionError  	11	12	add
835	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  1;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  1;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  1;  }	  	compilable	  [FE]  AssertionError  	11	12	add
836	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -1;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -1;  }	  	compilable	  [FE]  AssertionError  	11	12	add
837	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -1;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -1;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -1;  }	  	compilable	  [FE]  AssertionError  	11	12	add
838	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }	  	compilable	  [FE]  AssertionError  	11	12	add
839	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }	  	compilable	  [FE]  AssertionError  	11	12	add
840	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  ReadLen  =  0;  }  [CE]  cannot  find  symbol  ReadLen  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  ReadLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  ReadLen  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  ReadLen	11	None	add
841	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -len;  }	  	compilable	  [FE]  AssertionError  	11	12	add
842	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -len;  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -len;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  -len;  }	  	compilable	  [FE]  AssertionError  	11	12	add
843	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  BaseNCodec  baseNCodec  =  getBaseNCodec();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  BaseNCodec  baseNCodec  =  getBaseNCodec();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    BaseNCodec  baseNCodec  =  getBaseNCodec();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
844	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  AssertionError  <?>  error  =  new  AssertionError(c));  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  readLen  =  0;  }  AssertionError  <?>  error  =  new  AssertionError(c));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.encode(buf,    0,    len);    }    else    {    readLen    =    0;    }    AssertionError  <?>  error  =  new  AssertionError(c));	  	non-compiled	[CE]  ';'  expected	11	None	add
845	[BUG]  [BUGGY]  îndecodeBaseNCodec.decode(buf,  0,  readLen);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  îndecodeBaseNCodec.decode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	îndecodeBaseNCodec.decode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)    {    baseNCodec.decode(buf,    0,    readLen);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  	488	None	replace
846	[BUG]  [BUGGY]  rackBase.encode(buf,  0,  readLen);  [CE]  cannot  find  symbol  rackBase  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBase.encode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBase.encode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)    {    baseNCodec.decode(buf,    0,    readLen);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  rackBase	488	None	replace
847	[BUG]  [BUGGY]  castError(baseNCodec,  b,  0,  readLen);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec,  b,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec,  b,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)    {    baseNCodec.decode(buf,    0,    readLen);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	488	None	replace
848	[BUG]  [BUGGY]  castError(baseNCodec,  buf,  readLen,  len);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec,  buf,  readLen,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec,  buf,  readLen,  len);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)    {    baseNCodec.decode(buf,    0,    readLen);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	488	None	replace
849	[BUG]  [BUGGY]  castError(baseNCodec,  0,  readLen);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)    {    baseNCodec.decode(buf,    0,    readLen);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	488	None	replace
850	[BUG]  [BUGGY]  encodeBaseNCodec(b,  0,  c);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(b,  0,  c);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
851	[BUG]  [BUGGY]  encodeBaseNCodec(baseNCodec,  0,  c);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(baseNCodec,  0,  c);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
852	[BUG]  [BUGGY]  encodeBaseNCodec(buf,  0,  c,  doEncode);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(buf,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(buf,  0,  c,  doEncode);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
853	[BUG]  [BUGGY]  encodeBaseNCodec(buf,  0,  c,  len);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(buf,  0,  c,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(buf,  0,  c,  len);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
854	[BUG]  [BUGGY]  encodeBaseNCodec(buf,  0,  b.length);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(buf,  0,  b.length);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
855	[BUG]  [BUGGY]  encodeBaseNCodec(buf,  0,  b);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(buf,  0,  b);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(buf,  0,  b);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
856	[BUG]  [BUGGY]  encodeBaseNCodec(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(buf,  0,  len);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
857	[BUG]  [BUGGY]  encodeBaseNCodec(buf,  0,  c,  readLen);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  encodeBaseNCodec(buf,  0,  c,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	encodeBaseNCodec(buf,  0,  c,  readLen);	  encodeBaseNCodec(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	555	None	replace
858	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	compilable	timeout	695	1	replace
859	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	compilable	timeout	695	1	replace
860	[BUG]  [BUGGY]  baseNCodec.arraycopy(b,  offset,  buf,  0,  len);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.arraycopy(b,  offset,  buf,  0,  len);	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	non-compiled	[CE]  cannot  find  symbol	695	None	replace
861	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	compilable	timeout	695	1	replace
862	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  len);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	compilable	timeout	695	1	replace
863	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	compilable	timeout	695	1	replace
864	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	compilable	timeout	695	1	replace
865	[BUG]  [BUGGY]  baseNCodec.arraycopy(b,  0,  buf,  0,  len);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.arraycopy(b,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.arraycopy(b,  0,  buf,  0,  len);	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    len);    }    	non-compiled	[CE]  cannot  find  symbol	695	None	replace
866	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  c  +  1,  doEncode);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  c  +  1,  doEncode);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  c  +  1,  doEncode);	  baseNCodec.encode(buf,    0,    c    +    1,    doEncode);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean)	646	None	replace
867	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  offset);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean,int)  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  offset);	  baseNCodec.encode(buf,    0,    c    +    1,    doEncode);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean,int)	646	None	replace
868	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  len);	  baseNCodec.encode(buf,    0,    c    +    1,    doEncode);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean,int)	646	None	replace
869	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  buf.length);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  buf.length);	  baseNCodec.encode(buf,    0,    c    +    1,    doEncode);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,boolean,int)	646	None	replace
870	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  b  +  1,  doEncode);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  b  +  1,  doEncode);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  b  +  1,  doEncode);	  baseNCodec.encode(buf,    0,    c    +    1,    doEncode);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	646	None	replace
871	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  buf  +  1,  doEncode);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  buf  +  1,  doEncode);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  buf  +  1,  doEncode);	  baseNCodec.encode(buf,    0,    c    +    1,    doEncode);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	646	None	replace
872	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  buffer.length);  [CE]  cannot  find  symbol  buffer  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  buffer.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c  +  1,  doEncode,  buffer.length);	  baseNCodec.encode(buf,    0,    c    +    1,    doEncode);    	non-compiled	[CE]  cannot  find  symbol  buffer	646	None	replace
873	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  b,  offset);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  b,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  b,  offset);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)	437	None	replace
874	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  c,  offset,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  c,  offset,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  c,  offset,  len);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)	437	None	replace
875	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  buf,  offset);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  buf,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  buf,  offset);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)	437	None	replace
876	[BUG]  [BUGGY]  BaseNCodec.encode(baseNCodec,  0,  buf,  offset);  [CE]  no  suitable  method  found  for  encode(BaseNCodec,int,byte[],int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(baseNCodec,  0,  buf,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(baseNCodec,  0,  buf,  offset);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  encode(BaseNCodec,int,byte[],int)	437	None	replace
877	[BUG]  [BUGGY]  BaseNCodec.encode(baseNCodec,  0,  c,  offset);  [CE]  no  suitable  method  found  for  encode(BaseNCodec,int,int,int)  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(baseNCodec,  0,  c,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(baseNCodec,  0,  c,  offset);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  encode(BaseNCodec,int,int,int)	437	None	replace
878	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  len,  c,  offset);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  len,  c,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  len,  c,  offset);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int,int)	437	None	replace
879	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  buf,  offset);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  buf,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  buf,  offset);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)	437	None	replace
880	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  buffer,  c,  offset);  [CE]  cannot  find  symbol  buffer  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  buffer,  c,  offset);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  buffer,  c,  offset);	  BaseNCodec.encode(buf,    0,    c,    offset);    	non-compiled	[CE]  cannot  find  symbol  buffer	437	None	replace
881	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	545	None	replace
882	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	545	None	replace
883	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  this.singleByte  =  doEncode(b,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  this.singleByte  =  doEncode(b,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  else  {  this.singleByte  =  doEncode(b,  0,  len);  }	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	545	None	replace
884	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	non-compiled	[CE]  ';'  expected	545	None	replace
885	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  System.arraycopy  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  System.arraycopy  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  System.arraycopy	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	non-compiled	[CE]  not  a  statement	545	None	replace
886	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  System.arraycopy(  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  System.arraycopy(  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(b,  0,  len);  }  else  {  System.arraycopy(	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	non-compiled	[CE]  illegal  start  of  expression	545	None	replace
887	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(buf,  0,  len);  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  0,  buf,  offset,  len);  this.singleByte  =  doEncode(buf,  0,  len);	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	545	None	replace
888	[BUG]  [BUGGY]  timeout  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	compilable	timeout	545	1	replace
889	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  timeout  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  }	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    this.singleByte    =    doEncode(b,    0,    len);    	compilable	timeout	545	1	replace
890	[BUG]  [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }	  [Delete]    else    if(c    >    0)    {    doEncode    =    false;    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	612	None	replace
891	[BUG]  [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  [Delete]    else    if(c    >    0)    {    doEncode    =    false;    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	612	None	replace
892	[BUG]  [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  }  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  }	  [Delete]    else    if(c    >    0)    {    doEncode    =    false;    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	612	None	replace
893	[BUG]  [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  true;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  true;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  if(c  >  0)  {  doEncode  =  true;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	  [Delete]    else    if(c    >    0)    {    doEncode    =    false;    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	612	None	replace
894	[BUG]  [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  if(c  >  0)  {  doEncode  =  false;  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( ". ");  }	  [Delete]    else    if(c    >    0)    {    doEncode    =    false;    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	612	None	replace
895	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  b.length,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  b.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  b.length,  len);	  BaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	160	None	replace
896	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  len,  c);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  len,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  len,  c);	  BaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	160	None	replace
897	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  b,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  b,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  b,  len);	  BaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[],int)	160	None	replace
898	[BUG]  [BUGGY]  BaseNCodec.encode(baseNCodec,  buf,  0,  len);  [CE]  no  suitable  method  found  for  encode(BaseNCodec,byte[],int,int)  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(baseNCodec,  buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(baseNCodec,  buf,  0,  len);	  BaseNCodec.encode(buf,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  encode(BaseNCodec,byte[],int,int)	160	None	replace
899	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  len);	  System.arraycopy(buf,    offset    +    1,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	380	None	replace
900	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  0,  doEncode);	  System.arraycopy(buf,    offset    +    1,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	380	None	replace
901	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  buf.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  buf.length);	  System.arraycopy(buf,    offset    +    1,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	380	None	replace
902	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  baseNCodec);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  baseNCodec);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  b,  0,  doEncode,  baseNCodec);	  System.arraycopy(buf,    offset    +    1,    b,    0,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	380	None	replace
903	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  b,  0,  buf.length);	  System.arraycopy(buf,    offset    +    1,    b,    0,    doEncode);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	380	25	replace
904	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  buf.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  0,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  b,  0,  buf.length);	  System.arraycopy(buf,    offset    +    1,    b,    0,    doEncode);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	380	25	replace
905	[BUG]  [BUGGY]  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	74	1	replace
906	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	74	1	replace
907	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	25	replace
908	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	25	replace
909	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
910	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	non-compiled	[CE]  ')'  expected	74	None	replace
911	[BUG]  [BUGGY]  timeout  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	74	1	replace
912	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	74	1	replace
913	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	25	replace
914	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	25	replace
915	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset,  buf	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    }    else    {    System.arraycopy(b,    offset,    buf,    0,    c);    	non-compiled	[CE]  ')'  expected	74	None	replace
916	[BUG]  [BUGGY]  AssertionError  <  Object>  doEncode  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  doEncode  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  doEncode  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
917	[BUG]  [BUGGY]  AssertionError  <  Object>  readLen  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  readLen  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  readLen  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
918	[BUG]  [BUGGY]  AssertionError  <  Object>  baseNCodec  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  baseNCodec  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  baseNCodec  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
919	[BUG]  [BUGGY]  AssertionError  <  Object>  endEncode  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  endEncode  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  endEncode  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
920	[BUG]  [BUGGY]  AssertionError  <  Object>  start  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  start  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  start  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
921	[BUG]  [BUGGY]  AssertionError  <  Object>  decode  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  decode  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  decode  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
922	[BUG]  [BUGGY]  AssertionError  <  Object>  dec  =  doEncode(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  dec  =  doEncode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  dec  =  doEncode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
923	[BUG]  [BUGGY]  AssertionError  <  Object>  readLen  =  as.read(buf,  0,  readLen);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  <  Object>  readLen  =  as.read(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  <  Object>  readLen  =  as.read(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    AssertionError    <    Object>    doEncode    =    doEncode(buf,    0,    readLen);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	493	None	replace
924	[BUG]  [BUGGY]  ®ndecodeBaseNCodec.encode(b,  0,  doEncode);  [CE]  illegal  character:  [FE]          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNCodec.encode(b,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNCodec.encode(b,  0,  doEncode);	  îndecodeBaseNCodec.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	528	None	replace
925	[BUG]  [BUGGY]  ®bufferedBaseNCodec.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedBaseNCodec.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedBaseNCodec.encode(buf,  0,  doEncode);	  îndecodeBaseNCodec.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	528	None	replace
926	[BUG]  [BUGGY]  ®doEncodeBaseNCodec.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®doEncodeBaseNCodec.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®doEncodeBaseNCodec.encode(buf,  0,  doEncode);	  îndecodeBaseNCodec.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	528	None	replace
927	[BUG]  [BUGGY]  ®bufferedNCodec.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bufferedNCodec.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bufferedNCodec.encode(buf,  0,  doEncode);	  îndecodeBaseNCodec.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	528	None	replace
928	[BUG]  [BUGGY]  ®bcodeBaseNCodec.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bcodeBaseNCodec.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bcodeBaseNCodec.encode(buf,  0,  doEncode);	  îndecodeBaseNCodec.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	528	None	replace
929	[BUG]  [BUGGY]  ®baseNCodec.encode(buf,  0,  doEncode);  [CE]  illegal  character:  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®baseNCodec.encode(buf,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®baseNCodec.encode(buf,  0,  doEncode);	  îndecodeBaseNCodec.encode(buf,    0,    doEncode);    	non-compiled	[CE]  illegal  character:  	528	None	replace
930	[BUG]  [BUGGY]  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    system.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	69	1	replace
931	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  }  timeout  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    system.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	69	1	replace
932	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  c);  [CE]  cannot  find  symbol  system  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  c);	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    system.arraycopy(b,    offset,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  system	69	None	replace
933	[BUG]  [BUGGY]  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    system.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	69	1	replace
934	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    system.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	69	1	replace
935	[BUG]  [BUGGY]  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    system.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	69	1	replace
936	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    system.arraycopy(b,    offset,    buf,    0,    c);    	compilable	timeout	69	1	replace
937	[BUG]  [BUGGY]  Byte.encode(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  Byte.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	Byte.encode(buf,  0,  len);	  angleEdge.encode(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	416	None	replace
938	[BUG]  [BUGGY]  grundNCodec.encode(buf,  0,  len);  [CE]  cannot  find  symbol  grundNCodec  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  grundNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	grundNCodec.encode(buf,  0,  len);	  angleEdge.encode(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  grundNCodec	416	None	replace
939	[BUG]  [BUGGY]  b.encode(buf,  0,  len);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b.encode(buf,  0,  len);	  angleEdge.encode(buf,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	416	None	replace
940	[BUG]  [BUGGY]  b.encode(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b.encode(buf,  0,  c);	  rackBaseNCodec.encode(buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
941	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  len);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  len);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,int)	621	None	replace
942	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  buf.length);  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  buf.length);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c);    	non-compiled	[CE]  incompatible  types	621	None	replace
943	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  c.decode(buf,  0,  baseNCodec);  [CE]  int  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  c.decode(buf,  0,  baseNCodec);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  c.decode(buf,  0,  baseNCodec);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c);    	non-compiled	[CE]  int  cannot  be  dereferenced	621	None	replace
944	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  len);  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  len);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c);    	non-compiled	[CE]  incompatible  types	621	None	replace
945	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b.length);  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b.length);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c);    	non-compiled	[CE]  incompatible  types	621	None	replace
946	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b);  [CE]  no  suitable  method  found  for  decode(byte[],int,byte[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  b);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,byte[])	621	None	replace
947	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  doEncode);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,boolean)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  doEncode);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.decode(buf,  0,  c,  doEncode);	  BaseNCodec    baseNCodec    =    baseNCodec.decode(buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,boolean)	621	None	replace
948	[BUG]  [BUGGY]  castError(baseNCodec.encode(buf,  0,  readLen));  [CE]  'void'  type  not  allowed  here  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  castError(baseNCodec.encode(buf,  0,  readLen));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	castError(baseNCodec.encode(buf,  0,  readLen));	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    readLen);    }    else    {    readLen    =    0;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	4	None	replace
949	[BUG]  [BUGGY]  joinByte(baseNCodec.encode(buf,  0,  readLen));  [CE]  'void'  type  not  allowed  here  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  joinByte(baseNCodec.encode(buf,  0,  readLen));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	joinByte(baseNCodec.encode(buf,  0,  readLen));	  cast(baseNCodec.encode(buf,    0,    readLen));    	non-compiled	[CE]  'void'  type  not  allowed  here	431	None	replace
950	[BUG]  [BUGGY]  joinByte(baseNCodec.encode(buf,  0,  len));  [CE]  'void'  type  not  allowed  here  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  joinByte(baseNCodec.encode(buf,  0,  len));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	joinByte(baseNCodec.encode(buf,  0,  len));	  cast(baseNCodec.encode(buf,    0,    readLen));    	non-compiled	[CE]  'void'  type  not  allowed  here	431	None	replace
951	[BUG]  [BUGGY]  setLen(baseNCodec.encode(buf,  0,  len));  [CE]  'void'  type  not  allowed  here  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  setLen(baseNCodec.encode(buf,  0,  len));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	setLen(baseNCodec.encode(buf,  0,  len));	  cast(baseNCodec.encode(buf,    0,    readLen));    	non-compiled	[CE]  'void'  type  not  allowed  here	431	None	replace
952	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  len));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  len));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  len));	  cast(baseNCodec.encode(buf,    0,    readLen));    	non-compiled	[CE]  ';'  expected	431	None	replace
953	[BUG]  [BUGGY]  c  =  baseNCodec.encode(buf,  0,  readLen);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  c  =  baseNCodec.encode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	c  =  baseNCodec.encode(buf,  0,  readLen);	  cast(baseNCodec.encode(buf,    0,    readLen));    	non-compiled	[CE]  incompatible  types	431	None	replace
954	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  decode(buf,  0,  c  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  decode(buf,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  decode(buf,  0,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    decode(buf,    0,    c    +    1);    	non-compiled	[CE]  cannot  find  symbol	652	None	replace
955	[BUG]  [BUGGY]  baseNCodec  =  decode(buf,  0,  c  +  1);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  decode(buf,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  decode(buf,  0,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    decode(buf,    0,    c    +    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	652	None	replace
956	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  decode(buf,  0,  buf.length  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  decode(buf,  0,  buf.length  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  decode(buf,  0,  buf.length  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec    baseNCodec    =    decode(buf,    0,    c    +    1);    	non-compiled	[CE]  cannot  find  symbol	652	None	replace
957	[BUG]  [BUGGY]  ||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ==    [Delete]    else    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	577	None	replace
958	[BUG]  [BUGGY]  ||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	||  doEncode)  {  baseNCodec.encode(buf,  0,  c);	  ==    [Delete]    else    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	577	None	replace
959	[BUG]  [BUGGY]  ||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	||  doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  ==    [Delete]    else    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	577	None	replace
960	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset,  baseNCodec,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
961	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  0,  c);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  baseNCodec,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
962	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,  0,  buf,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
963	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  c);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  0,  buf,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
964	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset,  baseNCodec,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
965	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  baseNCodec,  0,  c);  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  baseNCodec,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
966	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  0,  c);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  b,  offset,  buf,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	325	None	replace
967	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,  offset,  b,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
968	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset,  b,  0,  c);  [FE]  ArrayStoreException  [FE]            ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset,  b,  0,  c);	  System.arraycopy(baseNCodec,    offset,    buf,    0,    c);    	compilable	  [FE]  ArrayStoreException  	325	25	replace
969	[BUG]  [BUGGY]  AssertionError  expected  =  doEncode(b,  0,  c);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  expected  =  doEncode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  expected  =  doEncode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
970	[BUG]  [BUGGY]  AssertionError  expected  =  new  AssertionError(buf,  offset,  len);  [CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  expected  =  new  AssertionError(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  expected  =  new  AssertionError(buf,  offset,  len);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)	190	None	replace
971	[BUG]  [BUGGY]  AssertionError  m  =  new  AssertionError(buf,  offset,  len);  [CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  m  =  new  AssertionError(buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  m  =  new  AssertionError(buf,  offset,  len);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)	190	None	replace
972	[BUG]  [BUGGY]  AssertionError  e  =  new  AssertionError(buf,  offset,  readLen);  [CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  AssertionError  e  =  new  AssertionError(buf,  offset,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	AssertionError  e  =  new  AssertionError(buf,  offset,  readLen);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    else    {    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(byte[],int,int)	190	None	replace
973	[BUG]  [BUGGY]  placeFunction(buf,  c);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  placeFunction(buf,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	placeFunction(buf,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	443	None	replace
974	[BUG]  [BUGGY]  BaseNCodec.encode(b,  0,  buf);  [CE]  no  suitable  method  found  for  encode(byte[],int,byte[])  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  0,  buf);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  0,  buf);	  BaseNCodec.encode(buf,    0,    b);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,byte[])	440	None	replace
975	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  c,  b);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  c,  b);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  c,  b);	  BaseNCodec.encode(buf,    0,    b);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])	440	None	replace
976	[BUG]  [BUGGY]  BaseNCodec.encode(baseNCodec,  buf,  0,  b);  [CE]  no  suitable  method  found  for  encode(BaseNCodec,byte[],int,byte[])  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(baseNCodec,  buf,  0,  b);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(baseNCodec,  buf,  0,  b);	  BaseNCodec.encode(buf,    0,    b);    	non-compiled	[CE]  no  suitable  method  found  for  encode(BaseNCodec,byte[],int,byte[])	440	None	replace
977	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  len,  b);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  len,  b);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  len,  b);	  BaseNCodec.encode(buf,    0,    b);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])	440	None	replace
978	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  buf.length,  b);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  buf.length,  b);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  buf.length,  b);	  BaseNCodec.encode(buf,    0,    b);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])	440	None	replace
979	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  c,  buf);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  c,  buf);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  c,  buf);	  BaseNCodec.encode(buf,    0,    b);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,byte[])	440	None	replace
980	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(b,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	669	None	replace
981	[BUG]  [BUGGY]  baseNCodec  =  baseNCodec.read(b,  0,  len);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  baseNCodec.read(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  baseNCodec.read(b,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(b,    0,    len);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	669	None	replace
982	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  c);  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(b,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	669	None	replace
983	[BUG]  [BUGGY]  baseNCodec.decode(b,  0,  len);  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(b,  0,  len);  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(b,  0,  len);  BaseNCodec  baseNCodec  =  baseNCodec.read(b,  0,  len);	  baseNCodec.decode(buf,    0,    len);    BaseNCodec    baseNCodec    =    baseNCodec.read(b,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	669	None	replace
984	[BUG]  [BUGGY]  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]    IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	153	None	replace
985	[BUG]  [BUGGY]  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  'else'  without  'if'  [FE]      IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  }  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	}  else  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	153	None	replace
986	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
987	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    b    =    new    ByteArrayInputStream(singleByte);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
988	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  }  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  }	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    b    =    new    ByteArrayInputStream(singleByte);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
989	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    b    =    new    ByteArrayInputStream(singleByte);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
990	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  }  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(buf,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(singleByte);  }	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    b    =    new    ByteArrayInputStream(singleByte);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
991	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(c);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  0,  buf,  offset,  len);  b  =  new  ByteArrayInputStream(c);	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    b    =    new    ByteArrayInputStream(singleByte);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
992	[BUG]  [BUGGY]  b  =  new  ByteArrayInputStream(singleByte);  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b  =  new  ByteArrayInputStream(singleByte);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b  =  new  ByteArrayInputStream(singleByte);	          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,    0,    buf,    offset,    len);    b    =    new    ByteArrayInputStream(singleByte);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
993	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  baseNCodec,  c);  [CE]  no  suitable  method  found  for  encode(byte[],int,BaseNCodec,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  baseNCodec,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  baseNCodec,  c);	  BaseNCodec.encode(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,BaseNCodec,int)	159	None	replace
994	[BUG]  [BUGGY]  BaseNCodec.encode(b,  buf,  0,  c);  [CE]  no  suitable  method  found  for  encode(byte[],byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  buf,  0,  c);	  BaseNCodec.encode(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],byte[],int,int)	159	None	replace
995	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  baseNCodec,  0,  c);  [CE]  no  suitable  method  found  for  encode(byte[],BaseNCodec,int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  baseNCodec,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  baseNCodec,  0,  c);	  BaseNCodec.encode(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],BaseNCodec,int,int)	159	None	replace
996	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.encode(buf,  0,  c,  len);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  baseNCodec.encode(buf,  0,  c,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  baseNCodec.encode(buf,  0,  c,  len);	  BaseNCodec.encode(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,int)	159	None	replace
997	[BUG]  [BUGGY]  BaseNCodec.encode(b,  baseNCodec,  0,  c);  [CE]  no  suitable  method  found  for  encode(byte[],BaseNCodec,int,int)  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(b,  baseNCodec,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(b,  baseNCodec,  0,  c);	  BaseNCodec.encode(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],BaseNCodec,int,int)	159	None	replace
998	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  c,  baseNCodec);  [CE]  no  suitable  method  found  for  encode(byte[],int,int,BaseNCodec)  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.encode(buf,  0,  c,  baseNCodec);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  c,  baseNCodec);	  BaseNCodec.encode(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,int,BaseNCodec)	159	None	replace
999	[BUG]  [BUGGY]  System.arraycopy(b,  off  +  1,  buf,  0,  c);  [CE]  cannot  find  symbol  off  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  off  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  off  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  off	347	None	replace
1000	[BUG]  [BUGGY]  System.arraycopy(b,  off,  buf,  0,  c);  [CE]  cannot  find  symbol  off  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  off,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  off,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  off	347	None	replace
1001	[BUG]  [BUGGY]  System.arraycopy(buf,  off  +  1,  buf,  0,  c);  [CE]  cannot  find  symbol  off  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  off  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  off  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  off	347	None	replace
1002	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  len  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  len  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	347	25	replace
1003	[BUG]  [BUGGY]  System.arraycopy(b,  len  +  1,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  len  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  len  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	347	25	replace
1004	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  off  +  1,  buf,  0,  c);  [CE]  cannot  find  symbol  off  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  off  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  off  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  off	347	None	replace
1005	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  c  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  c  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	347	25	replace
1006	[BUG]  [BUGGY]  System.arraycopy(b,  c  +  1,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  c  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  c  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    off    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	347	25	replace
1007	[BUG]  [BUGGY]  baseNCodec  =  baseNCodec.encode(buf,  0,  c);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  baseNCodec.encode(buf,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  baseNCodec.encode(buf,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	539	None	replace
1008	[BUG]  [BUGGY]  baseNCodec  =  baseNCodec.encode(b,  0,  c);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  baseNCodec.encode(b,  0,  c);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  baseNCodec.encode(b,  0,  c);	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec    =    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	539	None	replace
1009	[BUG]  [BUGGY]  cast(baseNCodec.decode(buf,  0,  len));  [CE]  'void'  type  not  allowed  here  [FE]          IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.decode(buf,  0,  len));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.decode(buf,  0,  len));	  cast(baseNCodec.decode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	408	None	replace
1010	[BUG]  [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  throw  new  IllegalStateException( " ");  }	  cast(baseNCodec.decode(buf,    0,    c));    	non-compiled	[CE]  	408	None	replace
1011	[BUG]  [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [CE]  'void'  type  not  allowed  here  [FE]              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  cast(baseNCodec.decode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	408	None	replace
1012	[BUG]  [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  [CE]  'void'  type  not  allowed  here  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }	  cast(baseNCodec.decode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	408	None	replace
1013	[BUG]  [BUGGY]  joinByte(baseNCodec.decode(buf,  0,  c));  [CE]  'void'  type  not  allowed  here  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  joinByte(baseNCodec.decode(buf,  0,  c));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	joinByte(baseNCodec.decode(buf,  0,  c));	  cast(baseNCodec.decode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	408	None	replace
1014	[BUG]  [BUGGY]  cast(baseNCodec.decode(b,  0,  c));  [CE]  'void'  type  not  allowed  here  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.decode(b,  0,  c));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.decode(b,  0,  c));	  cast(baseNCodec.decode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	408	None	replace
1015	[BUG]  [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  System.arraycopy(b,  0,  buf,  0,  len);  }  [CE]  'void'  type  not  allowed  here  [FE]                      IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  System.arraycopy(b,  0,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  cast(baseNCodec.decode(buf,  0,  c));  }  else  {  System.arraycopy(b,  0,  buf,  0,  len);  }	  cast(baseNCodec.decode(buf,    0,    c));    	non-compiled	[CE]  'void'  type  not  allowed  here	408	None	replace
1016	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  baseNCodec,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  baseNCodec,  0,  len);	  System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayStoreException  	585	25	replace
1017	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  baseNCodec,  0,  len);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  baseNCodec,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  baseNCodec,  0,  len);	  System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayStoreException  	585	25	replace
1018	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  b.length);	  System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayStoreException  	585	25	replace
1019	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  b.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset  +  1,  buf,  0,  b.length);	  System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayStoreException  	585	25	replace
1020	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  b  +  1,  buf,  0,  len);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  b  +  1,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  b  +  1,  buf,  0,  len);	  System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	585	None	replace
1021	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,  offset  +  1,  b,  0,  len);	  System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayStoreException  	585	25	replace
1022	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  b,  0,  len);  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset  +  1,  b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset  +  1,  b,  0,  len);	  System.arraycopy(baseNCodec,    offset    +    1,    buf,    0,    len);    	compilable	  [FE]  ArrayStoreException  	585	25	replace
1023	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  doEncode,  len,  readLen);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  doEncode,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  doEncode,  len,  readLen);	  System.arraycopy(b,    offset,    buf,    0,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
1024	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  doEncode,  c);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  doEncode,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  doEncode,  c);	  System.arraycopy(b,    offset,    buf,    0,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
1025	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  0,  doEncode,  len,  readLen);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  0,  doEncode,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  0,  doEncode,  len,  readLen);	  System.arraycopy(b,    offset,    buf,    0,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
1026	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  0,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  0,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  0,  doEncode,  len);	  System.arraycopy(b,    offset,    buf,    0,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
1027	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  c,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  c,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  c,  doEncode,  len);	  System.arraycopy(b,    offset,    buf,    0,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
1028	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  0,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  0,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  b,  offset,  buf,  0,  doEncode,  len);	  System.arraycopy(b,    offset,    buf,    0,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
1029	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  doEncode);  [CE]  no  suitable  method  found  for  encode(byte[],int,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  doEncode);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  no  suitable  method  found  for  encode(byte[],int,boolean)	477	None	replace
1030	[BUG]  [BUGGY]  angleEdge.encode(b,  0,  c);  [CE]  cannot  find  symbol  angleEdge  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  angleEdge.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	angleEdge.encode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    baseNCodec.encode(b,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  angleEdge	477	None	replace
1031	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  baseNCodec,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  baseNCodec,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  buf,  baseNCodec,  doEncode);	  System.arraycopy(b,    offset    +    1,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	385	None	replace
1032	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  b,  offset,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  b,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  b,  offset,  doEncode);	  System.arraycopy(b,    offset    +    1,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	385	None	replace
1033	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  len,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  buf,  len,  doEncode);	  System.arraycopy(b,    offset    +    1,    buf,    buffer,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	385	None	replace
1034	[BUG]  [BUGGY]  BaseNCodec  b  =  getByte(offset,  offset+len);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  getByte(offset,  offset+len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  getByte(offset,  offset+len);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset,    offset+len);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	679	None	replace
1035	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  b  =  getByte(offset,  offset+len);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  len);  BaseNCodec  b  =  getByte(offset,  offset+len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  len);  BaseNCodec  b  =  getByte(offset,  offset+len);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset,    offset+len);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	679	None	replace
1036	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  getByte(offset,  offset+len);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  getByte(offset,  offset+len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  getByte(offset,  offset+len);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset,    offset+len);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	679	None	replace
1037	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  getByte(offset,  offset+len);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  getByte(offset,  offset+len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  getByte(offset,  offset+len);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset,    offset+len);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	679	None	replace
1038	[BUG]  [BUGGY]  b  =  getByte(offset,  offset+len);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b  =  getByte(offset,  offset+len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b  =  getByte(offset,  offset+len);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    getByte(offset,    offset+len);    	non-compiled	[CE]  cannot  find  symbol	679	None	replace
1039	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1040	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1041	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1042	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1043	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1044	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1045	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.decode(buf,  0,  len);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.decode(buf,  0,  len);	  	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	194	None	add
1046	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	194	20	add
1047	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  c);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  AssertionError  	194	20	add
1048	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  BaseNCodec.arraycopy(b,  0,  buf,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol	194	None	add
1049	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1050	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  this.baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  AssertionError  	194	19	add
1051	[BUG]  [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  systemNCodec.decode(buf,  0,  len);  [CE]  cannot  find  symbol  systemNCodec  [FE]                  AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    0,    buf,    offset,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  baseNCodec.decode(buf,  0,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  systemNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        0,        buf,        offset,        len);        System.arraycopy(b,    0,    buf,    offset,    len);    baseNCodec.decode(buf,    0,    len);    System.arraycopy(b,  0,  buf,  offset,  len);  System.arraycopy(b,  0,  buf,  offset,  len);  systemNCodec.decode(buf,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  systemNCodec	194	None	add
1052	[BUG]  [BUGGY]  cast(buf,  baseNCodec,  0,  c);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(buf,  baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(buf,  baseNCodec,  0,  c);	  cast(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1053	[BUG]  [BUGGY]  setBaseNCodec(baseNCodec,  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  setBaseNCodec(baseNCodec,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	setBaseNCodec(baseNCodec,  buf,  0,  c);	  cast(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1054	[BUG]  [BUGGY]  cast(b,  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(b,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(b,  buf,  0,  c);	  cast(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1055	[BUG]  [BUGGY]  joinByte(baseNCodec,  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  joinByte(baseNCodec,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	joinByte(baseNCodec,  buf,  0,  c);	  cast(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1056	[BUG]  [BUGGY]  cast(baseNCodec,  buf,  0,  c,  doEncode);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec,  buf,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec,  buf,  0,  c,  doEncode);	  cast(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1057	[BUG]  [BUGGY]  cast(buf,  0,  baseNCodec);  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(buf,  0,  baseNCodec);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(buf,  0,  baseNCodec);	  cast(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1058	[BUG]  [BUGGY]  cast(baseNCodec,  buf,  0,  len);  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec,  buf,  0,  len);	  cast(baseNCodec,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1059	[BUG]  [BUGGY]  codec.encode(buf,  0,  c.length);  [CE]  int  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  codec.encode(buf,  0,  c.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	codec.encode(buf,  0,  c.length);	  codec.encode(buf,    0,    b.length);    	non-compiled	[CE]  int  cannot  be  dereferenced	336	None	replace
1060	[BUG]  [BUGGY]  codec.encode(buf,  0,  b.length,  len);  [CE]  cannot  find  symbol  codec  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  codec.encode(buf,  0,  b.length,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	codec.encode(buf,  0,  b.length,  len);	  codec.encode(buf,    0,    b.length);    	non-compiled	[CE]  cannot  find  symbol  codec	336	None	replace
1061	[BUG]  [BUGGY]  codec.encode(buf,  0,  b.length  +  1);  [CE]  cannot  find  symbol  codec  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  codec.encode(buf,  0,  b.length  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	codec.encode(buf,  0,  b.length  +  1);	  codec.encode(buf,    0,    b.length);    	non-compiled	[CE]  cannot  find  symbol  codec	336	None	replace
1062	[BUG]  [BUGGY]  c.encode(buf,  0,  b.length);  [CE]  int  cannot  be  dereferenced  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  c.encode(buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	c.encode(buf,  0,  b.length);	  codec.encode(buf,    0,    b.length);    	non-compiled	[CE]  int  cannot  be  dereferenced	336	None	replace
1063	[BUG]  [BUGGY]  codec.encode(b,  0,  b.length);  [CE]  cannot  find  symbol  codec  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  codec.encode(b,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	codec.encode(b,  0,  b.length);	  codec.encode(buf,    0,    b.length);    	non-compiled	[CE]  cannot  find  symbol  codec	336	None	replace
1064	[BUG]  [BUGGY]  codec.encode(b,  0,  buf.length);  [CE]  cannot  find  symbol  codec  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  codec.encode(b,  0,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	codec.encode(b,  0,  buf.length);	  codec.encode(buf,    0,    b.length);    	non-compiled	[CE]  cannot  find  symbol  codec	336	None	replace
1065	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  buf.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(buf,  0,  buf.length);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1066	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(b,  0,  buf.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(b,  0,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(b,  0,  buf.length);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1067	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  len,  b.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  len,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(buf,  0,  len,  b.length);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1068	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  b.length,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  b.length,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(buf,  0,  b.length,  len);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1069	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  offset,  b.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  offset,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(buf,  0,  offset,  b.length);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1070	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  b.length  -  1);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  b.length  -  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(buf,  0,  b.length  -  1);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1071	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  buffer.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  buffer.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(buf,  0,  buffer.length);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1072	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  readLen,  b.length);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  c  =  baseNCodec.read(buf,  0,  readLen,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.read(buf,  0,  readLen,  b.length);	  BaseNCodec    c    =    baseNCodec.read(buf,    0,    b.length);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	650	None	replace
1073	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1074	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1075	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1076	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1077	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  system.arraycopy(baseNCodec,  0,  buf,  0,  len);  [CE]  cannot  find  symbol  system  [FE]        ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  system.arraycopy(baseNCodec,  0,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  system.arraycopy(baseNCodec,  0,  buf,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  system	663	None	add
1078	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1079	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(buf,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1080	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode(buf,  0,  len);  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]            ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode(buf,  0,  len);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	663	None	add
1081	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]              ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(b,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1082	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(b,  0,  len);  [FE]  ArrayStoreException  [FE]              ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(b,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1083	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode(b,  offset,  len);  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode(b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode(b,  offset,  len);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	663	None	add
1084	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                  ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1085	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);  [FE]  ArrayStoreException  [FE]                  ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.decode(buf,  0,  c);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1086	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode?  1  :  0;  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                    ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode?  1  :  0;  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  this.singleByte  =  doEncode?  1  :  0;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	663	None	add
1087	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(b,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1088	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(b,  0,  len);  [FE]  ArrayStoreException  [FE]                      ArrayStoreException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,    0,    buf,    0,    len);    System.arraycopy(baseNCodec,  0,  buf,  0,  len);  baseNCodec.encode(b,  0,  len);	  	compilable	  [FE]  ArrayStoreException  	663	25	add
1089	[BUG]  [BUGGY]  ®BaseNon.encode(b,  0,  c,  doEncode);  [CE]  illegal  character:  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®BaseNon.encode(b,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®BaseNon.encode(b,  0,  c,  doEncode);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1090	[BUG]  [BUGGY]  ®ndecodeBaseNon.encode(buf,  0,  c);  [CE]  illegal  character:  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNon.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNon.encode(buf,  0,  c);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1091	[BUG]  [BUGGY]  ®ndecodeBaseNon.encode(b,  0,  c,  doEncode);  [CE]  illegal  character:  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNon.encode(b,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNon.encode(b,  0,  c,  doEncode);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1092	[BUG]  [BUGGY]  ®ndecodeBase.encode(b,  0,  c,  doEncode);  [CE]  illegal  character:  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBase.encode(b,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBase.encode(b,  0,  c,  doEncode);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1093	[BUG]  [BUGGY]  ®bNon.encode(b,  0,  c);  [CE]  illegal  character:  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®bNon.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®bNon.encode(b,  0,  c);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1094	[BUG]  [BUGGY]  ®BaseNon.encode(buf,  0,  c);  [CE]  illegal  character:  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®BaseNon.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®BaseNon.encode(buf,  0,  c);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1095	[BUG]  [BUGGY]  ®b.encode(b,  0,  c);  [CE]  illegal  character:  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®b.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®b.encode(b,  0,  c);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1096	[BUG]  [BUGGY]  ®Byte.encode(b,  0,  c);  [CE]  illegal  character:  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®Byte.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®Byte.encode(b,  0,  c);	  îndecodeBaseNon.encode(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	553	None	replace
1097	[BUG]  [BUGGY]  timeout  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  buf,  offset,  len);	  System.arraycopy(buf,    offset    +    1,    buf,    offset,    doEncode);    	compilable	timeout	383	1	replace
1098	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  offset,  len);  timeout  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  offset,  len);	  System.arraycopy(buf,    offset    +    1,    buf,    offset,    doEncode);    	compilable	timeout	383	1	replace
1099	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  buffer,  offset,  doEncode);  [CE]  cannot  find  symbol  buffer  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  buf,  buffer,  offset,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  buf,  buffer,  offset,  doEncode);	  System.arraycopy(buf,    offset    +    1,    buf,    offset,    doEncode);    	non-compiled	[CE]  cannot  find  symbol  buffer	383	None	replace
1100	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(n);  [CE]  cannot  find  symbol  n  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(n);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(n);	  BaseNCodec    baseNCodec    =    getBaseNCodec(baseN);    	non-compiled	[CE]  cannot  find  symbol  n	533	None	replace
1101	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(true);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(true);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(true);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol	536	None	replace
1102	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  c);  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(false,  c);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol	536	None	replace
1103	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  readLen);  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(false,  readLen);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol	536	None	replace
1104	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  buf);  [CE]  cannot  find  symbol  [FE]                                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  buf);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(false,  buf);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol	536	None	replace
1105	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  buffer);  [CE]  cannot  find  symbol  buffer  [FE]                                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  buffer);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(false,  buffer);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol  buffer	536	None	replace
1106	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  offset);  [CE]  cannot  find  symbol  [FE]                                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(false,  offset);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol	536	None	replace
1107	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  doEncode);  [CE]  cannot  find  symbol  [FE]                                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(false,  doEncode);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol	536	None	replace
1108	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  len);  [CE]  cannot  find  symbol  [FE]                                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  getBaseNCodec(false,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  getBaseNCodec(false,  len);	  BaseNCodec    baseNCodec    =    getBaseNCodec(false);    	non-compiled	[CE]  cannot  find  symbol	536	None	replace
1109	[BUG]  [BUGGY]  rackCodec.encode(b,  0,  c);  [CE]  cannot  find  symbol  rackCodec  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackCodec.encode(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackCodec.encode(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol  rackCodec	181	None	replace
1110	[BUG]  [BUGGY]  rackBounds(buf,  0,  c);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBounds(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBounds(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
1111	[BUG]  [BUGGY]  rackBounds(b,  0,  c);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackBounds(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackBounds(b,  0,  c);	          if(doEncode)    {    baseNCodec.encode(b,    0,    c);    }    if(!doEncode)    {    baseNCodec.encode(b,    0,    c);    }    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
1112	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buffer,  0,  c);  [CE]  cannot  find  symbol  buffer  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buffer,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buffer,  0,  c);	  System.arraycopy(b,    offset,    b,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  buffer	321	None	replace
1113	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  0,  c,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  0,  c,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  0,  c,  len);	  System.arraycopy(b,    offset,    b,    0,    c);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	321	None	replace
1114	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  b,  0,  buf,  c);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  b,  0,  buf,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  b,  0,  buf,  c);	  System.arraycopy(b,    offset,    b,    0,    c);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	321	None	replace
1115	[BUG]  [BUGGY]  BaseNCodec.decode(buf,  0,  c  +  1,  len);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,int)  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.decode(buf,  0,  c  +  1,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.decode(buf,  0,  c  +  1,  len);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,int)	207	None	replace
1116	[BUG]  [BUGGY]  BaseNCodec.decode(buf,  0,  c  +  1,  doEncode);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,boolean)  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.decode(buf,  0,  c  +  1,  doEncode);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.decode(buf,  0,  c  +  1,  doEncode);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,boolean)	207	None	replace
1117	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  c  +  1,  len);  [CE]  no  suitable  method  found  for  decode(byte[],int,int,int)  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(buf,  0,  c  +  1,  len);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  c  +  1,  len);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  decode(byte[],int,int,int)	207	None	replace
1118	[BUG]  [BUGGY]  BaseNCodec.decode(b,  0,  c  +  1);  [CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec.decode(b,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.decode(b,  0,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec.decode(buf,    0,    c    +    1);    	non-compiled	[CE]  non-static  method  decode(byte[],int,int)  cannot  be  referenced  from  a  static  context	207	None	replace
1119	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(b,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(b,  0,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec.decode(buf,    0,    c    +    1);    	compilable	timeout	207	1	replace
1120	[BUG]  [BUGGY]  baseNCodec.decode(b,  0,  c  +  1);  timeout  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.decode(b,  0,  c  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(b,  0,  c  +  1);	  baseNCodec.decode(buf,    0,    c    +    1);    BaseNCodec.decode(buf,    0,    c    +    1);    	compilable	timeout	207	1	replace
1121	[BUG]  [BUGGY]  cast(baseNCodec.encode(buf,  0,  c),  false);  [CE]  'void'  type  not  allowed  here  [FE]    IllegalArgumentException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  cast(baseNCodec.encode(buf,  0,  c),  false);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	cast(baseNCodec.encode(buf,  0,  c),  false);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'void'  type  not  allowed  here	259	None	replace
1122	[BUG]  [BUGGY]  while(!doEncode)  {  if(c  >  0)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(!doEncode)  {  if(c  >  0)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(!doEncode)  {  if(c  >  0)  {  System.arraycopy(b,  0,  buf,  offset,  len);  }	  [Delete]    while(!doEncode)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    	non-compiled	[CE]  ';'  expected	592	None	replace
1123	[BUG]  [BUGGY]  while(!doEncode  &&  len  <  =  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(!doEncode  &&  len  <  =  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(!doEncode  &&  len  <  =  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  [Delete]    while(!doEncode)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    	non-compiled	[CE]  illegal  start  of  expression	592	None	replace
1124	[BUG]  [BUGGY]  while(!doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(!doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(!doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  c);  }	  [Delete]    while(!doEncode)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    	non-compiled	[CE]  ';'  expected	592	None	replace
1125	[BUG]  [BUGGY]  while(!doEncode  &&  len  <  =  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(!doEncode  &&  len  <  =  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(!doEncode  &&  len  <  =  0)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }	  [Delete]    while(!doEncode)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    	non-compiled	[CE]  illegal  start  of  expression	592	None	replace
1126	[BUG]  [BUGGY]  while(!doEncode  &&  len  <  =  baseNCodec.length)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(!doEncode  &&  len  <  =  baseNCodec.length)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(!doEncode  &&  len  <  =  baseNCodec.length)  {  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  [Delete]    while(!doEncode)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    	non-compiled	[CE]  illegal  start  of  expression	592	None	replace
1127	[BUG]  [BUGGY]  while(!doEncode  &&  doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(!doEncode  &&  doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(!doEncode  &&  doEncode)  {  System.arraycopy(b,  0,  buf,  offset,  len);	  [Delete]    while(!doEncode)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    	non-compiled	[CE]  ';'  expected	592	None	replace
1128	[BUG]  [BUGGY]  while(!doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  while(!doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	while(!doEncode)  {  if(c  >  0)  {  baseNCodec.encode(buf,  0,  buf,  offset,  len);  }	  [Delete]    while(!doEncode)    {    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    0,    buf,    offset,    len);    }    	non-compiled	[CE]  ';'  expected	592	None	replace
1129	[BUG]  [BUGGY]  berCodec.encode(buf,  0,  c);  [CE]  cannot  find  symbol  berCodec  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  berCodec.encode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	berCodec.encode(buf,  0,  c);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    readLen    =    0;    	non-compiled	[CE]  cannot  find  symbol  berCodec	492	None	replace
1130	[BUG]  [BUGGY]  rackByte.encode(buf,  0,  readLen);  [CE]  cannot  find  symbol  rackByte  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  rackByte.encode(buf,  0,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	rackByte.encode(buf,  0,  readLen);	          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    readLen    =    0;    	non-compiled	[CE]  cannot  find  symbol  rackByte	492	None	replace
1131	[BUG]  [BUGGY]  ®ndecode(b,  0,  len);  [CE]  illegal  character:  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(b,  0,  len);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1132	[BUG]  [BUGGY]  ®ndecode(buf,  0,  c);  [CE]  illegal  character:  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(buf,  0,  c);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1133	[BUG]  [BUGGY]  ®ndecode(buf,  0,  len,  offset);  [CE]  illegal  character:  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(buf,  0,  len,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(buf,  0,  len,  offset);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1134	[BUG]  [BUGGY]  ®ndecode(buf,  0,  offset);  [CE]  illegal  character:  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(buf,  0,  offset);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(buf,  0,  offset);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1135	[BUG]  [BUGGY]  ®ndecode(buf,  0,  b.length);  [CE]  illegal  character:  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(buf,  0,  b.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(buf,  0,  b.length);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1136	[BUG]  [BUGGY]  ®ndecode(buf,  0,  offset,  len);  [CE]  illegal  character:  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(buf,  0,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(buf,  0,  offset,  len);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1137	[BUG]  [BUGGY]  ®ndecode(baseNCodec,  0,  len);  [CE]  illegal  character:  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(baseNCodec,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(baseNCodec,  0,  len);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1138	[BUG]  [BUGGY]  ®ndecode(c,  0,  len);  [CE]  illegal  character:  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(c,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(c,  0,  len);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1139	[BUG]  [BUGGY]  ®ndecode(buf,  0,  buf.length);  [CE]  illegal  character:  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecode(buf,  0,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecode(buf,  0,  buf.length);	  îndecode(buf,    0,    len);    	non-compiled	[CE]  illegal  character:  	397	None	replace
1140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  offset,  len  -  1);	  timeout    	compilable	  [FE]  AssertionError  	562	13	add
1141	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  offset,  len  -  1);	  timeout    	compilable	  [FE]  AssertionError  	562	13	add
1142	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  off,  len  -  1);  [CE]  cannot  find  symbol  off  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  off,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  off,  len  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  off	562	None	add
1143	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  -  1));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  -  1));  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  offset,  len  -  1));	  timeout    	non-compiled	[CE]  ';'  expected	562	None	add
1144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  1,  buf,  offset,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  1,  buf,  offset,  len  -  1);	  timeout    	compilable	  [FE]  AssertionError  	562	19	add
1145	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  1,  buf,  offset,  len  -  1);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  1,  buf,  offset,  len  -  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  1,  buf,  offset,  len  -  1);	  timeout    	compilable	  [FE]  AssertionError  	562	19	add
1146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  offset,  len  +  1);	  timeout    	compilable	  [FE]  AssertionError  	562	16	add
1147	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  +  1);  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  +  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  offset,  len  +  1);	  timeout    	compilable	  [FE]  AssertionError  	562	16	add
1148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  *  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  offset,  len  *  1);	  timeout    	compilable	  [FE]  AssertionError  	562	14	add
1149	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  *  1);  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  0,  buf,  offset,  len  -  1);  System.arraycopy(buf,  0,  buf,  offset,  len  *  1);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,    0,    buf,    offset,    len    -    1);    System.arraycopy(buf,  0,  buf,  offset,  len  *  1);	  timeout    	compilable	  [FE]  AssertionError  	562	14	add
1150	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  b);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  b);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  b);	  System.arraycopy(b,    offset,    buf,    offset,    doEncode,    baseNCodec);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
1151	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  doEncode,  baseNCodec,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  doEncode,  baseNCodec,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  doEncode,  baseNCodec,  len);	  System.arraycopy(b,    offset,    buf,    offset,    doEncode,    baseNCodec);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
1152	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  baseNCodec);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  baseNCodec);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  baseNCodec);	  System.arraycopy(b,    offset,    buf,    offset,    doEncode,    baseNCodec);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
1153	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset,  buf,  offset,  doEncode,  len);	  System.arraycopy(b,    offset,    buf,    offset,    doEncode,    baseNCodec);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
1154	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  offset,  doEncode,  b);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  0,  buf,  offset,  doEncode,  b);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  0,  buf,  offset,  doEncode,  b);	  System.arraycopy(b,    offset,    buf,    offset,    doEncode,    baseNCodec);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
1155	[BUG]  [BUGGY]  System.arraycopy(buf,  offset,  b,  offset,  doEncode,  baseNCodec);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset,  b,  offset,  doEncode,  baseNCodec);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset,  b,  offset,  doEncode,  baseNCodec);	  System.arraycopy(b,    offset,    buf,    offset,    doEncode,    baseNCodec);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
1156	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  doEncode,  baseNCodec,  c);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  offset,  doEncode,  baseNCodec,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  offset,  doEncode,  baseNCodec,  c);	  System.arraycopy(b,    offset,    buf,    offset,    doEncode,    baseNCodec);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
1157	[BUG]  [BUGGY]  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.getValue();    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	126	None	replace
1158	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.getValue();    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	126	None	replace
1159	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =(BaseNCodec)this.singleByte.getValue();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.getValue();    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	126	None	replace
1160	[BUG]  [BUGGY]  b  =(BaseNCodec)this.singleByte.getValue();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  b  =(BaseNCodec)this.singleByte.getValue();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	b  =(BaseNCodec)this.singleByte.getValue();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.getValue();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1161	[BUG]  [BUGGY]  BufferedCodec  b  =(BufferedCodec)this.singleByte.getValue();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BufferedCodec  b  =(BufferedCodec)this.singleByte.getValue();  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BufferedCodec  b  =(BufferedCodec)this.singleByte.getValue();	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =(BaseNCodec)this.singleByte.getValue();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1162	[BUG]  [BUGGY]  BaseNCodec  b  =  readByte(buf,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  readByte(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  readByte(buf,  0,  c);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    readByte(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	680	None	replace
1163	[BUG]  [BUGGY]  BaseNCodec  b  =  readByte(b,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  readByte(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  readByte(b,  0,  c);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    readByte(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	680	None	replace
1164	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  readByte(b,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  readByte(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  c);  BaseNCodec  b  =  readByte(b,  0,  c);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    readByte(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	680	None	replace
1165	[BUG]  [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  readByte(b,  0,  c);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  readByte(b,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(b,  0,  len);  BaseNCodec  b  =  readByte(b,  0,  c);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    readByte(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	680	None	replace
1166	[BUG]  [BUGGY]  BaseNCodec  b  =  readByte(b,  0,  len);  [CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  b  =  readByte(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  b  =  readByte(b,  0,  len);	          baseNCodec.encode(b,    0,    c);    BaseNCodec    b    =    readByte(b,    0,    c);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  read(byte[],int,int)	680	None	replace
1167	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  buf.length);  [CE]  illegal  character:  [FE]            IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  buf.length);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  0,  buf.length);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1168	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(buf,  0,  c,  doEncode);  [CE]  illegal  character:  [FE]              IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(buf,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(buf,  0,  c,  doEncode);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1169	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  len);  [CE]  illegal  character:  [FE]                IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  0,  len);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1170	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(buf,  0,  c);  [CE]  illegal  character:  [FE]                  IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(buf,  0,  c);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1171	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(baseNCodec,  0,  c);  [CE]  illegal  character:  [FE]                    IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(baseNCodec,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(baseNCodec,  0,  c);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1172	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  c,  doEncode);  [CE]  illegal  character:  [FE]                      IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  0,  c,  doEncode);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1173	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(buf,  0,  len);  [CE]  illegal  character:  [FE]                        IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(buf,  0,  len);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1174	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  offset,  c);  [CE]  illegal  character:  [FE]                          IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(b,  0,  offset,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(b,  0,  offset,  c);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1175	[BUG]  [BUGGY]  ®ndecodeBaseNonEscaped(c,  0,  b);  [CE]  illegal  character:  [FE]                            IllegalArgumentException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  ®ndecodeBaseNonEscaped(c,  0,  b);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	®ndecodeBaseNonEscaped(c,  0,  b);	  îndecodeBaseNonEscaped(b,    0,    c);    	non-compiled	[CE]  illegal  character:  	513	None	replace
1176	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  0,  b.length);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  0,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  0,  b.length);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    0,    b.length);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	251	None	replace
1177	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(b.length,  0,  b.length);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(b.length,  0,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(b.length,  0,  b.length);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    0,    b.length);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	251	None	replace
1178	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  b.length);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b,  0,  b.length);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    0,    b.length);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	251	None	replace
1179	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(b,  0,  b.length);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                                    AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(b,  0,  b.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(b,  0,  b.length);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    0,    b.length);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	251	None	replace
1180	[BUG]  [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  0,  buf.length);  [CE]  BaseNCodec  is  abstract;  cannot  be  instantiated  [FE]                                      AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  0,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  baseNCodec  =  new  BaseNCodec(b.length,  0,  buf.length);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    0,    b.length);    	non-compiled	[CE]  BaseNCodec  is  abstract;  cannot  be  instantiated	251	None	replace
1181	[BUG]  [BUGGY]  baseNCodec  =  new  BaseNCodec(b.length,  0,  buf.length);  [CE]  cannot  assign  a  value  to  final  variable  baseNCodec  [FE]                                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec  =  new  BaseNCodec(b.length,  0,  buf.length);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec  =  new  BaseNCodec(b.length,  0,  buf.length);	  baseNCodec.decode(buf,    0,    b.length);    BaseNCodec    baseNCodec    =    new    BaseNCodec(b.length,    0,    b.length);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  baseNCodec	251	None	replace
1182	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	compilable	timeout	691	1	replace
1183	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }  timeout  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	compilable	timeout	691	1	replace
1184	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	compilable	timeout	691	1	replace
1185	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  timeout  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	compilable	timeout	691	1	replace
1186	[BUG]  [BUGGY]  baseNCodec.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.arraycopy(b,  offset  +  1,  buf,  len,  readLen);	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	non-compiled	[CE]  cannot  find  symbol	691	None	replace
1187	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	compilable	timeout	691	1	replace
1188	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }  timeout  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen);  }	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	compilable	timeout	691	1	replace
1189	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  len,  readLen	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	non-compiled	[CE]  ')'  expected	691	None	replace
1190	[BUG]  [BUGGY]  baseNCodec.arraycopy(b,  0,  buf,  len);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.arraycopy(b,  0,  buf,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.arraycopy(b,  0,  buf,  len);	          baseNCodec.encode(buf,    0,    c);    if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    System.arraycopy(b,    offset    +    1,    buf,    len,    readLen);    }    	non-compiled	[CE]  cannot  find  symbol	691	None	replace
1191	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	77	None	replace
1192	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode);  this.singleByte  =  doEncode;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode);  this.singleByte  =  doEncode;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode);  this.singleByte  =  doEncode;  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	77	None	replace
1193	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  this.singleByte  =  doEncode;  }  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  this.singleByte  =  doEncode;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  this.singleByte  =  doEncode;  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	77	None	replace
1194	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode;  }  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode;  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  ')'  expected	77	None	replace
1195	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	77	None	replace
1196	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode;  }  else  {  this.singleByte  =  doEncode;  }  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode;  }  else  {  this.singleByte  =  doEncode;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode;  }  else  {  this.singleByte  =  doEncode;  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  ')'  expected	77	None	replace
1197	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;  }  [CE]  cannot  assign  a  value  to  final  variable  singleByte  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  this.singleByte  =  doEncode;  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  singleByte	77	None	replace
1198	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode);  }  else  {  this.singleByte  =  doEncode;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode);  }  else  {  this.singleByte  =  doEncode;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  doEncode);  }  else  {  this.singleByte  =  doEncode;  }	          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,    offset,    buf,    0,    c);    this.singleByte    =    doEncode;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	77	None	replace
1199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  buf.length  -  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.encode(buf,  0,  buf.length  -  1);	  baseNCodec.encode(buf,    0,    buf.length);    timeout    	compilable	  [FE]  AssertionError  	55	24	replace
1200	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  buf.length  -  1);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  buf.length  -  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  buf.length  -  1);	  baseNCodec.encode(buf,    0,    buf.length);    timeout    	compilable	  [FE]  AssertionError  	55	24	replace
1201	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  buf.length  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.encode(buf,  0,  buf.length  +  1);	  baseNCodec.encode(buf,    0,    buf.length);    timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	25	replace
1202	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  buf.length  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  baseNCodec.encode(buf,  0,  buf.length  +  1);  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  buf.length  +  1);	  baseNCodec.encode(buf,    0,    buf.length);    timeout    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	25	replace
1203	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  offset,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  offset,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  b,  offset,  doEncode,  len);	  System.arraycopy(b,    offset    +    1,    buf,    c,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	382	None	replace
1204	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  offset,  len,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  offset,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  b,  offset,  len,  doEncode);	  System.arraycopy(b,    offset    +    1,    buf,    c,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	382	None	replace
1205	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  offset,  c,  doEncode,  len);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  offset,  c,  doEncode,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  buf,  offset,  c,  doEncode,  len);	  System.arraycopy(b,    offset    +    1,    buf,    c,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	382	None	replace
1206	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  b,  offset,  len,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  b,  offset,  len,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  b,  offset,  len,  doEncode);	  System.arraycopy(b,    offset    +    1,    buf,    c,    doEncode,    len);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	382	None	replace
1207	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	System.arraycopy(buf,  offset  +  1,  b,  offset,  len);	  System.arraycopy(b,    offset    +    1,    buf,    c,    doEncode,    len);    	compilable	timeout	382	1	replace
1208	[BUG]  [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  offset,  len);  timeout  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(buf,  offset  +  1,  b,  offset,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(buf,  offset  +  1,  b,  offset,  len);	  System.arraycopy(b,    offset    +    1,    buf,    c,    doEncode,    len);    	compilable	timeout	382	1	replace
1209	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  buf,  offset,  b,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  buf,  offset,  b,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  buf,  offset,  b,  doEncode);	  System.arraycopy(baseNCodec,    buf,    offset,    c,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	648	None	replace
1210	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  buf,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  b,  offset,  buf,  doEncode);	  System.arraycopy(baseNCodec,    buf,    offset,    c,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	648	None	replace
1211	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  c,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  b,  offset,  c,  doEncode);	  System.arraycopy(baseNCodec,    buf,    offset,    c,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	648	None	replace
1212	[BUG]  [BUGGY]  System.arraycopy(b,  offset,  baseNCodec,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset,  baseNCodec,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset,  baseNCodec,  doEncode);	  System.arraycopy(baseNCodec,    buf,    offset,    c,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	648	None	replace
1213	[BUG]  [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  baseNCodec,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(baseNCodec,  b,  offset,  baseNCodec,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(baseNCodec,  b,  offset,  baseNCodec,  doEncode);	  System.arraycopy(baseNCodec,    buf,    offset,    c,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	648	None	replace
1214	[BUG]  [BUGGY]  System.arraycopy(b,  baseNCodec,  buf,  offset,  c,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  baseNCodec,  buf,  offset,  c,  doEncode);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  baseNCodec,  buf,  offset,  c,  doEncode);	  System.arraycopy(baseNCodec,    buf,    offset,    c,    doEncode);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	648	None	replace
1215	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	339	25	replace
1216	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	339	25	replace
1217	[BUG]  [BUGGY]  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1218	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  timeout  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1219	[BUG]  [BUGGY]  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1220	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1221	[BUG]  [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  system.arraycopy(b,  offset  +  1,  buf,  0,  c);  [CE]  cannot  find  symbol  system  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  system.arraycopy(b,  offset  +  1,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	System.arraycopy(b,  offset  +  1,  buf,  0,  c);  system.arraycopy(b,  offset  +  1,  buf,  0,  c);	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	non-compiled	[CE]  cannot  find  symbol  system	339	None	replace
1222	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(b,  offset  +  1,  buf,  0,	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	non-compiled	[CE]  illegal  start  of  expression	339	None	replace
1223	[BUG]  [BUGGY]  timeout  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1224	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }  timeout  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  else  {  System.arraycopy(buf,  offset  +  1,  buf,  0,  len);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1225	[BUG]  [BUGGY]  timeout  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1226	[BUG]  [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  timeout  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  System.arraycopy(b,  offset  +  1,  buf,  0,  len);  System.arraycopy(b,  offset  +  1,  buf,  0,  c);  }	          System.arraycopy(b,    offset    +    1,    buf,    0,    c);    System.arraycopy(b,    offset    +    1,    buf,    0,    c);    system.arraycopy(b,    offset    +    1,    buf,    0,    c);    	compilable	timeout	339	1	replace
1227	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	25	add
1228	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	25	add
1229	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	25	add
1230	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	25	add
1231	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  BaseNCodec.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    BaseNCodec.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
1232	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  c);  [CE]  cannot  find  symbol  system  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  system.arraycopy(b,  offset,  buf,  0,  c);	  	non-compiled	[CE]  cannot  find  symbol  system	72	None	add
1233	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c;System.arraycopy(b,  offset,  buf,  0,  c);  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c;System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c;System.arraycopy(b,  offset,  buf,  0,  c);	  	non-compiled	[CE]  ')'  expected	72	None	add
1234	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	25	add
1235	[BUG]  [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                System.arraycopy(b,        offset,        buf,        0,        c);        System.arraycopy(b,    offset,    buf,    0,    c);System.arraycopy(b,    offset,    buf,    0,    c);    System.arraycopy(b,  offset,  buf,  0,  c);  System.arraycopy(b,  offset,  buf,  0,  len);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	25	add
1236	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  BaseNCodec  baseNCodec.decode(b,  0,  c);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  BaseNCodec  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(b,  0,  c);  BaseNCodec  baseNCodec.decode(b,  0,  c);  }	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  ';'  expected	389	None	replace
1237	[BUG]  [BUGGY]  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.decode(b,  0,  c);  baseNCodec.decode(b,  0,  c);  }	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec.decode(b,    0,    c);    	compilable	timeout	389	1	replace
1238	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  baseNCodec.decode(b,  0,  c);  }  timeout  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(b,  0,  c);  baseNCodec.decode(b,  0,  c);  }	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec.decode(b,    0,    c);    	compilable	timeout	389	1	replace
1239	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  BaseNCodec  baseNCodec.decode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  BaseNCodec  baseNCodec.decode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(b,  0,  c);  BaseNCodec  baseNCodec.decode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec.decode(b,    0,    c);    	non-compiled	[CE]  	389	None	replace
1240	[BUG]  [BUGGY]  timeout  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	if(doEncode)  {  baseNCodec.decode(b,  0,  c);  }	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec.decode(b,    0,    c);    	compilable	timeout	389	1	replace
1241	[BUG]  [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  timeout  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]  if(doEncode)  {  baseNCodec.decode(b,  0,  c);  }  [BUGGY]      }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	if(doEncode)  {  baseNCodec.decode(b,  0,  c);  }	  baseNCodec.decode(b,    0,    c);    BaseNCodec    baseNCodec.decode(b,    0,    c);    	compilable	timeout	389	1	replace
1242	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	7	12	add
1243	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	7	12	add
1244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	7	12	add
1245	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	7	12	add
1246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	7	12	add
1247	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	7	12	add
1248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	7	12	add
1249	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }	  	compilable	  [FE]  AssertionError  	7	12	add
1250	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	7	12	add
1251	[BUG]  [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {      [BUGGY]          if(doEncode)    {    baseNCodec.encode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.decode(buf,  0,  c);  }  else  {  readLen  =  0;  }  if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }  [BUGGY]      baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	                if(doEncode)        {        baseNCodec.encode(buf,        0,        c);        }        else        {        readLen        =        0;        }        if(doEncode)    {    baseNCodec.decode(buf,    0,    c);    }    else    {    readLen    =    0;    }    if(doEncode)  {  baseNCodec.encode(buf,  0,  readLen);  }  else  {  readLen  =  0;  }	  	compilable	  [FE]  AssertionError  	7	12	add
