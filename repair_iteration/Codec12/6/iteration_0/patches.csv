bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    baseNCodec.encode(b,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    baseNCodec.encode(b,  0,  c);		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	20	add
2	[BUG]  [BUGGY]    baseNCodec.encode(b,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    baseNCodec.encode(b,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    baseNCodec.encode(b,  0,  c);		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	20	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }		compilable	  [FE]  AssertionError  	12	12	add
4	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }		compilable	  [FE]  AssertionError  	12	12	add
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException  	12	25	add
6	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException  	12	25	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }		compilable	  [FE]  AssertionError  	12	19	add
8	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  System.arraycopy(b,  0,  buf,  offset,  len);  }		compilable	  [FE]  AssertionError  	12	19	add
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }		compilable	  [FE]  IllegalStateException  	12	25	add
10	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]            AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  throw  new  IllegalStateException( " ");  }		compilable	  [FE]  IllegalStateException  	12	25	add
11	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException  	12	25	add
12	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException  	12	25	add
13	[BUG]  [BUGGY]    BaseNCodec  baseNCodec  =  getBaseNCodec();  [CE]  cannot  find  symbol  [FE]                AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    BaseNCodec  baseNCodec  =  getBaseNCodec();  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    BaseNCodec  baseNCodec  =  getBaseNCodec();		non-compiled	[CE]  cannot  find  symbol	12	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }		compilable	  [FE]  AssertionError  	12	12	add
15	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [FE]  AssertionError  [FE]                  AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(b,  0,  c);  }		compilable	  [FE]  AssertionError  	12	12	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    baseNCodec.encode(buf,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    baseNCodec.encode(buf,  0,  c);		compilable	  [FE]  AssertionError  	12	20	add
17	[BUG]  [BUGGY]    baseNCodec.encode(buf,  0,  c);  [FE]  AssertionError  [FE]                    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    baseNCodec.encode(buf,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    baseNCodec.encode(buf,  0,  c);		compilable	  [FE]  AssertionError  	12	20	add
18	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	21	add
19	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  offset  +=  len;  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	21	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.encode(buf,  0,  len);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.encode(buf,  0,  len);	baseNCodec.decode(buf,  0,  c);  	compilable	  [FE]  AssertionError  	11	24	replace
21	[BUG]  [BUGGY]  baseNCodec.encode(buf,  0,  len);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.encode(buf,  0,  len);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.encode(buf,  0,  len);	baseNCodec.decode(buf,  0,  c);  	compilable	  [FE]  AssertionError  	11	24	replace
22	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(b,  0,  c);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(b,  0,  c);	baseNCodec.decode(buf,  0,  c);  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	21	replace
23	[BUG]  [BUGGY]  baseNCodec.decode(b,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(b,  0,  c);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(b,  0,  c);	baseNCodec.decode(buf,  0,  c);  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	21	replace
24	[BUG]  [BUGGY]  timeout  [FE]        AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(buf,  0,  len);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(buf,  0,  len);	baseNCodec.decode(buf,  0,  c);  	compilable	timeout	11	1	replace
25	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  len);  timeout  [FE]        AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(buf,  0,  len);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  len);	baseNCodec.decode(buf,  0,  c);  	compilable	timeout	11	1	replace
26	[BUG]  [BUGGY]  timeout  [FE]          AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(buf,  0,  b.length);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(buf,  0,  b.length);	baseNCodec.decode(buf,  0,  c);  	compilable	timeout	11	1	replace
27	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  b.length);  timeout  [FE]          AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(buf,  0,  b.length);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  b.length);	baseNCodec.decode(buf,  0,  c);  	compilable	timeout	11	1	replace
28	[BUG]  [BUGGY]  BaseNCodec.encode(buf,  0,  c);  [CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  BaseNCodec.encode(buf,  0,  c);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec.encode(buf,  0,  c);	baseNCodec.decode(buf,  0,  c);  	non-compiled	[CE]  non-static  method  encode(byte[],int,int)  cannot  be  referenced  from  a  static  context	11	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }		compilable	  [FE]  AssertionError  	12	12	add
30	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  readLen  =  0;  }		compilable	  [FE]  AssertionError  	12	12	add
31	[BUG]  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    if(doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {		non-compiled	[CE]  ';'  expected	12	None	add
32	[BUG]  [BUGGY]    codec.encode(buf,  0,  c);  [CE]  cannot  find  symbol  codec  [FE]        AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    codec.encode(buf,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    codec.encode(buf,  0,  c);		non-compiled	[CE]  cannot  find  symbol  codec	12	None	add
33	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    System.arraycopy(b,  offset,  buf,  0,  c);		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	25	add
34	[BUG]  [BUGGY]    System.arraycopy(b,  offset,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  offset,  buf,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    System.arraycopy(b,  offset,  buf,  0,  c);		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	25	add
35	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  offset  +  1,  buf,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    System.arraycopy(b,  offset  +  1,  buf,  0,  c);		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	25	add
36	[BUG]  [BUGGY]    System.arraycopy(b,  offset  +  1,  buf,  0,  c);  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  offset  +  1,  buf,  0,  c);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    System.arraycopy(b,  offset  +  1,  buf,  0,  c);		compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	25	add
37	[BUG]  [BUGGY]    System.arraycopy(b,  offset  +  1,  buf,  c,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  offset  +  1,  buf,  c,  doEncode);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    System.arraycopy(b,  offset  +  1,  buf,  c,  doEncode);		non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	12	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	    System.arraycopy(b,  0,  buf,  offset,  len);		compilable	  [FE]  AssertionError  	12	19	add
39	[BUG]  [BUGGY]    System.arraycopy(b,  0,  buf,  offset,  len);  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  0,  buf,  offset,  len);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    System.arraycopy(b,  0,  buf,  offset,  len);		compilable	  [FE]  AssertionError  	12	19	add
40	[BUG]  [BUGGY]    codec.encode(buf,  0,  len);  [CE]  cannot  find  symbol  codec  [FE]            AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    codec.encode(buf,  0,  len);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    codec.encode(buf,  0,  len);		non-compiled	[CE]  cannot  find  symbol  codec	12	None	add
41	[BUG]  [BUGGY]    System.arraycopy(b,  offset,  buf,  c,  doEncode);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]    System.arraycopy(b,  offset,  buf,  c,  doEncode);  [BUGGY]  baseNCodec.decode(buf,  0,  c);  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	    System.arraycopy(b,  offset,  buf,  c,  doEncode);		non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	12	None	add
42	[BUG]  [BUGGY]  timeout  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(buf,  0,  c  +  1);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	add	baseNCodec.decode(buf,  0,  c  +  1);	baseNCodec.decode(buf,  0,  c);  	compilable	timeout	11	1	replace
43	[BUG]  [BUGGY]  baseNCodec.decode(buf,  0,  c  +  1);  timeout  [FE]    AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  baseNCodec.decode(buf,  0,  c  +  1);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	baseNCodec.decode(buf,  0,  c  +  1);	baseNCodec.decode(buf,  0,  c);  	compilable	timeout	11	1	replace
44	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]      AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  len);	baseNCodec.decode(buf,  0,  c);  	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	11	None	replace
45	[BUG]  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  c);  [CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)  [FE]        AssertionError  [CONTEXT]  if  (doEncode)  {  baseNCodec.encode(buf,  0,  c);  }  else  {  [BUGGY]  BaseNCodec  c  =  baseNCodec.encode(buf,  0,  c);  [BUGGY]  }  [CLASS]  BaseNCodecInputStream  [METHOD]  read  [RETURN_TYPE]  int  byte[]  b  int  offset  int  len  [VARIABLES]  byte[]  b  buf  singleByte  boolean  doEncode  BaseNCodec  baseNCodec  int  c  len  offset  readLen  	projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java	0.28005601680560194	119	119	12	replace	BaseNCodec  c  =  baseNCodec.encode(buf,  0,  c);	baseNCodec.decode(buf,  0,  c);  	non-compiled	[CE]  variable  c  is  already  defined  in  method  read(byte[],int,int)	11	None	replace
