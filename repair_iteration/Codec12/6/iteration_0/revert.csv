projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.encode(b,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(buf,0,c);}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(buf,0,c);}else{thrownewIllegalArgumentException("");}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(buf,0,c);}else{System.arraycopy(b,0,buf,offset,len);}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(buf,0,c);}else{thrownewIllegalStateException("");}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(b,0,c);}else{thrownewIllegalArgumentException("");}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119BaseNCodecbaseNCodec=getBaseNCodec();
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(b,0,c);}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.encode(buf,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(buf,0,c);}else{offset+=len;}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.decode(buf,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.encode(buf,0,len);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.decode(b,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.decode(buf,0,len);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.decode(buf,0,b.length);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119BaseNCodec.encode(buf,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(buf,0,c);}else{readLen=0;}
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119if(doEncode){baseNCodec.encode(buf,0,c);}else{
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119codec.encode(buf,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119System.arraycopy(b,offset,buf,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119System.arraycopy(b,offset+1,buf,0,c);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119System.arraycopy(b,offset+1,buf,c,doEncode);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119System.arraycopy(b,0,buf,offset,len);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119codec.encode(buf,0,len);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119System.arraycopy(b,offset,buf,c,doEncode);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119baseNCodec.decode(buf,0,c+1);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119BaseNCodecc=baseNCodec.encode(buf,0,len);
projects/Codec12/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java119BaseNCodecc=baseNCodec.encode(buf,0,c);
