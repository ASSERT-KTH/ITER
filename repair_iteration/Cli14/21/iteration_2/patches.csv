bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.default);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.default);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.default);	  newOptionMap.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(defaultPrefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(defaultPrefixes);	  this.maximum    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newPrefixes,  minimum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(newPrefixes,  minimum);	  this.maximum    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
7	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(options);	  this.optionMap    =    Collections.unmodifiableSet(newOptionMap,    options);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
8	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(newOptionMap,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(newOptionMap,  newPrefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(newOptionMap,  newPrefixes);	  this.optionMap    =    Collections.unmodifiableSet(newOptionMap,    options);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes()    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
10	[BUG]  [BUGGY]  newPrefixes.add(option.getName());  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.add(option.getName());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.add(option.getName());	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  newPrefixes.add(option.getDescription());  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.add(option.getDescription());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.add(option.getDescription());	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  for(Option  option  :  this.options.values())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  Il  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Option  option  :  this.options.values())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  Il  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Option  option  :  this.options.values())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  Il	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  }	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPrefix    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
16	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefix  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefix  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefix	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPrefix    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
17	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(this.prefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(this.prefixes);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(this.prefixes);	  this.optionMap    =    Collections.unmodifiableSortedMap(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
18	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(option);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(option);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(option);	  this.optionMap    =    Collections.unmodifiableSortedMap(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
19	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableList(optionMap);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableList(optionMap);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableList(optionMap);	  this.optionMap    =    Collections.unmodifiableList(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
20	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableList(newOptionMap,  options);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableList(newOptionMap,  options);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableList(newOptionMap,  options);	  this.optionMap    =    Collections.unmodifiableList(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
21	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableList(default);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableList(default);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableList(default);	  this.optionMap    =    Collections.unmodifiableList(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
22	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPre	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
23	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPre	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
24	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
25	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
26	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
27	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
28	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
29	[BUG]  [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  maximum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  maximum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes.addAll(option.getPrefixes(),  maximum);	  this.prefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  newOptionMap);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes.addAll(option.getPrefixes(),  newOptionMap);	  this.prefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  minimum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  minimum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes.addAll(option.getPrefixes(),  minimum);	  this.prefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.get    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.get    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Option  option  =  options.getOption(name);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  options.getOption(name);	  Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
35	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Option  option  =  optionMap.getOption(name,  minimum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  optionMap.getOption(name,  minimum);	  Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
36	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Option  option  =  optionMap.getOption(name,  maximum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  optionMap.getOption(name,  maximum);	  Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
37	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Option  option  =  optionMap.getOption(name,  newPrefixes);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  optionMap.getOption(name,  newPrefixes);	  Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
38	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(prefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(prefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(prefixes);	  this.optionMap    =    Collections.unmodifiableSet(defaultOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
39	[BUG]  [BUGGY]  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPre    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
41	[BUG]  [BUGGY]  for(Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
44	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
45	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
46	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
47	[BUG]  [BUGGY]  for(Option  option  :  options.iterator().next())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Option  option  :  options.iterator().next())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Option  option  :  options.iterator().next())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.prefixes);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  this.prefixes);	  newPrefixes.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.defaultOptionMap);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.defaultOptionMap);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  this.defaultOptionMap);	  newPrefixes.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minimum  +  1);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minimum  +  1);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(minimum  +  1);	  this.maximum    =    Collections.unmodifiableSet(maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
52	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newMaximum  +  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newMaximum  +  1);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(newMaximum  +  1);	  this.maximum    =    Collections.unmodifiableSet(maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(this.defaultOptionMap);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(this.defaultOptionMap);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(this.defaultOptionMap);	  this.optionMap    =    Collections.unmodifiableSortedMap(defaultOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
56	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.get	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPre    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
58	[BUG]  [BUGGY]  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
59	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(options);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(options);	  this.optionMap    =    Collections.unmodifiableSortedMap(newOptionMap,    options);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(optionMap,  newOptionMap);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(optionMap,  newOptionMap);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(optionMap,  newOptionMap);	  this.optionMap    =    Collections.unmodifiableSortedMap(newOptionMap,    options);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  newOptionMap.add(option.getPrefixes(),  this.maximum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.add(option.getPrefixes(),  this.maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.add(option.getPrefixes(),  this.maximum);	  newOptionMap.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
62	[BUG]  [BUGGY]  newOptionMap.add(option.getPrefixes(),  this.prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.add(option.getPrefixes(),  this.prefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.add(option.getPrefixes(),  this.prefixes);	  newOptionMap.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
63	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)option.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
64	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)option.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
65	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(!option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(!option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(!option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)option.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
66	[BUG]  [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.prefixes,  this.maximum);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.prefixes,  this.maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap  =  Collections.unmodifiableSet(this.prefixes,  this.maximum);	  newOptionMap    =    Collections.unmodifiableSet(this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
67	[BUG]  [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.prefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.prefixes,  maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap  =  Collections.unmodifiableSet(this.prefixes,  maximum);	  newOptionMap    =    Collections.unmodifiableSet(this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
68	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
69	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
70	[BUG]  [BUGGY]  for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
71	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
73	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.prefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.prefixes,  maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.prefixes,  maximum);	  newOptionMap.addAll(option.getPrefixes(),    this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  newOptionMap.addAll(this.prefixes.getPrefixes(),  option);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(this.prefixes.getPrefixes(),  option);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(this.prefixes.getPrefixes(),  option);	  newOptionMap.addAll(option.getPrefixes(),    this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.prefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.prefixes,  minimum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.prefixes,  minimum);	  newOptionMap.addAll(option.getPrefixes(),    this.prefixes);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Options    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Options    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
78	[BUG]  [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(newPrefixes,  maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes  =  Collections.unmodifiableSet(newPrefixes,  maximum);	  this.prefixes    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
79	[BUG]  [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(defaultPrefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes  =  Collections.unmodifiableSet(defaultPrefixes);	  this.prefixes    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
80	[BUG]  [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(newPrefixes,  minimum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes  =  Collections.unmodifiableSet(newPrefixes,  minimum);	  this.prefixes    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
81	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.minimum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.minimum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.minimum);	  newOptionMap.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
82	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum,  this.anonymous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum,  this.anonymous);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.maximum,  this.anonymous);	  newOptionMap.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum,  minimum);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum,  minimum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.maximum,  minimum);	  newOptionMap.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  this.options.iterator();	  Iterator    <    Option>    i    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
85	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  newOptions.iterator();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  newOptions.iterator();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  newOptions.iterator();	  Iterator    <    Option>    i    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
86	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  newOptionMap.iterator();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  newOptionMap.iterator();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  newOptionMap.iterator();	  Iterator    <    Option>    i    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
87	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.minimum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.minimum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  this.minimum);	  newPrefixes.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
88	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.maximum,  minimum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.maximum,  minimum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  this.maximum,  minimum);	  newPrefixes.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
89	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  minimum);	  newPrefixes.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
90	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newMaximum  -  1);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newMaximum  -  1);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(newMaximum  -  1);	  this.maximum    =    Collections.unmodifiableSet(maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
91	[BUG]  [BUGGY]  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
92	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(option);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(option);	  this.optionMap    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(defaultPrefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(defaultPrefixes);	  this.optionMap    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPre    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
95	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(newPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(newPrefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(newPrefixes);	  this.optionMap    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
96	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
97	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
98	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Options    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
99	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(optionMap,  options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(optionMap,  options);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(optionMap,  options);	  this.optionMap    =    Collections.unmodifiableSortedMap(newOptionMap,    options);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
100	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefix  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefix  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefix	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes()    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
101	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes()    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
102	[BUG]  [BUGGY]  Ilerator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Ilerator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Ilerator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
103	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(optionmap);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(optionmap);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(optionmap);	  this.optionMap    =    Collections.unmodifiableSet(newOptionMap,    options);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
104	[BUG]  [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(maximum);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes  =  Collections.unmodifiableSet(maximum);	  this.prefixes    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
105	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  -  2);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  -  2);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(maximum  -  2);	  this.maximum    =    Collections.unmodifiableSet(maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
106	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Option  option  =  optionMap.getOption(this.description);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  optionMap.getOption(this.description);	  Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
107	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.values().iterator();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.values().iterator();	  Iterator    <    Option>    i    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
108	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.keySet().iterator();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.keySet().iterator();	  Iterator    <    Option>    i    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
109	[BUG]  [BUGGY]  Ilerator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Ilerator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Ilerator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
110	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  optionMap.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  optionMap.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  optionMap.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
111	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
112	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
113	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
114	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum  +  1);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.maximum  +  1);	  newOptionMap.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
115	[BUG]  [BUGGY]  this.minimum  =  Collections.unmodifiableSet(maximum);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.minimum  =  Collections.unmodifiableSet(maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.minimum  =  Collections.unmodifiableSet(maximum);	  this.maximum    =    Collections.unmodifiableSet(minimum);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
116	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  /  1);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  /  1);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(maximum  /  1);	  this.maximum    =    Collections.unmodifiableSet(maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
117	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPre    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
118	[BUG]  [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(newOptionMap);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(newOptionMap);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap  =  Collections.unmodifiableSet(newOptionMap);	  newOptionMap    =    Collections.unmodifiableSet(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
119	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)option.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
120	[BUG]  [BUGGY]  this.prefixes.add(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes.add(option.getPrefixes());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes.add(option.getPrefixes());	  this.prefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
121	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(prefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(prefixes);	  this.maximum    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
122	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefix  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefix  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefix	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
123	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.defaultValues);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.defaultValues);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.defaultValues);	  newOptionMap.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
124	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.maximum  +  1);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.maximum  +  1);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  this.maximum  +  1);	  newPrefixes.addAll(option.getPrefixes(),    this.maximum);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableList(option);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableList(option);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableList(option);	  this.optionMap    =    Collections.unmodifiableList(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
126	[BUG]  [BUGGY]  for(Iterator  i  =  this.optionMap.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  this.optionMap.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.optionMap.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
127	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
128	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
129	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableList(maximum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableList(maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableList(maximum);	  this.maximum    =    Collections.unmodifiableSet(minor);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
130	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
131	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes(),  maximum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.add(option.getPrefixes(),  maximum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.add(option.getPrefixes(),  maximum);	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
132	[BUG]  [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.maximum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.maximum);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap  =  Collections.unmodifiableSet(this.maximum);	  newOptionMap    =    Collections.unmodifiableSet(option);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
133	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes(),  name);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.add(option.getPrefixes(),  name);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.add(option.getPrefixes(),  name);	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
134	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes(),  description);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newPrefixes.add(option.getPrefixes(),  description);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.add(option.getPrefixes(),  description);	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
135	[BUG]  [BUGGY]  Integer  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Integer  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Integer  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
136	[BUG]  [BUGGY]  Integer  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Integer  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Integer  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
137	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
138	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
139	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Option  option  =  optionMap.getOption(name,  newAnonymous);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  optionMap.getOption(name,  newAnonymous);	  Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
140	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  this.maximum);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Option  option  =  optionMap.getOption(name,  this.maximum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  optionMap.getOption(name,  this.maximum);	  Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
141	[BUG]  [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.prefixes.addAll(option.getPrefixes(),  options);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes.addAll(option.getPrefixes(),  options);	  this.prefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
142	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minimum  -  1);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minimum  -  1);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(minimum  -  1);	  this.maximum    =    Collections.unmodifiableSet(maximum    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
143	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.entrySet().iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  j.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
145	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  while(i.hasNext())  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  while(i.hasNext())  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  while(i.hasNext())  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
146	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  it.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  it.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  it.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
147	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes()    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
148	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(description))  {  this.prefixes.addAll(option.getPrefixes()  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(description))  {  this.prefixes.addAll(option.getPrefixes()  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(description))  {  this.prefixes.addAll(option.getPrefixes()	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes()    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
149	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  while(i.hasNext())  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  while(i.hasNext())  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  while(i.hasNext())  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    this.options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
150	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(optionMap,  options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(optionMap,  options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(optionMap,  options);	  this.optionMap    =    Collections.unmodifiableSet(newOptionMap,    options);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
151	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  it.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  it.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  it.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
152	[BUG]  [BUGGY]  newOptionMap.add(option.getPrefixes(),  name);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  newOptionMap.add(option.getPrefixes(),  name);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.add(option.getPrefixes(),  name);	  newOptionMap.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
153	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(description))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(description))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(description))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
154	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ".);  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(!option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
155	[BUG]  [BUGGY]  Integer  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  Integer  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Integer  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }	  Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
156	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Option  option  :  options.values())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Option  option  :  options.values())  {  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPre    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
157	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.get    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
158	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableList(defaultOptionMap);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableList(defaultOptionMap);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableList(defaultOptionMap);	  this.optionMap    =    Collections.unmodifiableList(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
159	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".);  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)option.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
160	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(maximum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);      [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(maximum);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(maximum);	  this.optionMap    =    Collections.unmodifiableSortedMap(defaultOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
