projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(newOptionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=prefixes.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionsoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes.addAll(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.add(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableList(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(newOptionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.get
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(newMaximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(minor);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(maximum-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(maximum+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.add(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=optionMap.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.getPrefix
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),this.maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("".);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes=Collections.unmodifiableSet(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes()
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.getPrefixes
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.get
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(newPrefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(newOptionMap,newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes()
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.add(option.getName());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.add(option.getDescription());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Optionoption:this.options.values()){for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIl
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.get
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.getPrefix
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableList(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableList(newOptionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableList(default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.get
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();j.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes.addAll(option.getPrefixes(),maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes.addAll(option.getPrefixes(),newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes.addAll(option.getPrefixes(),minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option.
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=options.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=optionMap.getOption(name,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=optionMap.getOption(name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=optionMap.getOption(name,newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=prefixes.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.prefixes.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=prefixes.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();j.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Optionoption:options.iterator().next()){for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionsoption=(Option)i.next();this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),this.defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(minimum+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(newMaximum+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(this.defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.get
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=prefixes.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(optionMap,newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.add(option.getPrefixes(),this.maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.add(option.getPrefixes(),this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(!option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(this.prefixes,this.maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(this.prefixes,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("".
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=prefixes.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.prefixes,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(this.prefixes.getPrefixes(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.prefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionsoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=prefixes.iterator();i.hasNext();){Optionsoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes=Collections.unmodifiableSet(newPrefixes,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes=Collections.unmodifiableSet(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes=Collections.unmodifiableSet(newPrefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.maximum,this.anonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.maximum,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=newOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=newOptionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),this.minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),this.maximum,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(newMaximum-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=prefixes.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){this.prefixes.addAll(option
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.entrySet().iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionsoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(optionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefix
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Ileratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(optionmap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes=Collections.unmodifiableSet(maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(maximum-2);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=optionMap.getOption(this.description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Ilerator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=optionMap.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.maximum+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.minimum=Collections.unmodifiableSet(maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(maximum/1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPre
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes.add(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefix
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.addAll(option.getPrefixes(),this.defaultValues);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.addAll(option.getPrefixes(),this.maximum+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableList(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=this.optionMap.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableList(maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.add(option.getPrefixes(),maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap=Collections.unmodifiableSet(this.maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.add(option.getPrefixes(),name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newPrefixes.add(option.getPrefixes(),description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Integeri=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Integer<Option>i=options.iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.entrySet().iterator();i.hasNext();){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=this.options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=optionMap.getOption(name,newAnonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Optionoption=optionMap.getOption(name,this.maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.prefixes.addAll(option.getPrefixes(),options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.maximum=Collections.unmodifiableSet(minimum-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.entrySet().iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();j.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();while(i.hasNext()){Optionoption=(Option)i.next();this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();it.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes()
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(description)){this.prefixes.addAll(option.getPrefixes()
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();while(i.hasNext()){Optionoption=(Option)i.next();newPrefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSet(optionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Iterator<Option>i=options.iterator();it.hasNext();){Optionoption=(Option)i.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111newOptionMap.add(option.getPrefixes(),name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(description)){thrownewIllegalArgumentException("");}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getName().equals(name)){thrownewIllegalArgumentException("".);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111Integeri=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes.addAll(option.getPrefixes());}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Optionoption:options.values()){for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(option.getName().equals(name)){this.prefixes
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)i.next();if(!option.getPrefixes().contains(name)){this.prefixes.addAll(option.get
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableList(defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111for(Iteratori=options.iterator();i.hasNext();){Optionoption=(Option)option.next();if(option.getPrefixes().contains(name)){thrownewIllegalArgumentException("".);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java111this.optionMap=Collections.unmodifiableSortedMap(maximum);
