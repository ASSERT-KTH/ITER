bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap,  options);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap,  options);  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap,  options);	  this.optionMap    =    Collections.unmodifiableSortedMap(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(defaultOptionMap);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(defaultOptionMap);  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(defaultOptionMap);	  this.optionMap    =    Collections.unmodifiableSortedMap(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  options);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  options);	      newOptionMap.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.maximum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.maximum);	      newOptionMap.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newOptionMap.addAll(option.getPrefixes(),  this.prefixes);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.addAll(option.getPrefixes(),  this.prefixes);	      newOptionMap.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( "	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Options  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  this.prefixes.addAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.prefixes.addAll(option.getPrefixes());  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes.addAll(option.getPrefixes());	  newPrefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  options);  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  options);	  newPrefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newPrefixes.add(option.getPrefixes());  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.add(option.getPrefixes());	  newPrefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableList(newOptionMap);  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableList(newOptionMap);  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableList(newOptionMap);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(optionMap);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(optionMap);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(optionMap);	      this.optionMap    =    Collections.unmodifiableSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(newPrefixes);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(newPrefixes);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(newPrefixes);	      this.optionMap    =    Collections.unmodifiableSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(newOptionMap,  options);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(newOptionMap,  options);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(newOptionMap,  options);	      this.optionMap    =    Collections.unmodifiableSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableSortedMap(prefixes);  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSortedMap(prefixes);	  this.optionMap    =    Collections.unmodifiableSortedMap(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.prefixes);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(this.prefixes);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap  =  Collections.unmodifiableSet(this.prefixes);	      newOptionMap    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(prefixes);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(prefixes);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap  =  Collections.unmodifiableSet(prefixes);	      newOptionMap    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(option);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newOptionMap  =  Collections.unmodifiableSet(option);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap  =  Collections.unmodifiableSet(option);	      newOptionMap    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPre	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPre	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPre  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  this.options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPre	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.get	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newMaximum);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newMaximum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(newMaximum);	      this.maximum    =    Collections.unmodifiableSet(maximum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newPrefixes);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.maximum  =  Collections.unmodifiableSet(newPrefixes);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(newPrefixes);	      this.maximum    =    Collections.unmodifiableSet(maximum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minor);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minor);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(minor);	      this.maximum    =    Collections.unmodifiableSet(maximum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(defaultOptionMap);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.optionMap  =  Collections.unmodifiableSet(defaultOptionMap);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.optionMap  =  Collections.unmodifiableSet(defaultOptionMap);	      this.optionMap    =    Collections.unmodifiableSet(newOptionMap);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  -  1);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  -  1);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(maximum  -  1);	      this.maximum    =    Collections.unmodifiableSet(maximum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  +  1);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.maximum  =  Collections.unmodifiableSet(maximum  +  1);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(maximum  +  1);	      this.maximum    =    Collections.unmodifiableSet(maximum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  newOptionMap.add(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newOptionMap.add(option.getPrefixes());  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newOptionMap.add(option.getPrefixes());	      newOptionMap.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Option  option  =  optionMap.getOption(name);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefix  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefix  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefix	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  newPrefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.maximum);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  this.maximum);  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	newPrefixes.addAll(option.getPrefixes(),  this.maximum);	  newPrefixes.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)option.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ");  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  throw  new  IllegalArgumentException( " ".);  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  Iterator  <  Option>  i  =  options.iterator();  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	Iterator  <  Option>  i  =  options.iterator();	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.prefixes  =  Collections.unmodifiableSet(newPrefixes);	      newOptionMap    =    Collections.unmodifiableSet(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes()	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(!option.getName().equals(name))  {  this.prefixes.addAll(option.getPrefixes());  }	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getName().equals(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefixes  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefixes  [BUGGY]      [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {  Option  option  =(Option)i.next();  if(option.getPrefixes().contains(name))  {  this.prefixes.addAll(option.getPrefixes	  for(Iterator    i    =    options.iterator();    i.hasNext();)    {    Option    option    =(Option)i.next();    if(option.getPrefixes().contains(name))    {    this.prefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minimum);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    }  newPrefixes.addAll(option.getPrefixes());  }  }  this.anonymous  =  Collections.unmodifiableList(newAnonymous);  this.optionMap  =  Collections.unmodifiableSortedMap(newOptionMap);  this.prefixes  =  Collections.unmodifiableSet(newPrefixes);    [BUGGY]  this.maximum  =  Collections.unmodifiableSet(minimum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	this.maximum  =  Collections.unmodifiableSet(minimum);	      this.maximum    =    Collections.unmodifiableSet(maximum);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
