projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofArgument){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAlternative){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(i.hasNext()||optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption||optioninstanceofAnonymous)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newAnonymous.add(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)i.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getDescription();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getAnonymousName();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName(),description;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)||options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93option=(Option)i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAlternative)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||newAnonymous.contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(option.hasNext()||optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(i.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasNext()||optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getOptions()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.cloneOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)optionMap.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAlternative||optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93i.remove();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getAnonymousValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getAnonymous();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.getOptions().contains(option)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&option.getDescription()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.getValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()||!(option.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasNext()&&optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.cloneOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.cloneTree();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.cloneTree();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(i.hasNext()||optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&!(i.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null&&option.getTriggers()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null&&option.getTriggers()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes,defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,minimum,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(description,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getDescription().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getTriggers().contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(),newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(name,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,minimum+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getText();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,minimum,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(prefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasNext()||optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasNext()&&optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.cloneOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newAnonymous.add(option.getName());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newAnonymous.add(option,name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newAnonymous.addAll(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)i.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes,minimum,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(name,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getAnonymousOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofRandom)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAlternative)&&options.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getSummary();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null&&newAnonymous.contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null&&newAnonymous.contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||newAnonymous.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||options.getOptions().contains(option)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.getOptions().contains(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.getOptions().contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getAnonymousValue()+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getOptions()!=null&&option.getOptions().size()>maximum){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getOptions()!=null||option.getOptions().size()==maximum){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getOptions()!=null||options.getOptions().size()==maximum){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(option.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getSimpleName();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getDescription().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getTriggers().contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getAnonymousTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.cloneOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getName()!=null||newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.contains(option.getName())||options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous)&&options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous)&&options.contains(option.getAnonymous())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(prefixes,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,description,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAnonymous||optioninstanceofAlternative){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAnonymous||optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(defaultPrefixes,defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(defaultPrefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(defaultPrefixes,name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93option=(Option)option.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName(),description+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName(),description,minimum;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName(),description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(iinstanceofOption)&&!(option.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(i.hasNext()instanceofOption)&&!(option.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&!(option.hasNext()||option.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()&&!(option.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasAnonymous()&&!(option.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||option.getTriggers()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null&&option.getTriggers()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&newAnonymous.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)||options.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getDescription().equals(description)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&name.equals(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&description.equals(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(),newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.cloneTree();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||options.contains(option.getName())&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(i.hasNext()||options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasNext()&&optionsinstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasNext()||optionsinstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasNext()&&!option.hasNext()){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(minimum,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null||option.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null&&option.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null||name.equals(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(name,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)optionMap.get(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,description,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,description,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(name,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||option.getDescription()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&option.getDescription()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption&&option.getDescription()!=null)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption&&optioninstanceofAnonymous)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous||optioninstanceofAnonymous)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93option=(Option)option.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newOptionMap.put(option.getName(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newPrefixes.add(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||option.getTriggers()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultName);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)||newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&newPrefixes.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(iinstanceofOption)&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(newPrefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.getAnonymousValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.cloneTree();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()||!option.hasNext()||optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null||newAnonymous.contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName(),description+"n";
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasNext()||option.hasAnonymous()){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||options.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||options.contains(option.getAnonymous())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.getDescription()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.getAnonymous();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.contains(option.getAnonymous())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()&&!option.hasNext()&&optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)optionMap.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||options.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||optioninstanceofOption||options.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.getOptions().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(prefixes,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.cloneOptionMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getAnonymousDescription();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,maximum,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&option.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||option.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.getOptions().contains(option.getOptions())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous||optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.cloneOptionMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous)&&option.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous)&&options.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.contains(option.getAnonymous())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAlternative&&optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.evaluate(newAnonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getOptions()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||options.getTriggers()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getAnonymousValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymousOptions()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null||options.getDescription().equals(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=optionMap.getOption(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()||!(option.hasNext()&&option.getTriggers()instanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&!(option.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&!(option.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.getOptions().contains(option)||options.getOptions().contains(option)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAlternative&&options.getOptions().contains(option)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)optionMap.get(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93i.set(option.getId(),name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93i.clear();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null||newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(i.hasNext()&&optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAlternative)&&options.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAlternative)&&option.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&option.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getAnonymousName(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null&&option.getTriggers()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option!=null){newAnonymous.add(option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(i.hasNext()||optioninstanceofOption||optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAction)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)i.getAnonymousValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(i.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null||option.getTriggers()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getTriggers()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasNext()){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null&&option.getDescription().length()>maximum){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null&&option.getName().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(i.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName()+"_"+description;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(i.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption||option.getDescription()!=null)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||newAnonymous.contains(option.getPrefixes())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getName()!=null||newAnonymous.contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasNext()||!(option.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()||!(option.hasNext()&&option.getDescription()instanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasArg()||!(option.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getOptions()!=null&&options.getOptions().size()>maximum){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAlternative)&&options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption||options.getOptions().contains(option))){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(defaultPrefixes,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getOptions().contains(option.getOptions())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getAllTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(i.hasNext()){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(i.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)i.getAnonymous();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)i.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newAnonymous.put(option.getName(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newAnonymous.addAll(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getAnonymousTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAlternative||optioninstanceofAnonymous)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)||option.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(i.hasNext()||optioninstanceofOption||options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&!(i.hasNext()||option.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(iinstanceofOption)&&!(i.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(i.hasNext())&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(prefixes,defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93i.prepend(option.getName());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93i.set(name,option.getDescription());
