bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!(option  instanceof  Option  ||  option  instanceof  Anonymous))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option  ||  option  instanceof  Anonymous))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option  ||  option  instanceof  Anonymous))  {	  if(!(option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  if(!(option  instanceof  Anonymous))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Anonymous))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Anonymous))  {	  if(!(option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  final  Option  option  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  options.getOption();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption();	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(i);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(i);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(i);	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  newAnonymous.add(option);  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	newAnonymous.add(option);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =(Option)option.clone();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =  options.getOption(name);  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =  options.getOption(name);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  if(option  instanceof  Option  ||  option  instanceof  Anonymous)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option  instanceof  Option  ||  option  instanceof  Anonymous)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option  instanceof  Option  ||  option  instanceof  Anonymous)  {	  if(option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  final  Option  option  =(Option)i.clone();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =(Option)i.clone();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =(Option)i.clone();	      final    Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  Option  option  =(Option)option.getOption();  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =(Option)option.getOption();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =(Option)option.getOption();	      Option    option    =(Option)option.getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  final  String  name  =  option.getDescription();  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  String  name  =  option.getDescription();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  String  name  =  option.getDescription();	      final    String    name    =    option.getName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  final  String  name  =  option.getAnonymousName();  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  String  name  =  option.getAnonymousName();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  String  name  =  option.getAnonymousName();	      final    String    name    =    option.getName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  final  String  name  =  option.getName(),  description;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  String  name  =  option.getName(),  description;  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  String  name  =  option.getName(),  description;	      final    String    name    =    option.getName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(description);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(description);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(description);	      final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(name,  minimum);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(name,  minimum);	      final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(name,  maximum);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(name,  maximum);	      final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getName()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  if(!(option  instanceof  Option)||  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option)||  options.contains(option.getName()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option)||  options.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  options.contains(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option)&&  options.contains(option.getDescription()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option)&&  options.contains(option.getDescription()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =(Option)option.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  option  =(Option)i.next();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	option  =(Option)i.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if(!(option  instanceof  Alternative))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Alternative))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Alternative))  {	  if(option    instanceof    Alternative)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(prefixes,  minimum);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(prefixes,  minimum);	      final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(newPrefixes);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(newPrefixes);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(newPrefixes);	      final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  final  Option  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =(Option)option.next();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =(Option)option.next();	      final    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  if(option.getAnonymous()!=  null  ||  newAnonymous.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.getAnonymous()!=  null  ||  newAnonymous.contains(option.getTriggers()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.getAnonymous()!=  null  ||  newAnonymous.contains(option.getTriggers()))  {	  if(option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  if(option.getAnonymous()!=  null  ||  newAnonymous.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.getAnonymous()!=  null  ||  newAnonymous.contains(option.getName()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.getAnonymous()!=  null  ||  newAnonymous.contains(option.getName()))  {	  if(option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  if(option.getAnonymous()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.getAnonymous()  ==  null)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.getAnonymous()  ==  null)  {	  if(option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(defaultPrefixes,  minimum);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(defaultPrefixes,  minimum);	      final    Option    option    =    option.getOption(defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =  options.getOption();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =  options.getOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  Option  option  =  option.getOption(name);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =  option.getOption(name);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =  option.getOption(name);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  if(!(option.hasNext()  ||  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option.hasNext()  ||  option  instanceof  Option))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option.hasNext()  ||  option  instanceof  Option))  {	  if(!(i.hasNext()    ||    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  if(!(i.hasNext()  &&  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(i.hasNext()  &&  option  instanceof  Option))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(i.hasNext()  &&  option  instanceof  Option))  {	  if(!(i.hasNext()    ||    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  if(!option.hasNext()  ||  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!option.hasNext()  ||  option  instanceof  Option)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!option.hasNext()  ||  option  instanceof  Option)  {	  if(!(i.hasNext()    ||    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  options.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option)&&  options.getTriggers().contains(option.getTriggers()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option)&&  options.getTriggers().contains(option.getTriggers()))  {	  if(!(option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  option.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option)&&  option.getTriggers().contains(option.getTriggers()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option)&&  option.getTriggers().contains(option.getTriggers()))  {	  if(!(option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if(option.getOptions()!=  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.getOptions()!=  null)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.getOptions()!=  null)  {	  if(option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  if(option.getDescription()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.getDescription()!=  null)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.getDescription()!=  null)  {	  if(option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  Option  option  =  option.getOption(i);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =  option.getOption(i);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =  option.getOption(i);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  Option  option  =  option.cloneOption();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =  option.cloneOption();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =  option.cloneOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  options.getOption(prefixes);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(prefixes);	      final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(prefixes,  maximum);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(prefixes,  maximum);	      final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  final  Option  option  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =(Option)optionMap.clone();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =(Option)optionMap.clone();	      final    Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  if(option  instanceof  Alternative  ||  option  instanceof  Anonymous)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option  instanceof  Alternative  ||  option  instanceof  Anonymous)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option  instanceof  Alternative  ||  option  instanceof  Anonymous)  {	  if(option    instanceof    Alternative)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  i.remove();  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  i.remove();  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	i.remove();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  Option  option  =(Option)option.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =(Option)option.getAnonymousValue();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =(Option)option.getAnonymousValue();	      Option    option    =(Option)option.getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  Option  option  =(Option)option.getAnonymous();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =(Option)option.getAnonymous();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =(Option)option.getAnonymous();	      Option    option    =(Option)option.getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option  instanceof  Option  &&  options.getOptions().contains(option))  {	  if(option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  option.getDescription()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option  instanceof  Option  &&  option.getDescription()!=  null)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option  instanceof  Option  &&  option.getDescription()!=  null)  {	  if(option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option  instanceof  Option  &&  options.contains(option.getName()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option  instanceof  Option  &&  options.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
51	[BUG]  [BUGGY]  if(option  instanceof  Option  ||  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option  instanceof  Option  ||  options.contains(option.getName()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option  instanceof  Option  ||  options.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
52	[BUG]  [BUGGY]  final  Option  option  =(Option)option.getValue();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =(Option)option.getValue();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =(Option)option.getValue();	      final    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  options.getOption(defaultPrefixes);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(defaultPrefixes);	      final    Option    option    =    option.getOption(defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||!(option.hasNext()  &&  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.hasAnonymous()  ||!(option.hasNext()  &&  option  instanceof  Option))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.hasAnonymous()  ||!(option.hasNext()  &&  option  instanceof  Option))  {	  if(!(i.hasNext()    ||    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  if(!option.hasNext()  &&  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!option.hasNext()  &&  option  instanceof  Option)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!option.hasNext()  &&  option  instanceof  Option)  {	  if(!(i.hasNext()    ||    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  final  Option  option  =  option.cloneOption();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.cloneOption();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.cloneOption();	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(name,  description);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(name,  description);	      final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  Option  option  =  option.cloneTree();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  Option  option  =  option.cloneTree();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =  option.cloneTree();	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  final  Option  option  =  option.cloneTree();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.cloneTree();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.cloneTree();	      final    Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
60	[BUG]  [BUGGY]  final  String  name  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  String  name  =  option.getValue();  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  String  name  =  option.getValue();	      final    String    name    =    option.getName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  if(i.hasNext()  ||  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(i.hasNext()  ||  option  instanceof  Option)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(i.hasNext()  ||  option  instanceof  Option)  {	  if(!(i.hasNext()    ||    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
62	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&!(i.hasNext()))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option)&&!(i.hasNext()))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option)&&!(i.hasNext()))  {	  if(!(option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  option.getDescription().equals(name))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(!(option  instanceof  Option)&&  option.getDescription().equals(name))  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(!(option  instanceof  Option)&&  option.getDescription().equals(name))  {	  if(!(option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  if(option.getAnonymous()!=  null  &&  option.getTriggers()!=  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.getAnonymous()!=  null  &&  option.getTriggers()!=  null)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.getAnonymous()!=  null  &&  option.getTriggers()!=  null)  {	  if(option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  if(option.getAnonymous()!=  null  &&  option.getTriggers()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  if(option.getAnonymous()!=  null  &&  option.getTriggers()  ==  null)  {  [BUGGY]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(option.getAnonymous()!=  null  &&  option.getTriggers()  ==  null)  {	  if(option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefixes,  description);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(prefixes,  description);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(prefixes,  description);	      final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
67	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultPrefixes,  defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();    [BUGGY]  final  Option  option  =  option.getOption(defaultPrefixes,  defaultPrefixes);  [BUGGY]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  option.getOption(defaultPrefixes,  defaultPrefixes);	      final    Option    option    =    option.getOption(defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
