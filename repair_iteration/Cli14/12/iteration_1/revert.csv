projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofArgument){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAlternative){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(i.hasNext()||optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption||optioninstanceofAnonymous)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAnonymous)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93newAnonymous.add(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)i.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getDescription();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getAnonymousName();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getName(),description;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)||options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.contains(option.getDescription())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93option=(Option)i.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofAlternative)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||newAnonymous.contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null||newAnonymous.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=options.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(option.hasNext()||optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(i.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasNext()||optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&options.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getTriggers().contains(option.getTriggers())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getOptions()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getDescription()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.getOption(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.cloneOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)optionMap.clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofAlternative||optioninstanceofAnonymous){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93i.remove();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getAnonymousValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=(Option)option.getAnonymous();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.getOptions().contains(option)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&option.getDescription()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption&&options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(optioninstanceofOption||options.contains(option.getName())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=(Option)option.getValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=options.getOption(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.hasAnonymous()||!(option.hasNext()&&optioninstanceofOption)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!option.hasNext()&&optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.cloneOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(name,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93Optionoption=option.cloneTree();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.cloneTree();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalStringname=option.getValue();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(i.hasNext()||optioninstanceofOption){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&!(i.hasNext())){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(!(optioninstanceofOption)&&option.getDescription().equals(name)){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null&&option.getTriggers()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93if(option.getAnonymous()!=null&&option.getTriggers()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(prefixes,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java93finalOptionoption=option.getOption(defaultPrefixes,defaultPrefixes);
