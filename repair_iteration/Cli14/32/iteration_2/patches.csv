bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  option  =(Option)optionMap.get(opt);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  option  =(Option)optionMap.get(opt);	  Option    option    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  option  =(Option)optionMap.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  option  =(Option)optionMap.get(previous);	  Option    option    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  option  =(Option)optionMap.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  option  =(Option)optionMap.get(option);	  Option    option    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
4	[BUG]  [BUGGY]  final  Option  commandLine  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =  optionMap.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =  optionMap.get(option);	  final    Option    commandLine    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  final  Option  commandLine  =  optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =  optionMap.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =  optionMap.get(previous);	  final    Option    commandLine    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  if(option  ==  null  ||  previous)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  ||  previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  ||  previous)  {	  if(option    ==    null    ||    arguments.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
7	[BUG]  [BUGGY]  if(opt!=  null  ||  arguments.previous)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  ||  arguments.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  ||  arguments.previous)  {	  if(option    ==    null    ||    arguments.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
8	[BUG]  [BUGGY]  if(option!=  null  &&  argument.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  argument.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  argument.hasNext())  {	  if(opt!=    null    &&    argument.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
9	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(previous  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
10	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(commandLine  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
11	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.get(arg  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.get(arg  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
12	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousCommandLine();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.getAnonymousCommandLine();	  Argument    argument    =(Argument)opt.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
13	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.getAnonymousArgument();  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)option.getAnonymousArgument();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)option.getAnonymousArgument();	  Argument    argument    =(Argument)opt.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
14	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)optionMap.get(previous  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)optionMap.get(previous  +  1);	  Option    commandLine    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
15	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt  +  1);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)optionMap.get(opt  +  1);	  Option    commandLine    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
16	[BUG]  [BUGGY]  Option  commandLine  =(Option)opt.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)opt.get(arg  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)opt.get(arg  +  1);	  Option    commandLine    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
17	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getValue(previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.getValue(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.getValue(previous);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
18	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.get(arg);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)option.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)option.get(arg);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
19	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.getValue(arg);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)option.getValue(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)option.getValue(arg);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
20	[BUG]  [BUGGY]  if(option  ==  null  &&  argument.looksLikeOption(opt))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  &&  argument.looksLikeOption(opt))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  &&  argument.looksLikeOption(opt))  {	  if(option    ==    null    ||    argument.looksLikeOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
21	[BUG]  [BUGGY]  if(option!=  null  &&  argument.looksLikeOption(opt))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  argument.looksLikeOption(opt))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  argument.looksLikeOption(opt))  {	  if(option    ==    null    ||    argument.looksLikeOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
22	[BUG]  [BUGGY]  if(opt  ==  null  ||  argument.looksLikeOption(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  ||  argument.looksLikeOption(option))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  ||  argument.looksLikeOption(option))  {	  if(option    ==    null    ||    argument.looksLikeOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  if(opt!=  null  ||  argument.looksLikeOption(option))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  ||  argument.looksLikeOption(option))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  ||  argument.looksLikeOption(option))  {	  if(option    ==    null    ||    argument.looksLikeOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
24	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)optionMap.get(option);	  Option    commandLine    =(Option)optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
25	[BUG]  [BUGGY]  Argument  argument  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =  options.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =  options.get(option);	  Argument    argument    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  Argument  argument  =  options.get(previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =  options.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =  options.get(previous);	  Argument    argument    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)opt.getAnonymousCommandLine();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)opt.getAnonymousCommandLine();	  Argument    argument    =(Option)opt.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
28	[BUG]  [BUGGY]  if(option!=  null  &&  argument.previous)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  argument.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  argument.previous)  {	  if(opt!=    null    &&    argument.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
29	[BUG]  [BUGGY]  if(previous!=  null  &&  opt!=  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(previous!=  null  &&  opt!=  null)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(previous!=  null  &&  opt!=  null)  {	  if(opt!=    null    &&    argument.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
30	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(commandLine);	  Argument    argument    =(Argument)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
32	[BUG]  [BUGGY]  final  Option  option  =(Option)opt.clone();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  option  =(Option)opt.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  option  =(Option)opt.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
33	[BUG]  [BUGGY]  Option  previous  =  optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  previous  =  optionMap.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  previous  =  optionMap.get(previous);	  Option    commandLine    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
34	[BUG]  [BUGGY]  Option  commandLine  =  options.get(previous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =  options.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =  options.get(previous);	  Option    commandLine    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
35	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.get(previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.get(previous);	  Argument    argument    =(Argument)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  if(opt!=  null  &&  arguments.previous  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  arguments.previous  ==  null)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  arguments.previous  ==  null)  {	  if(opt!=    null    ||    arguments.previous    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
37	[BUG]  [BUGGY]  if(option!=  null  ||  arguments.previous  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  ||  arguments.previous  ==  null)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  ||  arguments.previous  ==  null)  {	  if(opt!=    null    ||    arguments.previous    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
38	[BUG]  [BUGGY]  if(option  ==  null  ||  arguments.previous  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  ||  arguments.previous  ==  null)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  ||  arguments.previous  ==  null)  {	  if(opt!=    null    ||    arguments.previous    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
39	[BUG]  [BUGGY]  if(option  ==  null  &&  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  &&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  &&  arguments.hasNext())  {	  if(option!=    null    &&    arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  if(option!=  null  ||  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  ||  arguments.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  ||  arguments.hasNext())  {	  if(option!=    null    &&    arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  if(option!=  null  &&  opt.previous)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  opt.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  opt.previous)  {	  if(opt!=    null    &&    opt.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
42	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.previous)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  ||  opt.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  ||  opt.previous)  {	  if(opt!=    null    &&    opt.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
43	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.getAnonymousArg();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)opt.getAnonymousArg();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)opt.getAnonymousArg();	  Argument    argument    =(Option)opt.getAnonymousValue();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
44	[BUG]  [BUGGY]  if(option!=  null  ||  options.previous)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  ||  options.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  ||  options.previous)  {	  if(option!=    null    &&    options.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  option  =(Option)option.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	option  =(Option)option.clone();	  option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
46	[BUG]  [BUGGY]  if(option!=  null  &&  option.previous)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  option.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  option.previous)  {	  if(opt!=    null    &&    option.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
47	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)optionMap.get(previous);	  final    Option    commandLine    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  Option  argument  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  argument  =(Option)option.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  argument  =(Option)option.clone();	  Option    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
49	[BUG]  [BUGGY]  final  Option  argument  =(Option)opt.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  argument  =(Option)opt.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  argument  =(Option)opt.clone();	  Option    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
50	[BUG]  [BUGGY]  if(option  ==  null  &&  opt.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  &&  opt.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  &&  opt.looksLikeOption(arg))  {	  if(opt    ==    null    &&    opt.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
51	[BUG]  [BUGGY]  final  Option  commandLine  =  options.get(opt);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =  options.get(opt);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =  options.get(opt);	  final    Option    commandLine    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
52	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)option.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)option.clone();	  final    Option    commandLine    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
53	[BUG]  [BUGGY]  if(option!=  null  &&  argument.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  argument.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  argument.looksLikeOption(arg))  {	  if(opt!=    null    &&    argument.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
54	[BUG]  [BUGGY]  if(opt!=  null  &&  arguments.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  arguments.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  arguments.looksLikeOption(arg))  {	  if(opt!=    null    &&    argument.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
55	[BUG]  [BUGGY]  Option  argument  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  argument  =  optionMap.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  argument  =  optionMap.get(option);	  Option    argument    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
56	[BUG]  [BUGGY]  Option  argument  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  argument  =  optionMap.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  argument  =  optionMap.get(arg);	  Option    argument    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
57	[BUG]  [BUGGY]  Option  argument  =  options.get(opt);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  argument  =  options.get(opt);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  argument  =  options.get(opt);	  Option    argument    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
58	[BUG]  [BUGGY]  final  Option  argument  =  optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  argument  =  optionMap.get(opt);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  argument  =  optionMap.get(opt);	  Option    argument    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
59	[BUG]  [BUGGY]  if(option!=  null  &&  option.looksLikeOption(opt))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  option.looksLikeOption(opt))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  option.looksLikeOption(opt))  {	  if(option!=    null    &&    option.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  if(option!=  null  &&  options.looksLikeOption(opt))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  options.looksLikeOption(opt))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  options.looksLikeOption(opt))  {	  if(option!=    null    &&    option.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  Argument  argument  =(Option)option.getArgument();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)option.getArgument();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)option.getArgument();	  Argument    argument    =(Option)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
62	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(command);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(command);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)optionMap.get(command);	  final    Option    commandLine    =(Option)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.get(arg);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)option.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)option.get(arg);	  Option    commandLine    =(Option)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
64	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)opt.get(arg);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)opt.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)opt.get(arg);	  Option    commandLine    =(Option)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
65	[BUG]  [BUGGY]  Option  commandLine  =(Option)opt.get(previous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)opt.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)opt.get(previous);	  Option    commandLine    =(Option)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
66	[BUG]  [BUGGY]  if(option  ==  null  ||  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  ||  arguments.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  ||  arguments.hasNext())  {	  if(opt    ==    null    ||    arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
67	[BUG]  [BUGGY]  Argument  argument  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)option.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)option.clone();	  Argument    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
68	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt).values();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt).values();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(opt).values();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
69	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(0).values();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(0).values();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(0).values();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
70	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous).values();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous).values();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(previous).values();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
71	[BUG]  [BUGGY]  if(option!=  null  &&  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  options.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  options.hasNext())  {	  if(opt!=    null    &&    options.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
72	[BUG]  [BUGGY]  if(option  ==  null  &&  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  &&  options.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  &&  options.hasNext())  {	  if(opt!=    null    &&    options.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
73	[BUG]  [BUGGY]  if(option!=  null  ||  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  ||  options.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  ||  options.hasNext())  {	  if(opt!=    null    &&    options.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
74	[BUG]  [BUGGY]  if(opt!=  null  &&  option.looksLikeOption(option))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  option.looksLikeOption(option))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  option.looksLikeOption(option))  {	  if(opt!=    null    &&    option.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  Option  commandLine  =(Option)opt.getCommandLine();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)opt.getCommandLine();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)opt.getCommandLine();	  Option    commandLine    =(Option)opt.getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
76	[BUG]  [BUGGY]  Option  commandLine  =(Option)opt.getArgument();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)opt.getArgument();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)opt.getArgument();	  Option    commandLine    =(Option)opt.getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  if(option!=  null  &&  opt.looksCommandLineOption(arg))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  opt.looksCommandLineOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  opt.looksCommandLineOption(arg))  {	  if(opt!=    null    &&    opt.looksCommandLineOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
78	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.looksCommandLineOption(commandLine))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  opt.looksCommandLineOption(commandLine))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  opt.looksCommandLineOption(commandLine))  {	  if(opt!=    null    &&    opt.looksCommandLineOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
79	[BUG]  [BUGGY]  if(opt!=  null  &&  option.looksCommandLineOption(arg))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  option.looksCommandLineOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  option.looksCommandLineOption(arg))  {	  if(opt!=    null    &&    opt.looksCommandLineOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
80	[BUG]  [BUGGY]  if(option!=  null  &&  opt.hasArg())  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  opt.hasArg())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  opt.hasArg())  {	  if(opt!=    null    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
81	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.hasArg())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  ||  opt.hasArg())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  ||  opt.hasArg())  {	  if(opt!=    null    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
82	[BUG]  [BUGGY]  if(opt!=  null  &&  option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  option.hasArg())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  option.hasArg())  {	  if(opt!=    null    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
83	[BUG]  [BUGGY]  if(opt  ==  null  &&  opt.previous)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  opt.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  opt.previous)  {	  if(opt!=    null    &&    opt.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
84	[BUG]  [BUGGY]  Option  commandLine  =(Option)opt.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)opt.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)opt.get(option);	  Option    commandLine    =(Option)optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
85	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(option);	  Argument    argument    =(Argument)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
86	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.values();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.values();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.values();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
87	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getArgument();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.getArgument();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.getArgument();	  Argument    argument    =(Argument)opt.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousArgument(0);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousArgument(0);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.getAnonymousArgument(0);	  Argument    argument    =(Argument)opt.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  ||  opt.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  ||  opt.looksLikeOption(arg))  {	  if(opt    ==    null    &&    opt.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
90	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(option.getValue());  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(option.getValue());  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(option.getValue());	  Argument    argument    =(Argument)option.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  if(opt  ==  null  &&  opt.hasArg())  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  opt.hasArg())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  opt.hasArg())  {	  if(opt!=    null    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
92	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  option  =(Option)optionMap.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  option  =(Option)optionMap.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
93	[BUG]  [BUGGY]  Argument  argument  =  opt.get(previous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =  opt.get(previous);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =  opt.get(previous);	  Argument    argument    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  if(opt  ==  null  &&  option.previous)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  option.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  option.previous)  {	  if(opt!=    null    &&    option.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
95	[BUG]  [BUGGY]  Option  previous  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  previous  =(Option)optionMap.get(opt);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  previous  =(Option)optionMap.get(opt);	  Option    commandLine    =(Option)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
96	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)optionMap.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)optionMap.clone();	  Argument    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
97	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)optionMap.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)optionMap.clone();	  final    Option    commandLine    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
98	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt  +  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(opt  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
99	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.values()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.values()  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(opt.values()  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
100	[BUG]  [BUGGY]  if(opt  ==  null  &&  option.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  option.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  option.looksLikeOption(arg))  {	  if(opt!=    null    &&    option.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
101	[BUG]  [BUGGY]  if(opt!=  null  &&  options.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  options.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  options.looksLikeOption(arg))  {	  if(opt!=    null    &&    option.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
102	[BUG]  [BUGGY]  final  Option  commandLine  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =  options.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =  options.get(arg);	  Option    commandLine    =    options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
103	[BUG]  [BUGGY]  if(opt!=  null  &&  option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  option.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  option.hasNext())  {	  if(opt!=    null    &&    argument.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
104	[BUG]  [BUGGY]  Option  option  =(Option)opt.get(arg);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  option  =(Option)opt.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  option  =(Option)opt.get(arg);	  Option    option    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
105	[BUG]  [BUGGY]  final  Option  option  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  option  =(Option)optionMap.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  option  =(Option)optionMap.get(arg);	  Option    option    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
106	[BUG]  [BUGGY]  option  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  option  =(Option)optionMap.get(opt);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	option  =(Option)optionMap.get(opt);	  Option    option    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
107	[BUG]  [BUGGY]  if(opt  ==  null  &&  options.previous)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  options.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  options.previous)  {	  if(opt!=    null    &&    options.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
108	[BUG]  [BUGGY]  if(option  ==  null  &&  options.previous)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  &&  options.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  &&  options.previous)  {	  if(opt!=    null    &&    options.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
109	[BUG]  [BUGGY]  Option  argument  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  argument  =(Option)optionMap.clone();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  argument  =(Option)optionMap.clone();	  Option    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
110	[BUG]  [BUGGY]  if(opt  ==  null  ||  arguments.previous  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  ||  arguments.previous  ==  null)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  ||  arguments.previous  ==  null)  {	  if(opt!=    null    ||    arguments.previous    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
111	[BUG]  [BUGGY]  if(opt  ==  null  &&  opt.looksCommandLineOption(arg))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  opt.looksCommandLineOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  opt.looksCommandLineOption(arg))  {	  if(opt!=    null    &&    opt.looksCommandLineOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
112	[BUG]  [BUGGY]  if(option  ==  null  &&  option.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  &&  option.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  &&  option.looksLikeOption(arg))  {	  if(option!=    null    &&    option.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  if(opt  ==  null  &&  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  options.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  options.hasNext())  {	  if(opt!=    null    &&    options.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
114	[BUG]  [BUGGY]  Argument  argument  =  opt.options.get(arg);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =  opt.options.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =  opt.options.get(arg);	  Argument    argument    =    options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
115	[BUG]  [BUGGY]  if(option  ==  null  ||  option.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  ||  option.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  ||  option.looksLikeOption(arg))  {	  if(option    ==    null    ||    argument.looksLikeOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
116	[BUG]  [BUGGY]  if(opt  ==  null  &&  argument.previous)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  &&  argument.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  &&  argument.previous)  {	  if(opt!=    null    &&    argument.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
117	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.getArg();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)opt.getArg();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)opt.getArg();	  Argument    argument    =(Option)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
118	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.getArg1();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)opt.getArg1();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)opt.getArg1();	  Argument    argument    =(Option)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
119	[BUG]  [BUGGY]  if(opt!=  null  ||  options.previous)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  ||  options.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  ||  options.previous)  {	  if(option    ==    null    ||    arguments.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
120	[BUG]  [BUGGY]  if(opt  ==  null  ||  options.previous)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt  ==  null  ||  options.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt  ==  null  ||  options.previous)  {	  if(option    ==    null    ||    arguments.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
121	[BUG]  [BUGGY]  Option  previous  =  optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  previous  =  optionMap.get(opt);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  previous  =  optionMap.get(opt);	  Option    commandLine    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
122	[BUG]  [BUGGY]  Option  previous  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  previous  =  optionMap.get(option);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  previous  =  optionMap.get(option);	  Option    commandLine    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
123	[BUG]  [BUGGY]  if(option!=  null  &&  arguments.previous  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  arguments.previous  ==  null)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  arguments.previous  ==  null)  {	  if(opt!=    null    ||    arguments.previous    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
124	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(arg  +  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)optionMap.get(arg  +  1);	  final    Option    commandLine    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
125	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(arg  -  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  commandLine  =(Option)optionMap.get(arg  -  1);	  final    Option    commandLine    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
126	[BUG]  [BUGGY]  if(option  ==  null  ||  opt.looksLikeOption(arg))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option  ==  null  ||  opt.looksLikeOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option  ==  null  ||  opt.looksLikeOption(arg))  {	  if(option    ==    null    ||    argument.looksLikeOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
127	[BUG]  [BUGGY]  if(option!=  null  ||  arguments.previous)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  ||  arguments.previous)  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  ||  arguments.previous)  {	  if(option    ==    null    ||    arguments.previous)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
128	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  option  =(Option)optionMap.get(0);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  option  =(Option)optionMap.get(0);	  Option    option    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
129	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  final  Option  option  =  optionMap.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	final  Option  option  =  optionMap.get(arg);	  final    Option    commandLine    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
130	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)opt.next();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)opt.next();	  Argument    argument    =(Option)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
131	[BUG]  [BUGGY]  if(option!=  null  &&  option.looksCommandLineOption(arg))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  option.looksCommandLineOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  option.looksCommandLineOption(arg))  {	  if(opt!=    null    &&    opt.looksCommandLineOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
132	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getValue(arg);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)opt.getValue(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)opt.getValue(arg);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
133	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(arg  -  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  /  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  /  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(arg  /  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
135	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)optionMap.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)optionMap.get(arg);	  Argument    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
136	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.looksMemberOption(arg))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  opt.looksMemberOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  opt.looksMemberOption(arg))  {	  if(opt    ==    null    &&    opt.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
137	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.looksUpperBoundOption(arg))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  opt.looksUpperBoundOption(arg))  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  opt.looksUpperBoundOption(arg))  {	  if(opt    ==    null    &&    opt.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
138	[BUG]  [BUGGY]  if(opt!=  null  &&  argument.hasArg())  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(opt!=  null  &&  argument.hasArg())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(opt!=  null  &&  argument.hasArg())  {	  if(opt!=    null    &&    opt.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
139	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(0);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(0);	  Argument    argument    =(Argument)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
140	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(argument);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(argument);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(argument);	  Argument    argument    =(Argument)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  Option  previous  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  previous  =  optionMap.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  previous  =  optionMap.get(arg);	  Option    commandLine    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
142	[BUG]  [BUGGY]  Option  previous  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  previous  =(Option)optionMap.get(arg);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  previous  =(Option)optionMap.get(arg);	  Option    commandLine    =(Option)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
143	[BUG]  [BUGGY]  if(option!=  null  &&  option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  option.hasArg())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  option.hasArg())  {	  if(option!=    null    &&    opt.looksLikeOption(arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
144	[BUG]  [BUGGY]  Option  commandLine  =(Option)opt.getcommandLine();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)opt.getcommandLine();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)opt.getcommandLine();	  Option    commandLine    =(Option)opt.getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
145	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg).arguments();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg).arguments();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Argument)optionMap.get(arg).arguments();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
146	[BUG]  [BUGGY]  Argument  argument  =  options.get(0);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =  options.get(0);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =  options.get(0);	  Argument    argument    =    options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
147	[BUG]  [BUGGY]  if(option!=  null  &&  option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  if(option!=  null  &&  option.hasNext())  {  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	if(option!=  null  &&  option.hasNext())  {	  if(option!=    null    &&    arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
148	[BUG]  [BUGGY]  Argument  argument  =(Option)option.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Argument  argument  =(Option)option.getAnonymousValue();  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Argument  argument  =(Option)option.getAnonymousValue();	  Argument    argument    =(Option)opt.getAnonymousValue();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
149	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);        [BUGGY]  Option  commandLine  =(Option)optionMap.get(arg  -  1);  [BUGGY]      if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	Option  commandLine  =(Option)optionMap.get(arg  -  1);	  Option    commandLine    =(Option)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
