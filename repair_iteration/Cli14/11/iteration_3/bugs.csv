bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  i.set(name,  newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newAnonymous,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newAnonymous,  prefixes);	  i.set(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
2	[BUG]  [BUGGY]  i.set(name,  newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newAnonymous,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newAnonymous,  description);	  i.set(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
3	[BUG]  [BUGGY]  i.set(name,  newAnonymous,  minimum);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newAnonymous,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newAnonymous,  minimum);	  i.set(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
4	[BUG]  [BUGGY]  i.set(name,  newAnonymous,  maximum);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newAnonymous,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newAnonymous,  maximum);	  i.set(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
5	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  j.next());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  j.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  j.next());	  final    Option    option    =    options.getOption(i.next(),    i.next());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.previous());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.previous());  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  i.previous());	  final    Option    option    =    options.getOption(i.next(),    i.next());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.prefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  i.prefixes);	  final    Option    option    =    options.getOption(i.next(),    i.next());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  i.prepend(newAnonymous,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(newAnonymous,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(newAnonymous,  newPrefixes);	  i.prepend(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  i.prepend(newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(newAnonymous,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(newAnonymous,  prefixes);	  i.prepend(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newAnonymous);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  newAnonymous);	  final    Option    option    =    options.getOption(i.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  option  =(Option)i.next(),  newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  newAnonymous,  options);  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next(),  newAnonymous,  options);	  option    =(Option)i.next(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  option  =(Option)i.next(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  newPrefixes);  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next(),  newPrefixes);	  option    =(Option)i.next(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
13	[BUG]  [BUGGY]  option  =(Option)i.next(),  newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  newAnonymous,  prefixes);  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next(),  newAnonymous,  prefixes);	  option    =(Option)i.next(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
14	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  i.next(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  i.next(),  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  i.next(),  newPrefixes);	  final    Option    option    =    options.getOption(i,    i.next());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
15	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  i.next());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name,  i.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name,  i.next());	  final    Option    option    =    options.getOption(i,    i.next());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  j.next());  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  j.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  j.next());	  final    Option    option    =    options.getOption(i,    i.next());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  newAnonymous.add(i.next(),  name);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  newAnonymous.add(i.next(),  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	newAnonymous.add(i.next(),  name);	  newAnonymous.add(i.next());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  newAnonymous.add(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  newAnonymous.add(i.next(),  options);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	newAnonymous.add(i.next(),  options);	  newAnonymous.add(i.next());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  newAnonymous.add(i.next(),  option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  newAnonymous.add(i.next(),  option);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	newAnonymous.add(i.next(),  option);	  newAnonymous.add(i.next());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  final  Iterator  i  =  prefixes.iterator();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Iterator  i  =  prefixes.iterator();  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Iterator  i  =  prefixes.iterator();	  final    Iterator    i    =    newPrefixes.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  final  Iterator  i  =  this.prefixes.iterator();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Iterator  i  =  this.prefixes.iterator();  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Iterator  i  =  this.prefixes.iterator();	  final    Iterator    i    =    newPrefixes.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  newAnonymous.add(option,  name);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next();  newAnonymous.add(option,  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	Option  option  =(Option)i.next();  newAnonymous.add(option,  name);	  Option    option    =(Option)i.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  prefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  prefixes);	  final    Option    option    =    options.getOption(i.next(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  newPrefixes,  minimum);	  final    Option    option    =    options.getOption(i.next(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  name);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  newPrefixes,  name);	  final    Option    option    =    options.getOption(i.next(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  newPrefixes,  description);	  final    Option    option    =    options.getOption(i.next(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  newOptionMap.put(i.next(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  newOptionMap.put(i.next(),  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	newOptionMap.put(i.next(),  newPrefixes);	  i.next();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  minimum,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(newPrefixes,  minimum,  maximum);	  ((    Argument)i.next()).addValue(newPrefixes,    maximum);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(name,  maximum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(name,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(name,  maximum);	  ((    Argument)i.next()).addValue(newPrefixes,    maximum);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(prefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(prefixes,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(prefixes,  maximum);	  ((    Argument)i.next()).addValue(newPrefixes,    maximum);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(description,  newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(description,  newPrefixes,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(description,  newPrefixes,  maximum);	  ((    Argument)i.next()).addValue(newPrefixes,    maximum);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name,  description);	  final    Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
33	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  name);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  name);	  final    Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
34	[BUG]  [BUGGY]  final  Option  option  =  i.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  i.next();	  final    Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
35	[BUG]  [BUGGY]  final  Option  option  =  i.getOption(description);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  i.getOption(description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  i.getOption(description);	  final    Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
36	[BUG]  [BUGGY]  option  =(Option)i.next();  newPrefixes.add(option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next();  newPrefixes.add(option);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next();  newPrefixes.add(option);	  Option    option    =(Option)i.next();    newPrefixes.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  final  Iterator  <  Option>  i  =  newAnonymous.iterator();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Iterator  <  Option>  i  =  newAnonymous.iterator();  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Iterator  <  Option>  i  =  newAnonymous.iterator();	  final    Iterator    i    =    newAnonymous.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  Options  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Options  option  =(Option)i.next();  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	Options  option  =(Option)i.next();	  options    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
39	[BUG]  [BUGGY]  i.prepend(description,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(description,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(description,  newPrefixes);	  i.prepend(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
40	[BUG]  [BUGGY]  i.prepend(name,  newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(name,  newPrefixes,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(name,  newPrefixes,  minimum);	  i.prepend(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
41	[BUG]  [BUGGY]  i.prepend(newPrefixes,  name);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(newPrefixes,  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(newPrefixes,  name);	  i.prepend(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  i.prepend(newAnonymous,  name,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(newAnonymous,  name,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(newAnonymous,  name,  newPrefixes);	  i.prepend(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
43	[BUG]  [BUGGY]  option  =(Option)i.next(),  newPrefixes;  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  newPrefixes;  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next(),  newPrefixes;	  option    =(Option)i.next(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  option  =(Option)i.next(),  newAnonymous,  options;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  newAnonymous,  options;  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next(),  newAnonymous,  options;	  option    =(Option)i.next(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  i.set(name,  newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newPrefixes,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newPrefixes,  minimum);	  i.set(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
46	[BUG]  [BUGGY]  i.set(name,  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newPrefixes,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newPrefixes,  description);	  i.set(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
47	[BUG]  [BUGGY]  i.set(name,  newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newPrefixes,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newPrefixes,  maximum);	  i.set(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
48	[BUG]  [BUGGY]  i.set(name,  newPrefixes,  minimal);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newPrefixes,  minimal);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newPrefixes,  minimal);	  i.set(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name.next(),  i);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name.next(),  i);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name.next(),  i);	  final    Option    option    =    options.getOption(i.next(),    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name.next(),  name);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name.next(),  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name.next(),  name);	  final    Option    option    =    options.getOption(i.next(),    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name.next(),  description);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name.next(),  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name.next(),  description);	  final    Option    option    =    options.getOption(i.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
52	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  i.next(),  description);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name,  i.next(),  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name,  i.next(),  description);	  final    Option    option    =    options.getOption(i.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
53	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  description,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  description,  minimum);	  final    Option    option    =    options.getOption(i.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  prefixes);	  final    Option    option    =    options.getOption(i,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  name);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  newPrefixes,  name);	  final    Option    option    =    options.getOption(i,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  newPrefixes,  minimum);	  final    Option    option    =    options.getOption(i,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  newPrefixes,  description);	  final    Option    option    =    options.getOption(i,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name,  minimum);	  final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(description);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(description);	  final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  i);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name,  i);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name,  i);	  final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(newPrefixes,  minimum);	  ((    Argument)i.next()).addValue(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  name);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  name);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(newPrefixes,  name);	  ((    Argument)i.next()).addValue(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(newPrefixes,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(newPrefixes,  description);	  ((    Argument)i.next()).addValue(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  final  Iterator  <  Option>  i  =  newOptionMap.iterator();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Iterator  <  Option>  i  =  newOptionMap.iterator();  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Iterator  <  Option>  i  =  newOptionMap.iterator();	  final    Iterator    i    =    newOptionMap.iterator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  i.set(name,  newAnonymous,  prefix);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newAnonymous,  prefix);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newAnonymous,  prefix);	  i.set(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
66	[BUG]  [BUGGY]  final  Iterator  i  =  this.newAnonymous.iterator();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Iterator  i  =  this.newAnonymous.iterator();  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Iterator  i  =  this.newAnonymous.iterator();	  final    Iterator    i    =    newAnonymous.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  newPrefixes,  maximum);	  final    Option    option    =    options.getOption(i.next(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  newPrefixes,  prefixes);	  final    Option    option    =    options.getOption(i.next(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  newPrefixes,  prefixes);	  final    Option    option    =    options.getOption(i,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
70	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  i);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  i);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  i);	  final    Option    option    =    options.getOption(i,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
71	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  newPrefixes,  maximum);	  final    Option    option    =    options.getOption(i,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
72	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(name,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(name,  maximum);	  final    Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
73	[BUG]  [BUGGY]  option  =(Option)i.next(),  options);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  options);  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next(),  options);	  option    =(Option)i.next(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
74	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next(),  newAnonymous);  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	Option  option  =(Option)i.next(),  newAnonymous);	  option    =(Option)i.next(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
75	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  if(option!=  null)  {  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next();  if(option!=  null)  {  newAnonymous.add(option);  }  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	Option  option  =(Option)i.next();  if(option!=  null)  {  newAnonymous.add(option);  }	  Option    option    =(Option)i.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  description,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  description,  maximum);	  final    Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i,  description,  minimum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i,  description,  minimum);	  final    Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
78	[BUG]  [BUGGY]  option  =(Option)i.next(),  options;  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  options;  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	option  =(Option)i.next(),  options;	  option    =(Option)i.next(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  newAnonymous;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next(),  newAnonymous;  [BUGGY]        if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	Option  option  =(Option)i.next(),  newAnonymous;	  option    =(Option)i.next(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(prefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(prefixes);	  ((    Argument)i.next()).addValue(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(name,  newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(name,  newPrefixes,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(name,  newPrefixes,  maximum);	  ((    Argument)i.next()).addValue(newPrefixes,    maximum);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  i.prepend(name,  newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(name,  newPrefixes,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(name,  newPrefixes,  maximum);	  i.prepend(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
83	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.remove());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.remove());  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  i.remove());	  final    Option    option    =    options.getOption(i.next(),    i.next());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  i.set(description,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(description,  newAnonymous);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(description,  newAnonymous);	  i.set(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
85	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  name,  description);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  name,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  name,  description);	  final    Option    option    =    options.getOption(i.next(),    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  if(option  instanceof  Argument)  {  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next();  if(option  instanceof  Argument)  {  newAnonymous.add(option);  }  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	Option  option  =(Option)i.next();  if(option  instanceof  Argument)  {  newAnonymous.add(option);  }	  Option    option    =(Option)i.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  description,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  description,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  description,  newPrefixes);	  final    Option    option    =    options.getOption(i.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
88	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(description);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(description);	  ((    Argument)i.next()).addValue(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  ((  Argument)i.next()).addValue(description,  maximum);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  Argument)i.next()).addValue(description,  maximum);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	((  Argument)i.next()).addValue(description,  maximum);	  ((    Argument)i.next()).addValue(newPrefixes,    maximum);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  newAnonymous.add(i.next(),  description);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  newAnonymous.add(i.next(),  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	newAnonymous.add(i.next(),  description);	  newAnonymous.add(i.next());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
91	[BUG]  [BUGGY]  i.prepend(name,  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(name,  newPrefixes,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(name,  newPrefixes,  description);	  i.prepend(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
92	[BUG]  [BUGGY]  i.set(name,  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(name,  newPrefixes,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(name,  newPrefixes,  prefixes);	  i.set(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
93	[BUG]  [BUGGY]  i.set(description,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.set(description,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.set(description,  newPrefixes);	  i.set(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
94	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.prefix);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.prefix);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	final  Option  option  =  options.getOption(i.next(),  i.prefix);	  final    Option    option    =    options.getOption(i.next(),    i.next());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
95	[BUG]  [BUGGY]  i.prepend(newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  i.prepend(newAnonymous,  description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	91	91	1	replace	i.prepend(newAnonymous,  description);	  i.prepend(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
