projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next().equals("")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next().startsWith("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&previous!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||arguments.next()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(arg);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>0&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkNotNull(arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()==null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()==previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&previous==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||previous!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>0&&previous!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(i);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(i+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(i-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(prefix);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(0);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(0);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefixe);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||arguments.next().startsWith("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next().equals("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||arguments.next().equals("")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(arg);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(arg);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()||arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()||previous==null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(partial);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162whilst(arguments.hasNext()&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(i++);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext(){null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()||arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toString()&&arguments.next().startsWith("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toLowerCase()&&arguments.next().startsWith("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.peek();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next().equals("*")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>0||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext();previous=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(0);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.peek();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.peek()-1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefixe+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(previous+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(0).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix).toLowerCase(Locale.ENGLISH);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix).toUpperCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext());previous=null;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext();previous!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext();previous==null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(previous+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||arguments.next().equals("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix-1+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(0).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous).toUpperCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(previous).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(partial);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()>=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()==null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()!=0||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()==0||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>=0||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>>0||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toString()||arguments.next().startsWith("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toString()&&argument.next().startsWith("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext(),previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()?previous:null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix).toUpperCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix).toLowerCase(Locale.ENGLISH);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix+2);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix+2);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()&&arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()||arguments.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()&&previous==null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()||previous!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()&&previous!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||previous==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toLowerCase()||arguments.next().startsWith("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toLowerCase()&&arguments.next().startsWith("--")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()==0&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()!=0&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>=0&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>>0&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(i+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162whilst(arguments.hasNext()||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(i-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()||arguments.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()>|arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()>||arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()==previous,arguments.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()!=previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()||arguments.next().equals("*")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next().startsWith("*")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()&&arguments.next().equals("/")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(partial);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)parameters.get(partial);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous++);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(prefix+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(prefixe);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkNotNull(arguments.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()==0&&previous!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()!=0&&previous!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>=0&&previous!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toString()&&arguments.next().startsWith(".")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous).valueToLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()||arguments.previous());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(prefix-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(prefix).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()||previous>=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.peek()+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix+0);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)parameters.get(previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162whilst(arguments.hasNext()&&arguments.next()==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix).valueToLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().toLowerCase()&&arguments.next().startsWith(".")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix*1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.next());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.getNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(arguments.size()-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefixe-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)optionMap.get(previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(i-1+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()>0&&previous==null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(arguments.size()-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(arguments.size());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix+1).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkNotNull(arguments.get(0));
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext()||arguments.previous());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkState(arguments.hasNext()==null||arguments.hasNext());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.peek();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(i*1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(prefix+3);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(i++);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(i+1,previous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()!=null&&arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().equals("*")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous+1).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)arguments.get(previous+2);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext()!=null||arguments.next()!=null){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(argument);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefixes-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix+1).toLowerCase();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix+3);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(argument);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.optionMap.get(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162while(arguments.hasNext().equals("-")){
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Argumentargument=(Argument)this.values.get(prefix;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java162Preconditions.checkArgument(arguments.hasNext());previous=null;
