projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121returntrue;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121returnfalse;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121if(commandLine==null||commandLine.equals("")){returnfalse;}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121if(commandLine==null||commandLine.equals(arg)){returnfalse;}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121thrownewIllegalArgumentException("");
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121Optionoption=optionMap.get(arg);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121Optionoption=optionMap.getOption(commandLine);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121if(optionMap.containsKey(arg)){returnfalse;}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121OptioncommandLine=optionMap.get(arg);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121if(optionMap.containsKey(arg)){returntrue;}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121Optionoption=optionMap.getOption(arg);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121Optionoption=optionMap.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121if(!optionMap.containsKey(arg)){returnfalse;}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121Optionoption=optionMap.get(arg);if(option!=null){returnfalse;}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121thrownewIllegalArgumentException("".equals(arg));
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java121thrownewIllegalArgumentException("")+"isnotavalidcommandline.");
