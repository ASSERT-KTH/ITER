bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  false;  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]  return  false;  [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	return  false;	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2	[BUG]  [BUGGY]  if(commandLine  ==  null  ||  commandLine.equals( " "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]  if(commandLine  ==  null  ||  commandLine.equals( " "))  {  return  false;  }  [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	if(commandLine  ==  null  ||  commandLine.equals( " "))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
3	[BUG]  [BUGGY]  if(commandLine  ==  null  ||  commandLine.equals(arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]  if(commandLine  ==  null  ||  commandLine.equals(arg))  {  return  false;  }  [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	if(commandLine  ==  null  ||  commandLine.equals(arg))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	throw  new  IllegalArgumentException( " ");	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	  	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
6	[BUG]  [BUGGY]    Option  option  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    Option  option  =  optionMap.get(arg);  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    Option  option  =  optionMap.get(arg);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
7	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    Option  option  =  optionMap.getOption(commandLine);  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    Option  option  =  optionMap.getOption(commandLine);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
8	[BUG]  [BUGGY]    if(optionMap.containsKey(arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    if(optionMap.containsKey(arg))  {  return  false;  }  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    if(optionMap.containsKey(arg))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
9	[BUG]  [BUGGY]    Option  commandLine  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    Option  commandLine  =  optionMap.get(arg);  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    Option  commandLine  =  optionMap.get(arg);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
10	[BUG]  [BUGGY]    if(optionMap.containsKey(arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    if(optionMap.containsKey(arg))  {  return  true;  }  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    if(optionMap.containsKey(arg))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
11	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    Option  option  =  optionMap.getOption(arg);  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    Option  option  =  optionMap.getOption(arg);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
12	[BUG]  [BUGGY]    Option  option  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    Option  option  =  optionMap.values().iterator();  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    Option  option  =  optionMap.values().iterator();		non-compiled	[CE]  illegal  start  of  expression	48	None	add
13	[BUG]  [BUGGY]  if(!optionMap.containsKey(arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]  if(!optionMap.containsKey(arg))  {  return  false;  }  [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	if(!optionMap.containsKey(arg))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
14	[BUG]  [BUGGY]    Option  option  =  optionMap.get(arg);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]    Option  option  =  optionMap.get(arg);  if(option!=  null)  {  return  false;  }  [BUGGY]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	    Option  option  =  optionMap.get(arg);  if(option!=  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
15	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(arg));  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(arg));  [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	throw  new  IllegalArgumentException( " ".equals(arg));	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")  + "  is  not  a  valid  command  line. ");  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  final  String  arg)  {  if  (arg  ==  null)  {  return  false;  }  if  (optionMap.containsKey(arg))  {  [BUGGY]  throw  new  IllegalArgumentException( " ")  + "  is  not  a  valid  command  line. ");  [BUGGY]  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	121	121	1	replace	throw  new  IllegalArgumentException( " ")  + "  is  not  a  valid  command  line. ");	return  true;  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
