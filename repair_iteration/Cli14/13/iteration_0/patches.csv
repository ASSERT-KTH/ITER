bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Set  triggers  =  option.getAnonymousTriggers();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]  final  Set  triggers  =  option.getAnonymousTriggers();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	final  Set  triggers  =  option.getAnonymousTriggers();	final  Set  triggers  =  option.getTriggers();  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  final  Set  triggers  =  options.getTriggers();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]  final  Set  triggers  =  options.getTriggers();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	final  Set  triggers  =  options.getTriggers();	final  Set  triggers  =  option.getTriggers();  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  final  List  triggers  =  option.getTriggers();  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]  final  List  triggers  =  option.getTriggers();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	final  List  triggers  =  option.getTriggers();	final  Set  triggers  =  option.getTriggers();  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	  	final  Set  triggers  =  option.getTriggers();  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]    Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =  options.getOption(name);  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =  options.getOption(name);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
6	[BUG]  [BUGGY]    Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =(Option)i.next();  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =(Option)i.next();		non-compiled	[CE]  illegal  start  of  expression	26	None	add
7	[BUG]  [BUGGY]    Option  option  =(Option)optionMap.get(i);  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =(Option)optionMap.get(i);  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =(Option)optionMap.get(i);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
8	[BUG]  [BUGGY]    Option  option  =  options.getOption(i);  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =  options.getOption(i);  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =  options.getOption(i);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
9	[BUG]  [BUGGY]    Option  option  =(Option)optionMap.get(name);  [CE]  illegal  start  of  expression  [FE]            ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =(Option)optionMap.get(name);  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =(Option)optionMap.get(name);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
10	[BUG]  [BUGGY]    Option  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =  option.getOption();  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =  option.getOption();		non-compiled	[CE]  illegal  start  of  expression	26	None	add
11	[BUG]  [BUGGY]    Option  option  =  option.getOption(i);  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =  option.getOption(i);  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =  option.getOption(i);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
12	[BUG]  [BUGGY]    Option  option  =(Option)optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =(Option)optionMap.get(i.next());  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =(Option)optionMap.get(i.next());		non-compiled	[CE]  illegal  start  of  expression	26	None	add
13	[BUG]  [BUGGY]    Option  option  =  option.getOptionMap();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  [BUGGY]    Option  option  =  option.getOptionMap();  [BUGGY]  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	97	97	1	replace	    Option  option  =  option.getOptionMap();		non-compiled	[CE]  illegal  start  of  expression	26	None	add
