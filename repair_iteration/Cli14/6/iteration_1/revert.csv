projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.options=Collections.unmodifiableList(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78if(options!=null){this.options=Collections.unmodifiableList(options);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.options=Collections.unmodifiableList(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78if(optionMap!=null){this.options=Collections.unmodifiableList(options);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkNotNull(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkNotNull(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i=j.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption("option");
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratori=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iterator<Option>i=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratorj=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78if(optionMap==null){this.options=Collections.unmodifiableList(options);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i.remove();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newHashMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newInstance();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78This.options=Collections.unmodifiableList(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78j.remove();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i.removeChild(j);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i.remove(j);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkNotNull(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkState(prefixes!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkState(!prefixes.isEmpty());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newInstanceMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newEmptyMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newHashMap(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i=j.getIterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i=j.nextToken();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i=j.nextIterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78if(optionMap!=null){this.optionMap=OptionMap.newInstance();}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78optionMap=OptionMap.newInstance();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newInstance(defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.options=Collections.unmodifiableList(optionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.options=Collections.unmodifiableList(optionMap,triggers);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iterator<Option>i=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iterator<Option>i=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iterator<Option>i=optionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=options.getOption("option");
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption("option",null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption("option",true);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78finalOptionoption=optionMap.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratori=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratori=selections.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkState(description!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkNotNull(prefix);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratorj=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iterator<Option>j=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=options.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(this.defaultName);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.options=Collections.unmodifiableList(optionMap,newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iterator<Option>i=options.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newOptionMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratori=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionsMap.getOption("option");
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratorj=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Iteratorj=optionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78if(optionMap!=null){this.options=Lists.unmodifiableList(options);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkNotNull(prefixes,triggers);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(this.description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newInstance(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newInstance(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i.remove(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i.remove(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i=j!=null?null:j.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78j=j.next();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkArgument(description!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkState(this.description!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption("option",false);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newInstance(OptionMap.DEFAULT);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}else{finalSortedMapoptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(optionMap);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78this.optionMap=OptionMap.newTreeMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Preconditions.checkState(prefixes==null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(name,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78Optionoption=optionMap.getOption(defaultName);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78ij.remove();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i.set(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java78i=this.j.next();
