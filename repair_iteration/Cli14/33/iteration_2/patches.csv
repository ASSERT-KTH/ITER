bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(0);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(0);	  Argument    argument    =(Argument)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getValue(arg);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.getValue(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.getValue(arg);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.get(arg);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)option.get(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)option.get(arg);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.getValue(arg);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)option.getValue(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)option.getValue(arg);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
5	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(arg);	  Option    commandLine    =(Option)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  Option  commandLine  =(Option)arguments.get(opt);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)arguments.get(opt);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)arguments.get(opt);	  Option    commandLine    =(Option)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
7	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(opt);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	final  Option  commandLine  =(Option)optionMap.get(opt);	  Option    commandLine    =(Option)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
8	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.get(previous);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.get(previous);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.get(previous);	  Argument    argument    =(Argument)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(option);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(option);	  Argument    argument    =(Argument)optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Argument  argument  =(Option)option.cloneTree();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)option.cloneTree();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)option.cloneTree();	  Argument    argument    =(Option)opt.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
11	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.clonePath();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)opt.clonePath();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)opt.clonePath();	  Argument    argument    =(Option)opt.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
12	[BUG]  [BUGGY]  Argument  argument  =  options.values();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  options.values();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  options.values();	  Argument    argument    =    opt.values();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  Argument  argument  =  option.values();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  option.values();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  option.values();	  Argument    argument    =    opt.values();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  Argument  argument  =  opt.getArgumentValues();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  opt.getArgumentValues();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  opt.getArgumentValues();	  Argument    argument    =    opt.values();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousArg(1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousArg(1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.getAnonymousArg(1);	  Argument    argument    =(Argument)opt.getAnonymousArg(0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousArg(2);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousArg(2);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.getAnonymousArg(2);	  Argument    argument    =(Argument)opt.getAnonymousArg(0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
17	[BUG]  [BUGGY]  Argument  previous  =  opt.get(previous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  opt.get(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  opt.get(previous);	  Argument    previous    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  Argument  previous  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  options.get(option);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  options.get(option);	  Argument    previous    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  Argument  previous  =  opt.get(option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  opt.get(option);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  opt.get(option);	  Argument    previous    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
20	[BUG]  [BUGGY]  Argument  previous  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  options.get(arg);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  options.get(arg);	  Argument    previous    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
21	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(command);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(command);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(command);	  Argument    argument    =(Argument)optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandline);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandline);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(commandline);	  Argument    argument    =(Argument)optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.getArgument();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)option.getArgument();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)option.getArgument();	  Argument    argument    =(Argument)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
24	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt).values();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt).values();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt).values();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
25	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(0).values();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(0).values();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(0).values();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
26	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.values();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.values();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.values();	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
27	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
28	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  option  =(Option)optionMap.get(opt);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  option  =(Option)optionMap.get(opt);	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
29	[BUG]  [BUGGY]  option  =(Option)opt.clone();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  option  =(Option)opt.clone();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	option  =(Option)opt.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
30	[BUG]  [BUGGY]  Option  argumentLine  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  argumentLine  =(Option)option.clone();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  argumentLine  =(Option)option.clone();	  Option    argumentLine    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
31	[BUG]  [BUGGY]  Option  arguments  =(Option)opt.clone();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  arguments  =(Option)opt.clone();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  arguments  =(Option)opt.clone();	  Option    argumentLine    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
32	[BUG]  [BUGGY]  Option  optionLine  =(Option)opt.clone();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  optionLine  =(Option)opt.clone();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  optionLine  =(Option)opt.clone();	  Option    argumentLine    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
33	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone(),  arguments);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone(),  arguments);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(opt.clone(),  arguments);	  Option    commandLine    =(Option)optionMap.get(opt.clone());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
34	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone()  -  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(opt.clone()  -  1);	  Option    commandLine    =(Option)optionMap.get(opt.clone());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
35	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(arg.clone());  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(arg.clone());  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(arg.clone());	  Option    commandLine    =(Option)optionMap.get(opt.clone());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
36	[BUG]  [BUGGY]  Argument  argument  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  options.get(option);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  options.get(option);	  Argument    argument    =    options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
37	[BUG]  [BUGGY]  Argument  argument  =  opt.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  opt.getOption(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  opt.getOption(arg);	  Argument    argument    =    options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
38	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =  options.get(option);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =  options.get(option);	  Option    commandLine    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  Option  commandLine  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =  options.get(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =  options.get(arg);	  Option    commandLine    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)option.getAnonymousCommandLine();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)option.getAnonymousCommandLine();	  Argument    argument    =(Argument)option.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
41	[BUG]  [BUGGY]  Option  argument  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  argument  =  optionMap.get(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  argument  =  optionMap.get(arg);	  Option    argument    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
42	[BUG]  [BUGGY]  Option  argument  =  options.get(opt);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  argument  =  options.get(opt);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  argument  =  options.get(opt);	  Option    argument    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  Option  argument  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  argument  =  optionMap.get(option);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  argument  =  optionMap.get(option);	  Option    argument    =    optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  Argument  argument  =(Option)option.getArgument();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)option.getArgument();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)option.getArgument();	  Argument    argument    =(Option)option.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
45	[BUG]  [BUGGY]  Argument  argument  =(Option)option.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)option.getAnonymousCommandLine();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)option.getAnonymousCommandLine();	  Argument    argument    =(Option)option.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
46	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(previous  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(previous  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
47	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt  +  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
48	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(commandLine  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
49	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(0);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(0);	  Option    commandLine    =(Option)optionMap.clone();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
50	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)optionMap.get(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)optionMap.get(previous);	  Argument    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)optionMap.get(opt);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)optionMap.get(opt);	  Argument    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.get(arg);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)opt.get(arg);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)opt.get(arg);	  Argument    argument    =(Option)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  argumentMap.remove(opt);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  argumentMap.remove(opt);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	argumentMap.remove(opt);	  argumentMap.remove(previous);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
54	[BUG]  [BUGGY]  argumentMap.remove(option);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  argumentMap.remove(option);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	argumentMap.remove(option);	  argumentMap.remove(previous);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
55	[BUG]  [BUGGY]  argumentMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  argumentMap.get(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	argumentMap.get(previous);	  argumentMap.remove(previous);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
56	[BUG]  [BUGGY]  arguments.addAll(option.values(),  previous);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.addAll(option.values(),  previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.addAll(option.values(),  previous);	  arguments.addAll(option.values());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  arguments.add(option.values());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(option.values());  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(option.values());	  arguments.addAll(option.values());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  arguments.add(opt.getValue(),  previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(opt.getValue(),  previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(opt.getValue(),  previous);	  arguments.add(opt.getValue());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
59	[BUG]  [BUGGY]  arguments.add(option.getValue());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(option.getValue());  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(option.getValue());	  arguments.add(opt.getValue());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
60	[BUG]  [BUGGY]  arguments.add(opt.getKey());  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(opt.getKey());  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(opt.getKey());	  arguments.add(opt.getValue());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
61	[BUG]  [BUGGY]  arguments.add(opt.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(opt.getValue()  +  1);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(opt.getValue()  +  1);	  arguments.add(opt.getValue());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
62	[BUG]  [BUGGY]  arguments.add(prefix);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(prefix);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(prefix);	  arguments.add(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  Argument  argument  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)option.clone();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)option.clone();	  Argument    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)opt.clone()  :  null;  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)opt.clone()  :  null;	  Argument    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  Argument  previous  =  opt.getValue();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  opt.getValue();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  opt.getValue();	  arguments.add(previous);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
66	[BUG]  [BUGGY]  Argument  previous  =  opt.getPrefix();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  opt.getPrefix();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  opt.getPrefix();	  arguments.add(previous);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
67	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousCommandLine(0);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.getAnonymousCommandLine(0);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.getAnonymousCommandLine(0);	  Argument    argument    =(Argument)opt.getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  arguments.add(opt.values(),  previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(opt.values(),  previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(opt.values(),  previous);	  arguments.add(opt.values());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  Argument  argument  =  options.get(commandLine);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  options.get(commandLine);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  options.get(commandLine);	  Argument    argument    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
70	[BUG]  [BUGGY]  Argument  argument  =  opt.get(previous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  opt.get(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  opt.get(previous);	  Argument    argument    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
71	[BUG]  [BUGGY]  i.remove(previous);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  i.remove(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	i.remove(previous);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  commandLine.remove();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  commandLine.remove();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	commandLine.remove();	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
73	[BUG]  [BUGGY]  i.set(previous);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  i.set(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	i.set(previous);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
74	[BUG]  [BUGGY]  arguments.addAll(opt.values(),  description);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.addAll(opt.values(),  description);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.addAll(opt.values(),  description);	  arguments.addAll(opt.values(),    previous);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
75	[BUG]  [BUGGY]  arguments.addAll(opt.values(),  prefix);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.addAll(opt.values(),  prefix);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.addAll(opt.values(),  prefix);	  arguments.addAll(opt.values(),    previous);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
76	[BUG]  [BUGGY]  arguments.addAll(opt.values(),  commandLine);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.addAll(opt.values(),  commandLine);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.addAll(opt.values(),  commandLine);	  arguments.addAll(opt.values(),    previous);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
77	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone(),  options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone(),  options);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(opt.clone(),  options);	  Option    commandLine    =(Option)optionMap.get(opt.clone());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
78	[BUG]  [BUGGY]  Argument  argument  =(opt!=  null)?  null  :  opt.values();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(opt!=  null)?  null  :  opt.values();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(opt!=  null)?  null  :  opt.values();	  Argument    argument    =    opt.values();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
79	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(option.getValue());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(option.getValue());  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(option.getValue());	  Argument    argument    =(Argument)option.getValue();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
80	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.getValue());  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.getValue());  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt.getValue());	  Argument    argument    =(Argument)option.getValue();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.getAnonymousCommandLine(0);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)opt.getAnonymousCommandLine(0);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)opt.getAnonymousCommandLine(0);	  Argument    argument    =(Option)opt.getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
82	[BUG]  [BUGGY]  Argument  previous  =  optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  optionMap.get(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  optionMap.get(previous);	  Argument    previous    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  Option  argument  =(Option)opt.getAnonymousArgument();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  argument  =(Option)opt.getAnonymousArgument();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  argument  =(Option)opt.getAnonymousArgument();	  Argument    argument    =(Option)option.getAnonymousArgument();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
84	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  option  =(Option)optionMap.clone();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  option  =(Option)optionMap.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
85	[BUG]  [BUGGY]  Argument  previous  =  opt.getOption(previous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  opt.getOption(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  opt.getOption(previous);	  arguments.add(previous);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
86	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.get(arg  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.get(arg  +  1);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
87	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.get(arg  -  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.get(arg  -  1);	  Argument    argument    =(Argument)opt.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
88	[BUG]  [BUGGY]  Argument  argument  =  options.get(opt  +  1);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  options.get(opt  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  options.get(opt  +  1);	  Argument    argument    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.next();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.next();	  Argument    argument    =(Argument)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  Argument  argument  =  optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  optionMap.get(previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  optionMap.get(previous);	  Argument    argument    =    options.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
91	[BUG]  [BUGGY]  Argument  previous  =  optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  optionMap.get(opt);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  optionMap.get(opt);	  Argument    previous    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
92	[BUG]  [BUGGY]  Option  argumentLine  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  argumentLine  =(Option)optionMap.clone();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  argumentLine  =(Option)optionMap.clone();	  Option    argumentLine    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
93	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(option);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(option);	  Option    commandLine    =(Option)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
94	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt  -  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt  -  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(opt  -  1);	  Option    commandLine    =(Option)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
95	[BUG]  [BUGGY]  Argument  argument  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)optionMap.clone();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)optionMap.clone();	  Argument    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
96	[BUG]  [BUGGY]  i.remove(opt);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  i.remove(opt);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	i.remove(opt);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  i.remove(0);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  i.remove(0);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	i.remove(0);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  i.remove(option);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  i.remove(option);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	i.remove(option);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.values()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.values()  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt.values()  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
100	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.prefix  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt.prefix  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
101	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt  -  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt  -  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt  -  1);	  Argument    argument    =(Argument)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
102	[BUG]  [BUGGY]  argumentMap.put(opt,  previous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  argumentMap.put(opt,  previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	argumentMap.put(opt,  previous);	  argumentMap.remove(previous);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
103	[BUG]  [BUGGY]  arguments.addAll(opt.values(),  options);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.addAll(opt.values(),  options);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.addAll(opt.values(),  options);	  arguments.addAll(opt.values(),    previous);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
104	[BUG]  [BUGGY]  arguments.addAll(opt.values(),  null);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.addAll(opt.values(),  null);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.addAll(opt.values(),  null);	  arguments.addAll(opt.values(),    previous);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
105	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.getAnonymousArg());  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.getAnonymousArg());  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt.getAnonymousArg());	  Argument    argument    =(Argument)option.getAnonymousArg();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
106	[BUG]  [BUGGY]  Argument  argument  =(Argument)option.getAnonymousArg(0);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)option.getAnonymousArg(0);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)option.getAnonymousArg(0);	  Argument    argument    =(Argument)option.getAnonymousArg();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
107	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.getArg();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)opt.getArg();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)opt.getArg();	  Argument    argument    =(Option)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.getArg1();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)opt.getArg1();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)opt.getArg1();	  Argument    argument    =(Option)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
109	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(commandLine  -  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(commandLine  -  1);	  Argument    argument    =(Argument)optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
110	[BUG]  [BUGGY]  Argument  argument  =(Option)opt.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Option)opt.next();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Option)opt.next();	  Argument    argument    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
111	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(argument);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(argument);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(argument);	  Argument    argument    =(Argument)optionMap.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  i.process(commandLine,  arguments);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  i.process(commandLine,  arguments);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	i.process(commandLine,  arguments);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
113	[BUG]  [BUGGY]  i.process(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  i.process(commandLine,  null);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	i.process(commandLine,  null);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
114	[BUG]  [BUGGY]  Argument  argument  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  optionMap.values();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  optionMap.values();	  Argument    argument    =    opt.values();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  argumentMap.put(arg,  previous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  argumentMap.put(arg,  previous);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	argumentMap.put(arg,  previous);	  argumentMap.remove(previous);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
116	[BUG]  [BUGGY]  Argument  previous  =  opt.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  previous  =  opt.getAnonymousCommandLine();  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  previous  =  opt.getAnonymousCommandLine();	  arguments.add(previous);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
117	[BUG]  [BUGGY]  Argument  argument  =(Argument)opt.getMessage();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)opt.getMessage();  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)opt.getMessage();	  Argument    argument    =(Argument)opt.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
118	[BUG]  [BUGGY]  arguments.addAll(opt.values(),  value);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.addAll(opt.values(),  value);  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.addAll(opt.values(),  value);	  arguments.addAll(opt.values(),    previous);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
119	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg  -  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(arg  -  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
120	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.previous  +  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(opt.previous  +  1);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(opt.previous  +  1);	  Argument    argument    =(Argument)optionMap.get(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
121	[BUG]  [BUGGY]  arguments.add(new  Option(opt));  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  arguments.add(new  Option(opt));  [BUGGY]      opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	arguments.add(new  Option(opt));	  arguments.add(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
122	[BUG]  [BUGGY]  Argument  argument  =  opt.get(arg);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =  opt.get(arg);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =  opt.get(arg);	  Argument    argument    =    options.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
123	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone(),  argument);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Option  commandLine  =(Option)optionMap.get(opt.clone(),  argument);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Option  commandLine  =(Option)optionMap.get(opt.clone(),  argument);	  Option    commandLine    =(Option)optionMap.get(opt.clone());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
124	[BUG]  [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg).process(commandLine,  arguments);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);  if  (opt  !=  null)  {      [BUGGY]  Argument  argument  =(Argument)optionMap.get(arg).process(commandLine,  arguments);  [BUGGY]      arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (commandLine.looksLikeOption(arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	181	181	1	replace	Argument  argument  =(Argument)optionMap.get(arg).process(commandLine,  arguments);	  Argument    argument    =(Argument)optionMap.get(arg).values();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
