bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)option.next();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =(CommandLine)option.next();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =(CommandLine)option.next();	      CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)commandLine.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =(CommandLine)commandLine.next();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =(CommandLine)commandLine.next();	      CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =(CommandLine)optionMap.get(i.next());  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =(CommandLine)optionMap.get(i.next());	      CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  option.validate(previous);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  option.validate(previous);  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	option.validate(previous);	  option.validate(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)optionMap.clone();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)optionMap.clone();	      Option    commandLine    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  Option  commandLine  =(Option)commandLine.clone();  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)commandLine.clone();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)commandLine.clone();	      Option    commandLine    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next());  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  options.get(option.next());  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  options.get(option.next());	      Option    commandLine    =    options.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next(),  validate);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  options.get(option.next(),  validate);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  options.get(option.next(),  validate);	      Option    commandLine    =    options.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next()  -  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  options.get(option.next()  -  1);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  options.get(option.next()  -  1);	      Option    commandLine    =    options.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  Option  commandLine  =  options.get(i.next(),  validate);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  options.get(i.next(),  validate);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  options.get(i.next(),  validate);	      Option    commandLine    =    options.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.getCommandLine();  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)option.getCommandLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)option.getCommandLine();	      Option    commandLine    =(Option)option.getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  option.validate(unknown,  validate);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  option.validate(unknown,  validate);  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	option.validate(unknown,  validate);	  option.validate(unknown);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  option.validate(exception);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  option.validate(exception);  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	option.validate(exception);	  option.validate(unknown);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  CommandLine  commandLine  =((  Group)option.next()).getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =((  Group)option.next()).getAnonymousCommandLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =((  Group)option.next()).getAnonymousCommandLine();	      CommandLine    commandLine    =((    Group)i.next()).getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  CommandLine  commandLine  =((  Group)i.next()).getArgumentCommandLine();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =((  Group)i.next()).getArgumentCommandLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =((  Group)i.next()).getArgumentCommandLine();	      CommandLine    commandLine    =((    Group)i.next()).getAnonymousCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  option.validateOption(arg);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  option.validateOption(arg);  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	option.validateOption(arg);	  option.validateOption(option);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  option.validateOption(unknown);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  option.validateOption(unknown);  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	option.validateOption(unknown);	  option.validateOption(option);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  CommandLine  commandLine  =((  Group)option.next()).getCommandLine();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =((  Group)option.next()).getCommandLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =((  Group)option.next()).getCommandLine();	      CommandLine    commandLine    =((    Group)i.next()).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  CommandLine  commandLine  =((  Group)i.next()).getCommandLine(),  commandLine);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =((  Group)i.next()).getCommandLine(),  commandLine);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =((  Group)i.next()).getCommandLine(),  commandLine);	      CommandLine    commandLine    =((    Group)i.next()).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  CommandLine  commandLine  =((  Group)i.next()).getCommandLine()  +  1;  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =((  Group)i.next()).getCommandLine()  +  1;  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =((  Group)i.next()).getCommandLine()  +  1;	      CommandLine    commandLine    =((    Group)i.next()).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)optionMap.get(option);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)optionMap.get(option);	      Option    commandLine    =(Option)optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(i);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(i);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)this.optionMap.get(i);	      Option    commandLine    =(Option)optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  option.getArgument();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  option.getArgument();	      Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  Option  commandLine  =  options.getCommandLine();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  options.getCommandLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  options.getCommandLine();	      Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(validate);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  option.getCommandLine(validate);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  option.getCommandLine(validate);	      Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)option.next();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)option.next();	      Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)optionMap.get(i.next());  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)optionMap.get(i.next());	      Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)optionMap.next();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)optionMap.next();	      Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =  options.getCommandLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =  option.getArgumentLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  CommandLine  commandLine  =  i.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =  i.next();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =  i.next();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  option.validate(arg,  validate);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  option.validate(arg,  validate);  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	option.validate(arg,  validate);	  option.validate(arg);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  option  =(Option)option.clone();	      Option    commandLine    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(validate);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)optionMap.get(validate);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)optionMap.get(validate);	      Option    commandLine    =(Option)optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(validate);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(validate);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =  option.getCommandLine(validate);	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next()  +  1);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  options.get(option.next()  +  1);  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  options.get(option.next()  +  1);	      Option    commandLine    =    options.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
37	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.getArg1();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)option.getArg1();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)option.getArg1();	      Option    commandLine    =(Option)option.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.getSource();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)option.getSource();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)option.getSource();	      Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  CommandLine  commandLine  =((  Group)option.getNext()).getCommandLine();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =((  Group)option.getNext()).getCommandLine();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =((  Group)option.getNext()).getCommandLine();	      CommandLine    commandLine    =((    Group)i.next()).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getNext();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getNext();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =(CommandLine)option.getNext();	      CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getArgument();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getArgument();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =(CommandLine)option.getArgument();	      CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  Option  commandLine  =(Option)i.getValue();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)i.getValue();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)i.getValue();	      Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  Option  commandLine  =(Option)i.getArgument();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)i.getArgument();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)i.getArgument();	      Option    commandLine    =(Option)option.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getArg1();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  CommandLine  commandLine  =  option.getArg1();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	CommandLine  commandLine  =  option.getArg1();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  option  =(Option)i.next();  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  option  =(Option)i.next();	  option.validateOption(option);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  Option  commandLine  =(Option)i.clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =(Option)i.clone();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =(Option)i.clone();	      Option    commandLine    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  option.validate();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  option.validate();  [BUGGY]    }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	option.validate();	  option.validate(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  Option  commandLine  =  option.getArg1();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {    [BUGGY]  Option  commandLine  =  option.getArg1();  [BUGGY]    option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	251	251	1	replace	Option  commandLine  =  option.getArg1();	      Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
