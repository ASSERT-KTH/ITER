projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=minimum;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=maximum;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=minimum+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=maximal;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.options=Collections.unmodifiableList(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=Collections.unmodifiableList(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.options=Collections.unmodifiableList(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=optionMap.get(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73i.remove();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>i=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iteratori=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>i=options.entities().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=minimum-1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.emptyList();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=OptionMap.newHashMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.EMPTY_LIST;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.options=Collections.unmodifiableList(optionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iteratori=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iteratori=newAnonymous.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=minimal;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=maximum+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(optionMap,triggers);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=minimum/1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=OptionMap.newInstanceMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=OptionMap.newEmptyMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=OptionMap.newAnonymousMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73if(options!=null){this.options=Collections.unmodifiableList(options);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.options=Collections.unmodifiableList(options)+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=options.get(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=optionsMap.get(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=optionMap.get(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=optionMap.get(description-1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>i=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>i=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>i=newAnonymous.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=Collections.unmodifiableList(optionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=Collections.unmodifiableList(optionMap)+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=Collections.unmodifiableList(optionMap).clone();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=maximum-1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=minimal-1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73j.remove();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73i.setIndex(maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73i.removeChild(j);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>i=options.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Lists.newArrayList();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=newPrefixes();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iteratorj=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>options=optionMap.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73i.remove(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.options=Collections.unmodifiableList(optionMap)+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73if(optionMap!=null){this.options=Collections.unmodifiableList(options);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=newHashSet<String>();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.EMPTY_LIST+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.minimum=minimum+2;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iteratori=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iteratori=options.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(options)+1;
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(options,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=OptionMap.newArrayList();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=optionMap.get(defaultOption);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Iterator<Option>i=options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73if(optionMap==null){this.options=Collections.unmodifiableList(options);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.emptySet();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.optionMap=OptionMap.newLinkedHashMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=optionMap.getOption("option");
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73Optionoption=optionMap.get(description+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java73this.prefixes=Collections.unmodifiableList(options).iterator();
