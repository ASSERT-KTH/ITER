projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratori=newOptionMap.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratori=options.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratori=newOptionMaps.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratori=options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratori=triggers.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratori=newOptionMap.entrySet().iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){for(Iteratori=newOptionMap.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=triggers.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=Collections.unmodifiableSortedMap(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap.put(option.getPrefixes(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=this.triggers.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=triggers.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.iterator();i.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=allOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=allOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=newOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=Sets.newHashSet();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=Sets.newHashSet(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=Sets.newHashSet(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>options=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=options.iterator();j.hasNext();){this.optionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(option!=null){for(Iteratori=options.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(options!=null){for(Iteratori=options.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(option,newAnonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=triggers.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=option.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Preconditions.checkNotNull(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(options!=null){for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(options!=null){for(Iteratori=options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(options!=null){for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(option!=null){for(Iteratori=options.entrySet().iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=options.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableList(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=optionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newOptionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratori=options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=options.getAllOptions();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.getPrefixes();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.iterator();i.hasNext();){newOptionMap.put(option.getPrefixes(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,minimal);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(default,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=this.prefixes.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=this.options.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=newOptionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=newOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(this.defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=this.options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.options.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=prefixes.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=this.optionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,description,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,description,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,description,newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap.put(option.getName(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap.put(option.getPrefixes(),options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap.put(option.getPrefixes(),description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,name,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,name,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(description,name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newOptionMap,newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=prefixes.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108List<Option>newOptionMap=Sets.newHashSet();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108ArrayList<Option>newOptionMap=Sets.newHashSet();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Collection<Option>newOptionMap=Sets.newHashSet();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=Sets.newHashSet(this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108ArrayList<Option>newOptionMap=Sets.newHashSet(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=Sets.newHashSet(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=this.allOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.entrySet().iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=options.entrySet().iterator();for(Iteratori=newAnonymous.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.entrySet().iterator();i.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.prefixes.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.triggers.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratorj=this.triggers.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(this.default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.prefixes.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.triggers.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.options.iterator();j.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.prefixes.iterator();j.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=options.iterator();j.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=options.iterator();for(Iteratorj=newAnonymous.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=options.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.options.iterator();j.hasNext();){this.optionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=options.iterator();j.hasNext();){this.optionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratorj=options.iterator();j.hasNext();){this.optionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=options.iterator();while(j.hasNext()){this.optionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.optionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(this.prefixes,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(this.prefixes,option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=newOptionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=newOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=this.options.iterator();i.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=prefixes.iterator();i.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratori=options.iterator();i.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratori=newAnonymous.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratori=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratori=newAnonymousOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratori=newOptionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(default);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=options.getAllOptionMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108List<Option>newOptionMap=options.getAllOptions();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108ArrayList<Option>newOptionMap=options.getAllOptions();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>options=this.options.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>options=newOptionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>options=allOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>options=iOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap.put(i.next(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=newOptionMap.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=this.options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=Collections.unmodifiableSortedMap(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=Collections.unmodifiableSortedMap(newOptionMap,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=Collections.unmodifiableSortedMap(option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(default,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,minimum,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(minimum,newAnonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(option.getPrefixes(),options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(option.getPrefixes(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(option.getPrefixes(),this);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(option,newAnonymous,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(option,newAnonymous,minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(this.prefixes,options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(this.prefixes,option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=this.options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableList(option.getPrefixes(),options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableList(option.getPrefixes(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableList(option.getPrefixes(),maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.newOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.prefixes.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(this.defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSet(defaultPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=options.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=j.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=(Option)option.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Preconditions.checkNotNull(newPrefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Preconditions.checkState(!prefixes.isEmpty());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Preconditions.checkNotNull(this.prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Preconditions.checkState(newPrefixes!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=Sets.newHashSet(option.getPrefixes(),options);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108ArrayList<Option>newOptionMap=Sets.newHashSet(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108List<Option>newOptionMap=Sets.newHashSet(option.getPrefixes());
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.allOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=options.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=option.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=this.optionMap.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108option=option.getOption(description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=this.options.getPrefixes();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.keySet();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=option.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=triggers.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=option.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=option.getOptionMap().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=optionMap.iterator();i.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=option.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap.putAll(option.getPrefixes(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableList(option.getPrefixes()+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>options=options.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=option.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=optionMap.iterator();i.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108List<Option>newOptionMap=Sets.newHashSet(prefixes);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=options.iterator();j.hasNext();){this.optionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(option.getPrefixes()+1);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=options.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=option.cloneOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=optionMap.getOption();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=option.getPrefixes();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.getAllOptions();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(defaultAnonymous,option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(option,newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,name,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap=Collections.unmodifiableSortedMap(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.iterator();j.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratori=options.iterator();j.hasNext();){newOptionMap.put(option.getPrefixes(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=option.allOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=options.keySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(option.getPrefixes(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=options.iterator();j.hasNext();){newOptionMap.get(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108SortedMapnewOptionMap=Sets.newHashSet();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=option.values().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Preconditions.checkNotNull(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=option.getOption(this.description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratorj=options.iterator();j.hasNext();){newOptionMap.put(i.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=triggers.iterator();j.hasNext();){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(minor,newAnonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>options=optionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=option.allOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iteratori=newOptions.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(defaultAnonymous);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=Collections.unmodifiableSortedMap(optionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=Collections.unmodifiableSortedMap(defaultOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,description,newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=options.iterator();while(i.hasNext()){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(option,newAnonymous,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Optionoption=optionMap.getOption(name);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=triggers.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Preconditions.checkState(this.prefixes!=null);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Set<Option>newOptionMap=Sets.newHashSet(option.getPrefixes(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108if(newOptionMap!=null){OptionnewAnonymous=Collections.unmodifiableSortedMap(newOptionMap);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.prefixes=Collections.unmodifiableSortedMap(newOptionMap);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>j=options.iterator();while(j.hasNext()){newOptionMap.put(option.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newOptionMap=triggers.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=triggers.entrySet().iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108for(Iteratorj=this.description.iterator();j.hasNext();){newOptionMap.put(j.next(),option);}
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(minor,maximum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newOptionMap,description);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108OptionnewAnonymous=options.getPrefixes();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newAnonymous,maximum-minimum);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108SortedMapnewOptionMap=options.getAllOptionMap();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108newOptionMap.put(option.getPrefix(),option);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=newOptionMap.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>i=newAnonymous.iterator();
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108this.anonymous=Collections.unmodifiableList(newArguments);
projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java108Iterator<Option>newAnonymous=options.getOptions();
