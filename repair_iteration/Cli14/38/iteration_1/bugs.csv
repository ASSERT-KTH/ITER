bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]  Option  option  =(Option)i.next();  [BUGGY]    boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next();	final  Option  option  =  (Option)  i.next();  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
2	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    [BUGGY]    boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	  	final  Option  option  =  (Option)  i.next();  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
3	[BUG]  [BUGGY]    Option  commandLine  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    Option  commandLine  =(Option)i.next();  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    Option  commandLine  =(Option)i.next();		non-compiled	[CE]  illegal  start  of  expression	78	None	add
4	[BUG]  [BUGGY]    String  commandLine  =(String)i.next();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    String  commandLine  =(String)i.next();  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    String  commandLine  =(String)i.next();		non-compiled	[CE]  illegal  start  of  expression	78	None	add
5	[BUG]  [BUGGY]    ((  GroupImpl)i.next()).addAnonymousOption(unexpected);  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    ((  GroupImpl)i.next()).addAnonymousOption(unexpected);  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    ((  GroupImpl)i.next()).addAnonymousOption(unexpected);		non-compiled	[CE]  illegal  start  of  expression	78	None	add
6	[BUG]  [BUGGY]    ((  GroupImpl)i.next()).addAnonymousOption(unknown);  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    ((  GroupImpl)i.next()).addAnonymousOption(unknown);  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    ((  GroupImpl)i.next()).addAnonymousOption(unknown);		non-compiled	[CE]  illegal  start  of  expression	78	None	add
7	[BUG]  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous		non-compiled	[CE]  illegal  start  of  expression	78	None	add
8	[BUG]  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous		non-compiled	[CE]  illegal  start  of  expression	78	None	add
9	[BUG]  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous		non-compiled	[CE]  illegal  start  of  expression	78	None	add
10	[BUG]  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous		non-compiled	[CE]  illegal  start  of  expression	78	None	add
11	[BUG]  [BUGGY]  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]  option  =(Option)i.next();  [BUGGY]    boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next();	final  Option  option  =  (Option)  i.next();  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
12	[BUG]  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous		non-compiled	[CE]  illegal  start  of  expression	78	None	add
13	[BUG]  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	    SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();		non-compiled	[CE]  illegal  start  of  expression	78	None	add
