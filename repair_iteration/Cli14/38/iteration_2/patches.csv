bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(optionMap.containsKey(arg))?  options.next()  :  null;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(optionMap.containsKey(arg))?  options.next()  :  null;  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(optionMap.containsKey(arg))?  options.next()  :  null;	  Option    option    =    i.next();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  Option  option  =  commandLine.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =  commandLine.next();  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =  commandLine.next();	  Option    option    =    i.next();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  optionMap.put(i,(Option)i.next());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  optionMap.put(i,(Option)i.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	optionMap.put(i,(Option)i.next());	  optionMap.put(option,(Option)i.next());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  option;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  option;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.next()  + ": "  +  option;	  String    commandLine    =(String)i.next()    +   ":   "    +    arg;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  name;  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  name;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.next()  + ": "  +  name;	  String    commandLine    =(String)i.next()    +   ":   "    +    arg;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  description;  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  description;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.next()  + ": "  +  description;	  String    commandLine    =(String)i.next()    +   ":   "    +    arg;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(option);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(option);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  present);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  present);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  present);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unknown);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  false);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  false);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  false);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unknown);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  null);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  null);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unknown);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
19	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
20	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
21	[BUG]  [BUGGY]  final  String  commandLine  =(String)i.next()  -  1;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)i.next()  -  1;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(String)i.next()  -  1;	  final    String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  final  String  commandLine  =(String)i.getValue();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)i.getValue();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(String)i.getValue();	  final    String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  String  commandLine  =(i.next()!=  null)?(String)commandLine  :(String)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.next()!=  null)?(String)commandLine  :(String)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.next()!=  null)?(String)commandLine  :(String)i.next();	  String    commandLine    =(i.next()    ==    null)?(String)commandLine    :(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
24	[BUG]  [BUGGY]  String  commandLine  =(i.hasNext())?(String)commandLine  :(String)i.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.hasNext())?(String)commandLine  :(String)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.hasNext())?(String)commandLine  :(String)i.next();	  String    commandLine    =(i.next()    ==    null)?(String)commandLine    :(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
25	[BUG]  [BUGGY]  String  commandLine  =(i.getKey()  ==  null)?(String)commandLine  :(String)i.next();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.getKey()  ==  null)?(String)commandLine  :(String)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.getKey()  ==  null)?(String)commandLine  :(String)i.next();	  String    commandLine    =(i.next()    ==    null)?(String)commandLine    :(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
26	[BUG]  [BUGGY]  String  commandLine  =(String)i.getKey();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(String)i.getKey();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.getKey();	  String    commandLine    =(String)i.getValue();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
27	[BUG]  [BUGGY]  String  commandLine  =(String)i.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(String)i.getValue()  -  1;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.getValue()  -  1;	  String    commandLine    =(String)i.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  String  commandLine  =(String)i.next()  +  1;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(String)i.next()  +  1;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.next()  +  1;	  String    commandLine    =(String)i.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)unexpected;  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)unexpected;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)unexpected;	  final    SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)i.next();  commandLine.put(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  CommandLine  commandLine  =(CommandLine)i.next();  commandLine.put(option.getKey(),  option);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	CommandLine  commandLine  =(CommandLine)i.next();  commandLine.put(option.getKey(),  option);	  Option    option    =(Option)i.next();    commandLine.put(option.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
32	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)i.next();  commandLine.put(option.getKey(),  commandLine);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  CommandLine  commandLine  =(CommandLine)i.next();  commandLine.put(option.getKey(),  commandLine);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	CommandLine  commandLine  =(CommandLine)i.next();  commandLine.put(option.getKey(),  commandLine);	  Option    option    =(Option)i.next();    commandLine.put(option.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  commandLine.put(option.getValue(),  option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next();  commandLine.put(option.getValue(),  option);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next();  commandLine.put(option.getValue(),  option);	  Option    option    =(Option)i.next();    commandLine.put(option.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
34	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  unexpected);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  unexpected);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next(),  commandLine,  unexpected);	  Option    option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  unknown);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  unknown);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next(),  commandLine,  unknown);	  Option    option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  present);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  present);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next(),  commandLine,  present);	  Option    option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  newAnonymous);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next(),  commandLine,  newAnonymous);	  Option    option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(option);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(option);	  ((    GroupImpl)i.next()).addOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
39	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  unknown);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  unknown);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  unknown);	  ((    GroupImpl)i.next()).addOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
40	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(option,  commandLine);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(option,  commandLine);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(option,  commandLine);	  ((    GroupImpl)i.next()).addOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)commandLine.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)commandLine.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	WriteableCommandLine  commandLine  =(WritableCommandLine)commandLine.next();	  WriteableCommandLine    commandLine    =(WritableCommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
42	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  WriteableCommandLine  commandLine  =(WritableCommandLine)i.next();	  WriteableCommandLine    commandLine    =(WritableCommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
43	[BUG]  [BUGGY]  WritableCommandLine  commandLine  =(WritableCommandLine)i.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  WritableCommandLine  commandLine  =(WritableCommandLine)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	WritableCommandLine  commandLine  =(WritableCommandLine)i.next();	  WriteableCommandLine    commandLine    =(WritableCommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
44	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  null);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  null);	  ((    GroupImpl)i.next()).addOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
45	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  present);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  present);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  present);	  ((    GroupImpl)i.next()).addOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
46	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  event);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  event);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  event);	  ((    GroupImpl)i.next()).addOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
47	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  option);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  option);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  option);	  ((    GroupImpl)i.next()).addOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
48	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
49	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
50	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
51	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  event);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  event);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  event);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  present);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  present);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  present);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  value);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  value);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  value);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousA    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
56	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousA    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
57	[BUG]  [BUGGY]  option  =(Option)i.next(),  commandLine,  unexpected);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  commandLine,  unexpected);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next(),  commandLine,  unexpected);	  option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  option  =(Option)i.next(),  commandLine,  unknown);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  commandLine,  unknown);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next(),  commandLine,  unknown);	  option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  option  =(Option)i.next(),  commandLine,  present);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  commandLine,  present);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next(),  commandLine,  present);	  option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  option  =(Option)i.next(),  commandLine,  prefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  commandLine,  prefixes);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next(),  commandLine,  prefixes);	  option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  value);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  value);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  value);	  ((    GroupImpl)i.next()).addOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
63	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(ReadableCommandLine)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(ReadableCommandLine)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	WriteableCommandLine  commandLine  =(ReadableCommandLine)i.next();	  WriteableCommandLine    commandLine    =(WritableCommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
64	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)i.getValue();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)i.getValue();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	WriteableCommandLine  commandLine  =(WritableCommandLine)i.getValue();	  WriteableCommandLine    commandLine    =(WritableCommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
65	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  option);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  option);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  option  =(Option)i.next(),  commandLine,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next(),  commandLine,  newAnonymous);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next(),  commandLine,  newAnonymous);	  option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  String  commandLine  =(i.getValue()  ==  null)?(String)commandLine  :(String)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.getValue()  ==  null)?(String)commandLine  :(String)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.getValue()  ==  null)?(String)commandLine  :(String)i.next();	  String    commandLine    =(i.next()    ==    null)?(String)commandLine    :(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
68	[BUG]  [BUGGY]  option  =(Option)i.next();  commandLine.put(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  option  =(Option)i.next();  commandLine.put(option.getKey(),  option);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next();  commandLine.put(option.getKey(),  option);	  Option    option    =(Option)i.next();    commandLine.put(option.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
69	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  commandLine.put(option.getKey(),  options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next();  commandLine.put(option.getKey(),  options);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next();  commandLine.put(option.getKey(),  options);	  Option    option    =(Option)i.next();    commandLine.put(option.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
70	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  Option  commandLine  =(Option)optionMap.get(i.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  Option  commandLine  =(Option)optionMap.get(i.next());	  final    Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  Option  option  =(i.hasNext())?  options.next()  :  null;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(i.hasNext())?  options.next()  :  null;  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(i.hasNext())?  options.next()  :  null;	  Option    option    =    i.next();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  Option  option  =(option  instanceof  Group)?(Option)option  :  options.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(option  instanceof  Group)?(Option)option  :  options.next();  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(option  instanceof  Group)?(Option)option  :  options.next();	  Option    option    =    i.next();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  String  commandLine  =(i.next()  ==  null)?(i.next()  :  i.next());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.next()  ==  null)?(i.next()  :  i.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.next()  ==  null)?(i.next()  :  i.next());	  String    commandLine    =(String)i.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  String  commandLine  =(i.next()  ==  null)?(i.next()  :  i.next()):  i.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.next()  ==  null)?(i.next()  :  i.next()):  i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.next()  ==  null)?(i.next()  :  i.next()):  i.next();	  String    commandLine    =(String)i.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  final  String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.next();	  final    String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  final  String  commandLine  =(i.next()!=  null)?(String)commandLine  :(String)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  String  commandLine  =(i.next()!=  null)?(String)commandLine  :(String)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(i.next()!=  null)?(String)commandLine  :(String)i.next();	  final    String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  final  String  commandLine  =(i.next()!=  null)?(String)i.next()  : " ";  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  String  commandLine  =(i.next()!=  null)?(String)i.next()  : " ";  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(i.next()!=  null)?(String)i.next()  : " ";	  final    String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  expected);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.next(),  commandLine,  expected);  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next(),  commandLine,  expected);	  Option    option    =(Option)i.next(),    commandLine);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
79	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
80	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
81	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	  final    SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
82	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  current);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  current);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  current);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unknown);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  optionMap.put(option,  i.next());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  optionMap.put(option,  i.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	optionMap.put(option,  i.next());	  optionMap.put(option,(Option)i.next());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAn  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAn  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAn	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousA    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
85	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAn  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAn  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAn	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousA    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
86	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  newAnonymous);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  newAnonymous);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  String  commandLine  =(String)i.getMessage();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(String)i.getMessage();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.getMessage();	  String    commandLine    =(String)i.getValue();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
89	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
90	[BUG]  [BUGGY]  Option  option  =(i.hasNext())?  options.get(i.next()):  null;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(i.hasNext())?  options.get(i.next()):  null;  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(i.hasNext())?  options.get(i.next()):  null;	  Option    option    =    i.next();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
91	[BUG]  [BUGGY]  Option  option  =(i.hasNext())?  i.next()  :  null;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  Option  option  =(i.hasNext())?  i.next()  :  null;  [BUGGY]        boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(i.hasNext())?  i.next()  :  null;	  Option    option    =    i.next();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
92	[BUG]  [BUGGY]  String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.remove();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.remove();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.remove();	  String    commandLine    =(i.next()    ==    null)?(String)commandLine    :(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
93	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  false);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  false);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  false);	  ((    GroupImpl)i.next()).addOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
94	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  newAnonymous);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  newAnonymous);	  ((    GroupImpl)i.next()).addOption(commandLine,    unexpected);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
95	[BUG]  [BUGGY]  final  String  commandLine  =(i.next()  ==  null)?(String)i.next()  : " ";  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  String  commandLine  =(i.next()  ==  null)?(String)i.next()  : " ";  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(i.next()  ==  null)?(String)i.next()  : " ";	  final    String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
96	[BUG]  [BUGGY]  final  String  commandLine  =(i.next()  ==  null)?(String)commandLine.get(i.next()): " ";  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  String  commandLine  =(i.next()  ==  null)?(String)commandLine.get(i.next()): " ";  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(i.next()  ==  null)?(String)commandLine.get(i.next()): " ";	  final    String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
97	[BUG]  [BUGGY]  String  commandLine  =(i.next())+  1;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  String  commandLine  =(i.next())+  1;  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.next())+  1;	  String    commandLine    =(String)i.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)i.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)i.getAnonymousCommandLine();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	WriteableCommandLine  commandLine  =(WritableCommandLine)i.getAnonymousCommandLine();	  WriteableCommandLine    commandLine    =(WritableCommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  false);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  false);  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown,  false);	  ((    GroupImpl)i.next()).addAnonymousOption(commandLine,    unknown);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
100	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  SimpleAnonymous    commandLine    =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
101	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  final    SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
102	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {      [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	  final    SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
