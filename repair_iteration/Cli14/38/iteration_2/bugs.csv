bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  option  =(Option)i.next(),  commandLine);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  option  =(Option)i.next(),  commandLine);  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)i.next(),  commandLine);	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)i.next(),  commandLine);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)i.next(),  commandLine);  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next(),  commandLine);	  Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine);  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine);	      ((    GroupImpl)i.next()).addAnonymousOption(unexpected);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unexpected);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unexpected);  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unexpected);	      ((    GroupImpl)i.next()).addAnonymousOption(unexpected);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown);  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  ((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown);  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addAnonymousOption(commandLine,  unknown);	      ((    GroupImpl)i.next()).addAnonymousOption(unexpected);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  final  String  commandLine  =(String)i.next();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  String  commandLine  =(String)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  String  commandLine  =(String)i.next();	      String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  String  commandLine  =(String)i.next()  -  1;  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  String  commandLine  =(String)i.next()  -  1;  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.next()  -  1;	      String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  arg;  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  String  commandLine  =(String)i.next()  + ": "  +  arg;  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.next()  + ": "  +  arg;	      String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  Option  option  =  i.next();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =  i.next();  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =  i.next();	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(unknown);  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  ((  GroupImpl)i.next()).addOption(unknown);  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(unknown);	      ((    GroupImpl)i.next()).addAnonymousOption(unknown);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous)i.next();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  commandLine  =(Option)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	final  Option  commandLine  =(Option)i.next();	      Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  optionMap.put(option,(Option)i.next());  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  optionMap.put(option,(Option)i.next());  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	optionMap.put(option,(Option)i.next());	      Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine);  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine);	      ((    GroupImpl)i.next()).addAnonymousOption(unexpected);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(UnknownAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)i.next();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	WriteableCommandLine  commandLine  =(WritableCommandLine)i.next();	      String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.next();  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.next();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(i.next()  ==  null)?(String)commandLine  :(String)i.next();	      String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  option  =(Option)option.next();  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	option  =(Option)option.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  Option  option  =(Option)iterator.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)iterator.next();  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)iterator.next();	  Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  String  commandLine  =(String)i.getValue();  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  String  commandLine  =(String)i.getValue();  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	String  commandLine  =(String)i.getValue();	      String    commandLine    =(String)i.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  unexpected);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  ((  GroupImpl)i.next()).addOption(commandLine,  unexpected);  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	((  GroupImpl)i.next()).addOption(commandLine,  unexpected);	      ((    GroupImpl)i.next()).addAnonymousOption(unexpected);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  options  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  options  =(Option)i.next();  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	options  =(Option)i.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  Options  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Options  option  =(Option)i.next();  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Options  option  =(Option)i.next();	  Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousA  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousA  [BUGGY]    final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	SimpleAnonymous  commandLine  =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousA	      SimpleAnonymous    commandLine    =(SimpleAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymousAnonymous    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  commandLine.put(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    throws  OptionException  {  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)i.next();  commandLine.put(option.getKey(),  option);  [BUGGY]      boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	246	246	1	replace	Option  option  =(Option)i.next();  commandLine.put(option.getKey(),  option);	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
