bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(validate  &&  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]  if(validate  &&  commandLine.hasOption(option))  {  [BUGGY]  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine.hasOption(option))  {	if  (validate)  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
2	[BUG]  [BUGGY]  if(!validate)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]  if(!validate)  {  [BUGGY]  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate)  {	if  (validate)  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
3	[BUG]  [BUGGY]  if(validate  &&  commandLine!=  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]  if(validate  &&  commandLine!=  null)  {  [BUGGY]  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine!=  null)  {	if  (validate)  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    [BUGGY]  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	  	if  (validate)  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
5	[BUG]  [BUGGY]    Option  commandLine  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =(Option)i.next();  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =(Option)i.next();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
6	[BUG]  [BUGGY]    Option  commandLine  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =(Option)option.clone();  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =(Option)option.clone();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
7	[BUG]  [BUGGY]    Option  commandLine  =(Option)optionMap.get(i);  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =(Option)optionMap.get(i);  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =(Option)optionMap.get(i);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
8	[BUG]  [BUGGY]    Option  commandLine  =(Option)option.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =(Option)option.getAnonymousCommandLine();  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =(Option)option.getAnonymousCommandLine();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
9	[BUG]  [BUGGY]    Option  commandLine  =  option.getCommandLine();  [CE]  illegal  start  of  expression  [FE]            ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =  option.getCommandLine();  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =  option.getCommandLine();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
10	[BUG]  [BUGGY]    boolean  commandLine  =  option.isRequired();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    boolean  commandLine  =  option.isRequired();  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    boolean  commandLine  =  option.isRequired();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
11	[BUG]  [BUGGY]    Option  commandLine  =  option.getArgument();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =  option.getArgument();  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =  option.getArgument();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
12	[BUG]  [BUGGY]    Option  commandLine  =(Option)option.getArgument();  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =(Option)option.getArgument();  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =(Option)option.getArgument();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
13	[BUG]  [BUGGY]  if(validate  &&  option.isRequired())  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]  if(validate  &&  option.isRequired())  {  [BUGGY]  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option.isRequired())  {	if  (validate)  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
14	[BUG]  [BUGGY]    Option  commandLine  =  options.get(i.next());  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =  options.get(i.next());  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =  options.get(i.next());		non-compiled	[CE]  illegal  start  of  expression	82	None	add
15	[BUG]  [BUGGY]    Option  commandLine  =  options.get(i);  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]    Option  commandLine  =  options.get(i);  [BUGGY]  if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	    Option  commandLine  =  options.get(i);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
16	[BUG]  [BUGGY]  if(validate  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]  int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;  [BUGGY]  if(validate  &&  option.hasOption(option))  {  [BUGGY]  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option.hasOption(option))  {	if  (validate)  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
