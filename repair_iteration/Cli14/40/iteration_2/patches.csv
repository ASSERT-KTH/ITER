bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)this.optionMap.get(option);	  Option    commandLine    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(0);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)this.optionMap.get(0);	  Option    commandLine    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  final  Option  commandLine  =(Option)option.next();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	final  Option  commandLine  =(Option)option.next();	  final    Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)optionMap.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  final  Option  commandLine  =(Option)optionMap.next();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	final  Option  commandLine  =(Option)optionMap.next();	  final    Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  optionMap.get(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  optionMap.get(option);	  Option    commandLine    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  Option  commandLine  =  i.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  i.next();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  i.next();	  Option    commandLine    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  if(validate  ||  commandLine  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  commandLine  ==  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  commandLine  ==  null)  {	  if(validate    ||    commandLine!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  &&  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  &&  options.hasOption(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  &&  options.hasOption(option);	  boolean    commandLine    =    option.isRequired()    ||    options.hasOption(option);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
9	[BUG]  [BUGGY]  boolean  commandLine  =  options.isRequired()  ||  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  options.isRequired()  ||  options.hasOption(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  options.isRequired()  ||  options.hasOption(option);	  boolean    commandLine    =    option.isRequired()    ||    options.hasOption(option);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
10	[BUG]  [BUGGY]  if(validate  ||  option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  option.hasArg())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  option.hasArg())  {	  if(validate    &&    option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  if(validate  &&  option.hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option.hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option.hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(validate    &&    option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  if(validated  &&  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validated  &&  commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validated  &&  commandLine.hasOption(option))  {	  if(value    &&    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
13	[BUG]  [BUGGY]  if(value  ||  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(value  ||  commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(value  ||  commandLine.hasOption(option))  {	  if(value    &&    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
14	[BUG]  [BUGGY]  Option  commandLine  =  option.getArg2();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArg2();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArg2();	  Option    commandLine    =    option.getArg1();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  Option  commandLine  =  option.getArg3();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArg3();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArg3();	  Option    commandLine    =    option.getArg1();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
16	[BUG]  [BUGGY]  Option  commandLine  =  option.getArg1(),  validate);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArg1(),  validate);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArg1(),  validate);	  Option    commandLine    =    option.getArg1();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)option.next();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  CommandLine  commandLine  =(CommandLine)option.next();  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	CommandLine  commandLine  =(CommandLine)option.next();	  CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
18	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)commandLine.next();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  CommandLine  commandLine  =(CommandLine)commandLine.next();  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	CommandLine  commandLine  =(CommandLine)commandLine.next();	  CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
19	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getNext();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getNext();  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	CommandLine  commandLine  =(CommandLine)option.getNext();	  CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
20	[BUG]  [BUGGY]  if(validate  ||  options.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  options.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  options.hasOption(option))  {	  if(!validate    &&    options.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
21	[BUG]  [BUGGY]  if(!validate  &&  options.hasOption(option)||  option.isRequired())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  options.hasOption(option)||  option.isRequired())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  options.hasOption(option)||  option.isRequired())  {	  if(!validate    &&    options.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
22	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.getArgument();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.getArgument();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.getArgument();	  Option    commandLine    =(Option)i.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
23	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(i).getCommandLine();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(i).getCommandLine();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(i).getCommandLine();	  Option    commandLine    =(Option)optionMap.get(option).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
24	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(option).getArgument();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(option).getArgument();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(option).getArgument();	  Option    commandLine    =(Option)optionMap.get(option).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
25	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(0).getCommandLine();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(0).getCommandLine();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(0).getCommandLine();	  Option    commandLine    =(Option)optionMap.get(option).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
26	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next())+  1;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.next())+  1;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.next())+  1;	  Option    commandLine    =    options.get(option.next()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  if(!validate  &&  commandLine.hasOption(option)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  commandLine.hasOption(option)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  commandLine.hasOption(option)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!validate    &&    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
28	[BUG]  [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(present);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(present);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)this.optionMap.get(present);	  Option    commandLine    =(Option)optionMap.get(present);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
29	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(present  +  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(present  +  1);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(present  +  1);	  Option    commandLine    =(Option)optionMap.get(present);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
30	[BUG]  [BUGGY]  if(!validate  &&  commandLine  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  commandLine  ==  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  commandLine  ==  null)  {	  if(validate    &&    commandLine    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate,  unexpected);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate,  unexpected);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommandLine(),  validate,  unexpected);	  Option    commandLine    =    option.getCommandLine(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
32	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate,  unknown);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate,  unknown);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommandLine(),  validate,  unknown);	  Option    commandLine    =    option.getCommandLine(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
33	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  unknown);  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  unknown);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommandLine(),  unknown);	  Option    commandLine    =    option.getCommandLine(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
34	[BUG]  [BUGGY]  if(validate  &&!commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&!commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&!commandLine.hasOption(option))  {	  if(!validate    &&!commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
35	[BUG]  [BUGGY]  if(validate  ||!commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||!commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||!commandLine.hasOption(option))  {	  if(!validate    &&!commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
36	[BUG]  [BUGGY]  if(!validate  &&!option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&!option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&!option.hasOption(option))  {	  if(!validate    &&!commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
37	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next(),  present);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.next(),  present);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.next(),  present);	  Option    commandLine    =    options.get(option.next()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
38	[BUG]  [BUGGY]  if(validate  &&  option.hasCommandLine(commandLine))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option.hasCommandLine(commandLine))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option.hasCommandLine(commandLine))  {	  if(validate    &&    option.hasCommandLine(option))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
39	[BUG]  [BUGGY]  if(!validate  &&  option.hasCommandLine(option))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option.hasCommandLine(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option.hasCommandLine(option))  {	  if(validate    &&    option.hasCommandLine(option))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
40	[BUG]  [BUGGY]  if(validate  &&  commandLine.hasCommandLine(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine.hasCommandLine(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine.hasCommandLine(option))  {	  if(validate    &&    option.hasCommandLine(option))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
41	[BUG]  [BUGGY]  if(validate  ||  option.hasCommandLine(option))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  option.hasCommandLine(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  option.hasCommandLine(option))  {	  if(validate    &&    option.hasCommandLine(option))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
42	[BUG]  [BUGGY]  boolean  commandLine  =  options.isLocal();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  options.isLocal();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  options.isLocal();	  boolean    commandLine    =    option.isLocal();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
43	[BUG]  [BUGGY]  boolean  commandLine  =  option.isOffline();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isOffline();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isOffline();	  boolean    commandLine    =    option.isLocal();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
44	[BUG]  [BUGGY]  if(validate  &&  commandLine.isRequired()  ||  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine.isRequired()  ||  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine.isRequired()  ||  option.hasOption(option))  {	  if(validate    &&    option.isRequired()    ||    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  if(validate  ||  option.isRequired()  ||  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  option.isRequired()  ||  commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  option.isRequired()  ||  commandLine.hasOption(option))  {	  if(validate    &&    option.isRequired()    ||    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  if(!validate  &&  option.isRequired()  ||  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option.isRequired()  ||  commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option.isRequired()  ||  commandLine.hasOption(option))  {	  if(validate    &&    option.isRequired()    ||    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  &&  option  instanceof  Group;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  &&  option  instanceof  Group;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  &&  option  instanceof  Group;	  boolean    commandLine    =    option.isRequired()    ||    option    instanceof    Group;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  event  instanceof  Group;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  event  instanceof  Group;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  event  instanceof  Group;	  boolean    commandLine    =    option.isRequired()    ||    option    instanceof    Group;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  UnknownOption;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  UnknownOption;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  option  instanceof  UnknownOption;	  boolean    commandLine    =    option.isRequired()    ||    option    instanceof    Group;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
50	[BUG]  [BUGGY]  Option  commandLine  =  option.get(0);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.get(0);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.get(0);	  Option    commandLine    =    options.get(0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next(),  unknown);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.next(),  unknown);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.next(),  unknown);	  Option    commandLine    =    options.get(option.next(),    valid);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
52	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next(),  unexpected);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.next(),  unexpected);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.next(),  unexpected);	  Option    commandLine    =    options.get(option.next(),    valid);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
53	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next(),  undefined);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.next(),  undefined);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.next(),  undefined);	  Option    commandLine    =    options.get(option.next(),    valid);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
54	[BUG]  [BUGGY]  boolean  commandLine  =  option.isCommon();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isCommon();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isCommon();	  boolean    commandLine    =    option.isCollection();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
55	[BUG]  [BUGGY]  if(validate  &&  commandLine.isRequired()  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine.isRequired()  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine.isRequired()  &&  option.hasOption(option))  {	  if(validate    &&    option.isRequired()    &&    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  if(!validate  &&  option.isRequired()  &&  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option.isRequired()  &&  commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option.isRequired()  &&  commandLine.hasOption(option))  {	  if(validate    &&    option.isRequired()    &&    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  if(validate  ||  option.isRequired()  &&  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  option.isRequired()  &&  commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  option.isRequired()  &&  commandLine.hasOption(option))  {	  if(validate    &&    option.isRequired()    &&    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  Option  commandLine  =  options.get(current  +  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(current  +  1);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(current  +  1);	  Option    commandLine    =    options.get(current);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  Option  commandLine  =  options.get(current  -  1);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(current  -  1);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(current  -  1);	  Option    commandLine    =    options.get(current);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  Option  commandLine  =  options.getArgument(),  validate);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.getArgument(),  validate);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.getArgument(),  validate);	  Option    commandLine    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
61	[BUG]  [BUGGY]  Option  commandLine  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.getOption(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.getOption(option);	  Option    commandLine    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
62	[BUG]  [BUGGY]  Option  commandLine  =  option.getArg();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArg();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArg();	  Option    commandLine    =    option.getcommandLine();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
63	[BUG]  [BUGGY]  if(!validate  &&  option.hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option.hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option.hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!validate    &&    option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
64	[BUG]  [BUGGY]  Option  commandLine  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(prefix);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(prefix);	  Option    commandLine    =    options.get(present);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  Option  commandLine  =  options.get(present  +  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(present  +  1);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(present  +  1);	  Option    commandLine    =    options.get(present);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  if(!validate  &&  commandLine!=  null  &&  option.isRequired())  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  commandLine!=  null  &&  option.isRequired())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  commandLine!=  null  &&  option.isRequired())  {	  if(validate    &&    commandLine!=    null    &&    option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
67	[BUG]  [BUGGY]  if(validate  ||  commandLine!=  null  &&  option.isRequired())  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  commandLine!=  null  &&  option.isRequired())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  commandLine!=  null  &&  option.isRequired())  {	  if(validate    &&    commandLine!=    null    &&    option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
68	[BUG]  [BUGGY]  if(validate  &&  commandLine!=  null  ||  option.isRequired())  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine!=  null  ||  option.isRequired())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine!=  null  ||  option.isRequired())  {	  if(validate    &&    commandLine!=    null    &&    option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
69	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.getValue();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)option.getValue();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)option.getValue();	  Option    commandLine    =(Option)i.getValue();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
70	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  option  =(Option)i.next();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  option  =(Option)i.next();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
71	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  option  =(Option)optionMap.clone();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  option  =(Option)optionMap.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
72	[BUG]  [BUGGY]  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  option  =(Option)option.clone();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	option  =(Option)option.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
73	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument(),  validate,  unexpected);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArgument(),  validate,  unexpected);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArgument(),  validate,  unexpected);	  Option    commandLine    =    option.getArgument(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
74	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument(),  validate,  unknown);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArgument(),  validate,  unknown);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArgument(),  validate,  unknown);	  Option    commandLine    =    option.getArgument(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
75	[BUG]  [BUGGY]  if(!validate  &&  commandLine.isRequired())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  commandLine.isRequired())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  commandLine.isRequired())  {	  if(validate    &&    commandLine.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  if(validate  ||  commandLine.isRequired())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  commandLine.isRequired())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  commandLine.isRequired())  {	  if(validate    &&    commandLine.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  if(validate  &&  option!=  null  &&  options.getOption(option)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option!=  null  &&  options.getOption(option)!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option!=  null  &&  options.getOption(option)!=  null)  {	  if(validate    &&    commandLine!=    null    &&    options.getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
78	[BUG]  [BUGGY]  if(!validate  &&  commandLine!=  null  &&  options.getOption(option)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  commandLine!=  null  &&  options.getOption(option)!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  commandLine!=  null  &&  options.getOption(option)!=  null)  {	  if(validate    &&    commandLine!=    null    &&    options.getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
79	[BUG]  [BUGGY]  if(validate  ||  commandLine!=  null  &&  options.getOption(option)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  commandLine!=  null  &&  options.getOption(option)!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  commandLine!=  null  &&  options.getOption(option)!=  null)  {	  if(validate    &&    commandLine!=    null    &&    options.getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
80	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.getValue(),  validate);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.getValue(),  validate);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.getValue(),  validate);	  Option    commandLine    =    options.get(option.next(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
81	[BUG]  [BUGGY]  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  option  =(Option)option.next();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	option  =(Option)option.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(present);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  optionMap.get(present);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  optionMap.get(present);	  Option    commandLine    =    optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
83	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommonCommandLine();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommonCommandLine();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommonCommandLine();	  Option    commandLine    =    option.getParent();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
84	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(prefix);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(prefix);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(prefix);	  Option    commandLine    =(Option)optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
85	[BUG]  [BUGGY]  if(validated  &&  commandLine!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validated  &&  commandLine!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validated  &&  commandLine!=  null)  {	  if(value    &&    commandLine!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
86	[BUG]  [BUGGY]  Option  commandLine  =(Option)this.optionMap.clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)this.optionMap.clone();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)this.optionMap.clone();	  Option    commandLine    =(Option)optionMap.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.getValue());  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.getValue());  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.getValue());	  Option    commandLine    =    options.get(option.next());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
88	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  &&  validate;  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  &&  validate;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  &&  validate;	  boolean    commandLine    =    option.isRequired()    ||    validate;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
89	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  validation;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  validation;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  validation;	  boolean    commandLine    =    option.isRequired()    ||    validate;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  valid;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  valid;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  valid;	  boolean    commandLine    =    option.isRequired()    ||    validate;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
91	[BUG]  [BUGGY]  if(!validate  &&  commandLine!=  null  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  commandLine!=  null  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  commandLine!=  null  &&  option.hasOption(option))  {	  if(validate    &&    commandLine!=    null    &&    option.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
92	[BUG]  [BUGGY]  if(validate  ||  commandLine!=  null  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  ||  commandLine!=  null  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  ||  commandLine!=  null  &&  option.hasOption(option))  {	  if(validate    &&    commandLine!=    null    &&    option.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
93	[BUG]  [BUGGY]  if(value  &&  commandLine!=  null  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(value  &&  commandLine!=  null  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(value  &&  commandLine!=  null  &&  option.hasOption(option))  {	  if(validate    &&    commandLine!=    null    &&    option.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
94	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.getArg2();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)option.getArg2();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)option.getArg2();	  Option    commandLine    =(Option)option.getArg1();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
95	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.getArg3();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)option.getArg3();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)option.getArg3();	  Option    commandLine    =(Option)option.getArg1();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
96	[BUG]  [BUGGY]  boolean  commandLine  =  options.isRequired()  ||  validate;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  options.isRequired()  ||  validate;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  options.isRequired()  ||  validate;	  boolean    commandLine    =    options.isRequired();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
97	[BUG]  [BUGGY]  boolean  commandLine  =  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  options.hasOption(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  options.hasOption(option);	  boolean    commandLine    =    options.isRequired();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
98	[BUG]  [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  validate;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  validate;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isCommandLine()  ||  validate;	  boolean    commandLine    =    option.isCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
99	[BUG]  [BUGGY]  boolean  commandLine  =  options.isCommandLine();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  options.isCommandLine();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  options.isCommandLine();	  boolean    commandLine    =    option.isCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
100	[BUG]  [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getArgument();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  CommandLine  commandLine  =(CommandLine)option.getArgument();  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	CommandLine  commandLine  =(CommandLine)option.getArgument();	  CommandLine    commandLine    =(CommandLine)i.next();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
101	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||(option  instanceof  Group);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||(option  instanceof  Group);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||(option  instanceof  Group);	  boolean    commandLine    =    option.isRequired()    ||    option    instanceof    Group;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
102	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  CommandLine;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  CommandLine;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  option  instanceof  CommandLine;	  boolean    commandLine    =    option.isRequired()    ||    option    instanceof    Group;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
103	[BUG]  [BUGGY]  if(!validate  &&  option.isRequired()  &&  options.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option.isRequired()  &&  options.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option.isRequired()  &&  options.hasOption(option))  {	  if(!validate    &&    option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
104	[BUG]  [BUGGY]  Option  commandLine  =  options.getArg1();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.getArg1();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.getArg1();	  Option    commandLine    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
105	[BUG]  [BUGGY]  Option  commandLine  =  options.getArgument(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.getArgument(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.getArgument(option);	  Option    commandLine    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
106	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option.next(),  null);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option.next(),  null);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option.next(),  null);	  Option    commandLine    =    options.get(option.next(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
107	[BUG]  [BUGGY]  Option  commandLine  =  options.get(i.next()  -  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(i.next()  -  1);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(i.next()  -  1);	  Option    commandLine    =    options.get(option.next()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
108	[BUG]  [BUGGY]  if(validate  &&  option.hasArgs())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option.hasArgs())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option.hasArgs())  {	  if(validate    &&    option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
109	[BUG]  [BUGGY]  if(validate  &&  option.hasArg()  &&  commandLine.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option.hasArg()  &&  commandLine.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option.hasArg()  &&  commandLine.hasOption(option))  {	  if(validate    &&    option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
110	[BUG]  [BUGGY]  Option  commandLine  =(Option)i.getArg1();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)i.getArg1();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)i.getArg1();	  Option    commandLine    =(Option)i.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
111	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(option  +  1);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(option  +  1);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(option  +  1);	  Option    commandLine    =(Option)optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
112	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(option  -  1);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(option  -  1);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(option  -  1);	  Option    commandLine    =(Option)optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
113	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  option  =(Option)optionMap.get(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  option  =(Option)optionMap.get(option);	  Option    commandLine    =(Option)optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
114	[BUG]  [BUGGY]  Option  commandLine  =  options.getParent();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.getParent();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.getParent();	  Option    commandLine    =    option.getParent();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
115	[BUG]  [BUGGY]  if(validate  &&  options.hasArg(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  options.hasArg(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  options.hasArg(option))  {	  if(validate    &&    options.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
116	[BUG]  [BUGGY]  if(validate  &&  options.hasArg())  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  options.hasArg())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  options.hasArg())  {	  if(validate    &&    options.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
117	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument(),  validate;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArgument(),  validate;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArgument(),  validate;	  Option    commandLine    =    option.getArgument(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
118	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument(),  validate  +  1;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArgument(),  validate  +  1;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArgument(),  validate  +  1;	  Option    commandLine    =    option.getArgument(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
119	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(option).getArgumentCommand();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(option).getArgumentCommand();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(option).getArgumentCommand();	  Option    commandLine    =(Option)optionMap.get(option).getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
120	[BUG]  [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||(option.hasOption(option));  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||(option.hasOption(option));  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isCommandLine()  ||(option.hasOption(option));	  boolean    commandLine    =    option.isCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
121	[BUG]  [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  options.hasOption(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isCommandLine()  ||  options.hasOption(option);	  boolean    commandLine    =    option.isCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
122	[BUG]  [BUGGY]  if(validate  &&  option!=  null  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option!=  null  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option!=  null  &&  option.hasOption(option))  {	  if(validate    &&    commandLine!=    null    &&    option.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
123	[BUG]  [BUGGY]  if(validate  &&  commandLine!=  null  &&  option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine!=  null  &&  option.hasArg())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine!=  null  &&  option.hasArg())  {	  if(validate    &&    commandLine!=    null    &&    option.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
124	[BUG]  [BUGGY]  Option  commandLine  =  options.get(unknown);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(unknown);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(unknown);	  Option    commandLine    =    options.get(present);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
125	[BUG]  [BUGGY]  Option  commandLine  =  options.get(option)+  1;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(option)+  1;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(option)+  1;	  Option    commandLine    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
126	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  options.hasArg(option);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  options.hasArg(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  options.hasArg(option);	  boolean    commandLine    =    option.isRequired()    ||    options.hasOption(option);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
127	[BUG]  [BUGGY]  boolean  commandLine  =  options.isRequired()  &&  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  options.isRequired()  &&  options.hasOption(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  options.isRequired()  &&  options.hasOption(option);	  boolean    commandLine    =    option.isRequired()    ||    options.hasOption(option);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
128	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.getArg();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)option.getArg();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)option.getArg();	  Option    commandLine    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
129	[BUG]  [BUGGY]  if(validate  &&  options.hasCommandLine(option))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  options.hasCommandLine(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  options.hasCommandLine(option))  {	  if(validate    &&    option.hasCommandLine(option))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
130	[BUG]  [BUGGY]  if(!validate  &&  options.hasOption(option)||  validate)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  options.hasOption(option)||  validate)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  options.hasOption(option)||  validate)  {	  if(!validate    &&    options.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
131	[BUG]  [BUGGY]  if(testing  &&  commandLine!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(testing  &&  commandLine!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(testing  &&  commandLine!=  null)  {	  if(value    &&    commandLine!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
132	[BUG]  [BUGGY]  if(!validate  &&  option.hasArgs())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option.hasArgs())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option.hasArgs())  {	  if(!validate    &&    option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
133	[BUG]  [BUGGY]  Option  commandLine  =(Option)optionMap.get(option).clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)optionMap.get(option).clone();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)optionMap.get(option).clone();	  Option    commandLine    =(Option)optionMap.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
134	[BUG]  [BUGGY]  if(validated  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validated  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validated  &&  option.hasOption(option))  {	  if(validate    ||    option.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
135	[BUG]  [BUGGY]  boolean  commandLine  =  options.isCollection();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  options.isCollection();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  options.isCollection();	  boolean    commandLine    =    option.isCollection();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
136	[BUG]  [BUGGY]  if(validate  &&  option!=  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option!=  null)  {	  if(validate    &&    commandLine    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
137	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  option  =(Option)option.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
138	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)option.getCommandLine();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  final  Option  commandLine  =(Option)option.getCommandLine();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	final  Option  commandLine  =(Option)option.getCommandLine();	  final    Option    commandLine    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
139	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate  +  1;  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate  +  1;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommandLine(),  validate  +  1;	  Option    commandLine    =    option.getCommandLine(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
140	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate;  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validate;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommandLine(),  validate;	  Option    commandLine    =    option.getCommandLine(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
141	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validation);  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  validation);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommandLine(),  validation);	  Option    commandLine    =    option.getCommandLine(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
142	[BUG]  [BUGGY]  if(validate  &&  option!=  null  &&  option.isRequired())  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  option!=  null  &&  option.isRequired())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  option!=  null  &&  option.isRequired())  {	  if(validate    &&    commandLine!=    null    &&    option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
143	[BUG]  [BUGGY]  if(validate  &&  options.getOption(option)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  options.getOption(option)!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  options.getOption(option)!=  null)  {	  if(validate    &&    commandLine!=    null    &&    options.getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
144	[BUG]  [BUGGY]  if(validate  &&  commandLine!=  null  &&  options.getOption(option)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine!=  null  &&  options.getOption(option)  ==  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine!=  null  &&  options.getOption(option)  ==  null)  {	  if(validate    &&    commandLine!=    null    &&    options.getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
145	[BUG]  [BUGGY]  if(!validate  &&!commandLine.hasArg())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&!commandLine.hasArg())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&!commandLine.hasArg())  {	  if(!validate    &&!commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
146	[BUG]  [BUGGY]  if(validate  &&  commandLine.isRequired()  &&  options.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine.isRequired()  &&  options.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine.isRequired()  &&  options.hasOption(option))  {	  if(validate    &&    commandLine.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
147	[BUG]  [BUGGY]  Option  commandLine  =  options.getcommandLine();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.getcommandLine();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.getcommandLine();	  Option    commandLine    =    option.getcommandLine();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
148	[BUG]  [BUGGY]  if(!validate  &&  commandLine.isRequired()  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  commandLine.isRequired()  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  commandLine.isRequired()  &&  option.hasOption(option))  {	  if(validate    &&    option.isRequired()    &&    commandLine.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
149	[BUG]  [BUGGY]  if(value  ||  commandLine!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(value  ||  commandLine!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(value  ||  commandLine!=  null)  {	  if(value    &&    commandLine!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
150	[BUG]  [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)this.optionMap.get(i.next());  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)this.optionMap.get(i.next());	  Option    commandLine    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
151	[BUG]  [BUGGY]  Option  commandLine  =  i.getArgument();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  i.getArgument();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  i.getArgument();	  Option    commandLine    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
152	[BUG]  [BUGGY]  Option  commandLine  =(Option)commandLine.get(option);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)commandLine.get(option);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)commandLine.get(option);	  Option    commandLine    =(Option)optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
153	[BUG]  [BUGGY]  if(validate  &&  commandLine.isRequired()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine.isRequired()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine.isRequired()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(validate    &&    commandLine.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
154	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  null);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  null);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getCommandLine(),  null);	  Option    commandLine    =    option.getCommandLine(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
155	[BUG]  [BUGGY]  if(validate  &&  commandLine!=  null  &&  options.getOption(option)!=  null  &&  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine!=  null  &&  options.getOption(option)!=  null  &&  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine!=  null  &&  options.getOption(option)!=  null  &&  option.hasOption(option))  {	  if(validate    &&    commandLine!=    null    &&    options.getOption(option)!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
156	[BUG]  [BUGGY]  Option  commandLine  =  options.get(current)+  1;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.get(current)+  1;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.get(current)+  1;	  Option    commandLine    =    options.get(current);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
157	[BUG]  [BUGGY]  Option  commandLine  =  option.getcommand();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getcommand();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getcommand();	  Option    commandLine    =    option.getcommandLine();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
158	[BUG]  [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  isEnabled(Feature.QUOTE_FIELD_COMMAND_LINE);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  isEnabled(Feature.QUOTE_FIELD_COMMAND_LINE);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isCommandLine()  ||  isEnabled(Feature.QUOTE_FIELD_COMMAND_LINE);	  boolean    commandLine    =    option.isCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
159	[BUG]  [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isCommandLine()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isCommandLine()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    commandLine    =    option.isCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
160	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  Group  &&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  Group  &&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  option  instanceof  Group  &&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  boolean    commandLine    =    option.isRequired()    ||    option    instanceof    Group;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
161	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  Group  &&  isEnabled(Feature.QUOTE_FIELD_COMMAND_LINE);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  option  instanceof  Group  &&  isEnabled(Feature.QUOTE_FIELD_COMMAND_LINE);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  option  instanceof  Group  &&  isEnabled(Feature.QUOTE_FIELD_COMMAND_LINE);	  boolean    commandLine    =    option.isRequired()    ||    option    instanceof    Group;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
162	[BUG]  [BUGGY]  Option  option  =  options.get(option.next());  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  option  =  options.get(option.next());  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  option  =  options.get(option.next());	  Option    commandLine    =    options.get(option.next()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
163	[BUG]  [BUGGY]  if(validate  &&  commandLine!=  null  ||  option.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(validate  &&  commandLine!=  null  ||  option.hasOption(option))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(validate  &&  commandLine!=  null  ||  option.hasOption(option))  {	  if(validate    &&    commandLine!=    null    &&    option.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
164	[BUG]  [BUGGY]  if(!validate  &&  options.hasArg())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  options.hasArg())  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  options.hasArg())  {	  if(!validate    &&    option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
165	[BUG]  [BUGGY]  if(!validate  &&  option.isRequired()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option.isRequired()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option.isRequired()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!validate    &&    option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
166	[BUG]  [BUGGY]  Option  commandLine  =(Option)i.getKey();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =(Option)i.getKey();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =(Option)i.getKey();	  Option    commandLine    =(Option)i.getValue();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
167	[BUG]  [BUGGY]  Option  commandLine  =  options.getOptionLine();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  options.getOptionLine();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  options.getOptionLine();	  Option    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
168	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  unexpected;  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  unexpected;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  unexpected;	  boolean    commandLine    =    option.isRequired()    ||    validate;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
169	[BUG]  [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  unwrapped;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  boolean  commandLine  =  option.isRequired()  ||  unwrapped;  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	boolean  commandLine  =  option.isRequired()  ||  unwrapped;	  boolean    commandLine    =    option.isRequired()    ||    validate;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
170	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument(),  validation);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  commandLine  =  option.getArgument(),  validation);  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  commandLine  =  option.getArgument(),  validation);	  Option    commandLine    =    option.getArgument(),    validate);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
171	[BUG]  [BUGGY]  Option  option  =(Option)i.clone();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  Option  option  =(Option)i.clone();  [BUGGY]      if  (validate)  {  option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	Option  option  =(Option)i.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
172	[BUG]  [BUGGY]  if(!validate  &&  option!=  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      int  present  =  0;  Option  unexpected  =  null;  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  boolean  validate  =  option.isRequired()  ||  option  instanceof  Group;      [BUGGY]  if(!validate  &&  option!=  null)  {  [BUGGY]      option.validate(commandLine);  }  if  (commandLine.hasOption(option))  {  if  (++present  >  maximum)  {  unexpected  =  option;  break;  }  [CLASS]  GroupImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  validate  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  List  anonymous  newAnonymous  options  Option  option  unexpected  String  arg  description  name  previous  int  maximum  minimum  present  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	250	250	1	replace	if(!validate  &&  option!=  null)  {	  if(!validate    &&    commandLine!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
