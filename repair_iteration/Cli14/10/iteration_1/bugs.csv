bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  Set  options  =  new  HashSet();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  Set  options  =  new  HashSet();  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  Set  options  =  new  HashSet();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
2	[BUG]  [BUGGY]    final  Set  options  =  newSet();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  Set  options  =  newSet();  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  Set  options  =  newSet();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
3	[BUG]  [BUGGY]    final  List  options  =  newAnonymous.list();  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  List  options  =  newAnonymous.list();  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  List  options  =  newAnonymous.list();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
4	[BUG]  [BUGGY]    final  List  options  =  newAnonymous.keySet();  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  List  options  =  newAnonymous.keySet();  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  List  options  =  newAnonymous.keySet();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
5	[BUG]  [BUGGY]    newAnonymous.addAll(options);  [CE]  illegal  start  of  expression  [FE]            ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    newAnonymous.addAll(options);  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    newAnonymous.addAll(options);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
6	[BUG]  [BUGGY]  for(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]  for(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	for(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  for(final  Iterator  i  =  this.options.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]  for(final  Iterator  i  =  this.options.iterator();  i.hasNext();)  {  [BUGGY]  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	for(final  Iterator  i  =  this.options.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  for(final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]  for(final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	for(final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]    final  List  options  =  newOptionMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  List  options  =  newOptionMap(ReverseStringComparator.getInstance());  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  List  options  =  newOptionMap(ReverseStringComparator.getInstance());		non-compiled	[CE]  illegal  start  of  expression	20	None	add
10	[BUG]  [BUGGY]    final  Set  options  =  newPrefixes.keySet();  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  Set  options  =  newPrefixes.keySet();  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  Set  options  =  newPrefixes.keySet();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
11	[BUG]  [BUGGY]    final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance());  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance());		non-compiled	[CE]  illegal  start  of  expression	20	None	add
12	[BUG]  [BUGGY]    final  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  Option  option  =  options.getOption(name);  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  Option  option  =  options.getOption(name);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
13	[BUG]  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());		non-compiled	[CE]  illegal  start  of  expression	20	None	add
14	[BUG]  [BUGGY]    final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance());  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance());		non-compiled	[CE]  illegal  start  of  expression	20	None	add
15	[BUG]  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.keySet();  [CE]  illegal  start  of  expression  [FE]        ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.keySet();  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.keySet();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
16	[BUG]  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.iterator();  [CE]  illegal  start  of  expression  [FE]          ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.iterator();  [BUGGY]  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.iterator();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
17	[BUG]  [BUGGY]  for(final  Iterator  i  =  newOptions.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();    [BUGGY]  for(final  Iterator  i  =  newOptions.iterator();  i.hasNext();)  {  [BUGGY]  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	for(final  Iterator  i  =  newOptions.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
