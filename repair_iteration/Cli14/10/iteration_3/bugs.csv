bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  List  options  =  newPrefixes!=  null?  newPrefixes.keySet()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newPrefixes!=  null?  newPrefixes.keySet()  :  Collections.EMPTY_LIST;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newPrefixes!=  null?  newPrefixes.keySet()  :  Collections.EMPTY_LIST;	  final    List    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  final  List  options  =  newPrefixes.values();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newPrefixes.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newPrefixes.values();	  final    List    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap.keySet();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newOptionMap.keySet();	  final    List    options    =    newOptionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
4	[BUG]  [BUGGY]  final  List  options  =  newOptionMap.values();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap.values();	  final    List    options    =    newOptionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
5	[BUG]  [BUGGY]  final  List  options  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  optionMap.keySet();	  final    List    options    =    newOptionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
6	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.class,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.class,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.class,  newPrefixes);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
7	[BUG]  [BUGGY]  final  Set  options  =  this.prefixes.keySet();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  this.prefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  this.prefixes.keySet();	  final    Set    options    =    prefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
8	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes!=  null?  newPrefixes.values()  :  Collections.EMPTY_SET;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes!=  null?  newPrefixes.values()  :  Collections.EMPTY_SET;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newPrefixes!=  null?  newPrefixes.values()  :  Collections.EMPTY_SET;	  final    Set    options    =    newPrefixes.values();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
9	[BUG]  [BUGGY]  final  Set  options  =  prefixes.values();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  prefixes.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  prefixes.values();	  final    Set    options    =    newPrefixes.values();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
10	[BUG]  [BUGGY]  final  Set  options  =  newSet.values();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newSet.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newSet.values();	  final    List    options    =    newAnonymous.values();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  newPrefixes.iterator();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  newPrefixes.iterator();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  newPrefixes.iterator();	  if(optionMap!=    null)    {    final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    newPrefixes.iterator();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
12	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  true);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  true);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  true);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  final  ArrayList  options  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  new  ArrayList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  ArrayList  options  =  new  ArrayList();	  final    Set    options    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
16	[BUG]  [BUGGY]  newAnonymous.addAll(newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(newPrefixes,  prefixes);	  newAnonymous.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  final  Set  options  =  newAnonymous.values();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newAnonymous.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newAnonymous.values();	  final    Set    options    =    newAnonymous.keySet();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  final  ArrayList  options  =  newAnonymous.keySet();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  newAnonymous.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  ArrayList  options  =  newAnonymous.keySet();	  final    Set    options    =    newAnonymous.keySet();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  minimum,  maximum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  minimum,  maximum);	  final    Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes);	  final    Set    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
21	[BUG]  [BUGGY]  final  ArrayList  options  =  newOptionMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  newOptionMap(ReverseStringComparator.getInstance());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  ArrayList  options  =  newOptionMap(ReverseStringComparator.getInstance());	  final    Set    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
22	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  prefixes);	  final    Option    option    =    options.getOption(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  minimum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  newPrefixes,  minimum);	  final    Option    option    =    options.getOption(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  newPrefixes,  description);	  final    Option    option    =    options.getOption(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  maximum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  newPrefixes,  maximum);	  final    Option    option    =    options.getOption(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);	  final    List    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
27	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getPrefixes());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getPrefixes());	  final    List    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
28	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  minimum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  description,  minimum);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
29	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  maximum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  description,  maximum);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
30	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  description,  newPrefixes);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
31	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description  +  1);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description  +  1);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  description  +  1);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
32	[BUG]  [BUGGY]  For(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	For(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
33	[BUG]  [BUGGY]  For(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	For(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
34	[BUG]  [BUGGY]  For(final  Iterator  i  =  allPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(final  Iterator  i  =  allPrefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	For(final  Iterator  i  =  allPrefixes.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
35	[BUG]  [BUGGY]  final  Set  options  =  optionMap.get(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  optionMap.get(ReverseStringComparator.getInstance());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  optionMap.get(ReverseStringComparator.getInstance());	  final    List    options    =    optionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
36	[BUG]  [BUGGY]  final  List  options  =  optionMap.get(ReverseStringComparator.getInstance(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.get(ReverseStringComparator.getInstance(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  optionMap.get(ReverseStringComparator.getInstance(),  newPrefixes);	  final    List    options    =    optionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
37	[BUG]  [BUGGY]  final  List  options  =  optionMap.get(ReverseStringComparator.class);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.get(ReverseStringComparator.class);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  optionMap.get(ReverseStringComparator.class);	  final    List    options    =    optionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
38	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getPrefixes());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getPrefixes());	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
39	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getDefault(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getDefault(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getDefault(),  newPrefixes);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
40	[BUG]  [BUGGY]  for(final  Iterator  i  =  this.newAnonymous.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(final  Iterator  i  =  this.newAnonymous.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	for(final  Iterator  i  =  this.newAnonymous.iterator();  i.hasNext();)  {	  for(final    Iterator    i    =    newAnonymous.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstanceUTC(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstanceUTC(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstanceUTC(),  newPrefixes);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstanceUTC());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
42	[BUG]  [BUGGY]  newAnonymous.add(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.add(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.add(newPrefixes);	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
43	[BUG]  [BUGGY]  newAnonymous.add(option,  prefixes);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.add(option,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.add(option,  prefixes);	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
44	[BUG]  [BUGGY]  final  List  options  =  newSet.keySet();  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newSet.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newSet.keySet();	  final    Set    options    =    newSet.keySet();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  newPrefixes);	  final    Set    options    =    newOptionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap.get(ReverseStringComparator.class);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap.get(ReverseStringComparator.class);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newOptionMap.get(ReverseStringComparator.class);	  final    Set    options    =    newOptionMap.get(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
47	[BUG]  [BUGGY]  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =  options.getOption(name);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	Option  option  =  options.getOption(name);	  final    Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  newAnonymous.addAll(prefixes,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(prefixes,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(prefixes,  newPrefixes);	  newAnonymous.addAll(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
49	[BUG]  [BUGGY]  final  Set  options  =  new  TreeSet(prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  TreeSet(prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  new  TreeSet(prefixes);	  final    Set    options    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  final  List  options  =  new  TreeSet();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  new  TreeSet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  new  TreeSet();	  final    Set    options    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  prefixes);	  final    List    options    =    newOptionMap.get(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
52	[BUG]  [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);	  final    List    options    =    newOptionMap.get(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
53	[BUG]  [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  String>emptySet());  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  String>emptySet());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  String>emptySet());	  final    List    options    =    newOptionMap.get(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
54	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes.list();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newPrefixes.list();	  final    List    options    =    newPrefixes.list();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  final  Set  options  =  prefixes.list();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  prefixes.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  prefixes.list();	  final    List    options    =    newPrefixes.list();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  Collections.EMPTY_SET;  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  Collections.EMPTY_SET;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  Collections.EMPTY_SET;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    Collections.EMPTY_SET;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
57	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);	  final    List    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
58	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);	  final    List    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
59	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  description);	  final    List    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
60	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
61	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
62	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  description);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
63	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  true);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  true);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  true);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
64	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap.values());  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(optionMap.values());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(optionMap.values());	  newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
65	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);  final  Set  options  =  newPrefixes.keySet();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);  final  Set  options  =  newPrefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  prefixes);  final  Set  options  =  newPrefixes.keySet();	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    options);    final    Set    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
66	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    options);    final    Set    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
67	[BUG]  [BUGGY]  newAnonymous.addAll(options,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(options,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(options,  newPrefixes);	  newAnonymous.addAll(options,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  newAnonymous.addAll(prefixes,  options);  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(prefixes,  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(prefixes,  options);	  newAnonymous.addAll(options,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  newAnonymous.addAll(options,  prefixes,  minimum);  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(options,  prefixes,  minimum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(options,  prefixes,  minimum);	  newAnonymous.addAll(options,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  newAnonymous.addAll(options,  prefixes,  maximum);  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(options,  prefixes,  maximum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(options,  prefixes,  maximum);	  newAnonymous.addAll(options,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
71	[BUG]  [BUGGY]  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.keySet();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.keySet();	  if(optionMap!=    null)    {    final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    newPrefixes.keySet();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
72	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  this.prefixes.iterator();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  this.prefixes.iterator();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  this.prefixes.iterator();	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    prefixes.iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefixes(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefixes(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefixes(),  newPrefixes);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefaultPrefixes());  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefaultPrefixes());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefaultPrefixes());	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  LinkedHashSet();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  LinkedHashSet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  LinkedHashSet();	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    newPrefixes    =    new    HashSet();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  ArrayList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  ArrayList();	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    newPrefixes    =    new    HashSet();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  newPrefixes);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap.list();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newOptionMap.list();	  final    List    options    =    newOptionMap.list();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
79	[BUG]  [BUGGY]  final  Set  options  =  optionMap.list();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  optionMap.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  optionMap.list();	  final    List    options    =    optionMap.list();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
80	[BUG]  [BUGGY]  final  ArrayList  options  =  optionMap.list();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  optionMap.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  ArrayList  options  =  optionMap.list();	  final    List    options    =    optionMap.list();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
81	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(newPrefixes);	  final    Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(defaultPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(defaultPrefixes);	  final    Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
83	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(prefixes,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(prefixes,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(prefixes,  newPrefixes);	  final    Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.class,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.class,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap.get(ReverseStringComparator.class,  newPrefixes);	  final    List    options    =    newOptionMap.get(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  prefixes;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  prefixes;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  prefixes;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    prefixes;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
86	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  prefixes;  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  prefixes;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  prefixes;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    prefixes;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
87	[BUG]  [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  String>newPrefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  String>newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  String>newPrefixes);	  final    List    options    =    newOptionMap.get(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  Option>newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  Option>newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newOptionMap.get(ReverseStringComparator.getInstance(),  Predicates.  <  Option>newPrefixes);	  final    List    options    =    newOptionMap.get(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  maximum,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  maximum,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  maximum,  newPrefixes);	  final    Option    option    =    options.getOption(name,    maximum);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
90	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefixes(),  options);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefixes(),  options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
91	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  newPrefixes,  prefixes);	  final    Option    option    =    options.getOption(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  newPrefixes;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  newPrefixes;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  newPrefixes;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    prefixes;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
93	[BUG]  [BUGGY]  final  Set  options  =  options.keySet();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  options.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  options.keySet();	  final    Set    options    =    prefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
94	[BUG]  [BUGGY]  if(options!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  if(options!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	if(options!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  }	  if(optionMap!=    null)    {    final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    newPrefixes.iterator();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
95	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  options.iterator();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  options.iterator();	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    prefixes.iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
96	[BUG]  [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	For(final  Iterator  i  =  options.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
97	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getDefault());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getDefault());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newOptionMap(ReverseStringComparator.getDefault());	  final    List    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
98	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  final  Set  options  =  newPrefixes.values();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  final  Set  options  =  newPrefixes.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  final  Set  options  =  newPrefixes.values();	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    options);    final    Set    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
99	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(defaultName);  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(defaultName);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(defaultName);	  final    Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
100	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  Predicates.  <  String>newPrefixes);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  Predicates.  <  String>newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  Predicates.  <  String>newPrefixes);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
101	[BUG]  [BUGGY]  final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance());	  final    Set    options    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
102	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefix());  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefix());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getPrefix());	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
103	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap,  prefixes);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(optionMap,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(optionMap,  prefixes);	  newAnonymous.addAll(options,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
104	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  Prefixes.keySet();  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  Prefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  Prefixes.keySet();	  if(optionMap!=    null)    {    final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    newPrefixes.keySet();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
105	[BUG]  [BUGGY]  final  Set  options  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  optionMap.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  optionMap.keySet();	  final    Set    options    =    newAnonymous.keySet();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
106	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  minimum  +  1);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  minimum  +  1);	  final    Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  final  Set  options  =  new  LinkedList();  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  LinkedList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  new  LinkedList();	  final    Set    options    =    new    LinkedHashSet();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
108	[BUG]  [BUGGY]  final  List  options  =  prefixes.keySet();  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  prefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  prefixes.keySet();	  final    List    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
109	[BUG]  [BUGGY]  final  List  options  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  optionMap.values();	  final    List    options    =    optionMap.list();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
110	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getPrefix());  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getPrefix());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getPrefix());	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
111	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(optionMap,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(optionMap,  newPrefixes);	  newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
112	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  false);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  false);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  false);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
113	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  false);  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  false);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newPrefixes,  false);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  }	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    newPrefixes    =    new    HashSet();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
115	[BUG]  [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.values();  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.values();  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.values();  }	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    newPrefixes.values();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
116	[BUG]  [BUGGY]  if(optionMap  ==  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.values();  }  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  if(optionMap  ==  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.values();  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	if(optionMap  ==  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  newPrefixes.values();  }	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    newPrefixes.values();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
117	[BUG]  [BUGGY]  newAnonymous.addAll(options,  prefixes,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(options,  prefixes,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	newAnonymous.addAll(options,  prefixes,  newPrefixes);	  newAnonymous.addAll(options,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
118	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes!=  null?  prefixes.keySet()  :  newPrefixes;  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes!=  null?  prefixes.keySet()  :  newPrefixes;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  newPrefixes!=  null?  prefixes.keySet()  :  newPrefixes;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    prefixes;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
119	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  minimum,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  minimum,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Option  option  =  options.getOption(name,  minimum,  newPrefixes);	  final    Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
120	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  prefixes.keySet();  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  prefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  options  =  prefixes.keySet();	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance());    final    Set    options    =    prefixes.iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
121	[BUG]  [BUGGY]  final  Set  options  =  new  Prefixes();  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  Prefixes();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  Set  options  =  new  Prefixes();	  final    Set    options    =    prefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
122	[BUG]  [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.class,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.class,  newAnonymous);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  new  TreeMap(ReverseStringComparator.class,  newAnonymous);	  final    SortedMap    options    =    new    TreeMap(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
123	[BUG]  [BUGGY]  final  List  options  =  newPrefixes.toArray(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newPrefixes.toArray(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  List  options  =  newPrefixes.toArray(newPrefixes);	  final    List    options    =    newPrefixes.list();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
124	[BUG]  [BUGGY]  for(final  Iterator  i  =  Prefixes.keySet().iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(final  Iterator  i  =  Prefixes.keySet().iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	for(final  Iterator  i  =  Prefixes.keySet().iterator();  i.hasNext();)  {	  for(final    Iterator    i    =    Prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
125	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance());	  final    Set    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
126	[BUG]  [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  final  Set  options  =  newPrefixes.keySet();  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  final  Set  options  =  newPrefixes.keySet();  }  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli14/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	90	90	1	replace	if(optionMap!=  null)  {  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  options);  final  Set  options  =  newPrefixes.keySet();  }	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    options);    final    Set    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
