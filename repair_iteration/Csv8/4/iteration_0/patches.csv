bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (set.size()  ==  header.length)  {  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]  if  (set.size()  ==  header.length)  {  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	668	668	1	replace	if  (set.size()  ==  header.length)  {	if  (set.size()  !=  header.length)  {  	non-compiled	[CE]  	7	None	replace
2	[BUG]  [BUGGY]  if  (set.size()  >=  header.length)  {  [CE]  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]  if  (set.size()  >=  header.length)  {  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	668	668	1	replace	if  (set.size()  >=  header.length)  {	if  (set.size()  !=  header.length)  {  	non-compiled	[CE]  	7	None	replace
3	[BUG]  [BUGGY]  if  (set.size()!=  header.length  ||  set.size()  ==  header.length)  {  [CE]  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]  if  (set.size()!=  header.length  ||  set.size()  ==  header.length)  {  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	668	668	1	replace	if  (set.size()!=  header.length  ||  set.size()  ==  header.length)  {	if  (set.size()  !=  header.length)  {  	non-compiled	[CE]  	7	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          java.lang.Exception:  Unexpected  exception  [CONTEXT]   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	668	668	1	replace	  	if  (set.size()  !=  header.length)  {  	non-compiled	[CE]  	7	None	replace
5	[BUG]  [BUGGY]  if  (header.size()!=  set.length)  {  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]  if  (header.size()!=  set.length)  {  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	668	668	1	replace	if  (header.size()!=  set.length)  {	if  (set.size()  !=  header.length)  {  	non-compiled	[CE]  	7	None	replace
6	[BUG]  [BUGGY]  if(set.size()!=  header.length  ||  set.size()!=  header.length)  {  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]  if(set.size()!=  header.length  ||  set.size()!=  header.length)  {  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	668	668	1	replace	if(set.size()!=  header.length  ||  set.size()!=  header.length)  {	if  (set.size()  !=  header.length)  {  	non-compiled	[CE]  	7	None	replace
