bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  delimiter.equals(c))  {	  if(escapeChar!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
2	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(escapeChar!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
3	[BUG]  [BUGGY]  if(c!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  delimiter.equals(c))  {	  if(escapeChar!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  commentStart.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(int  i  =  0;  i  <  commentStart.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	for(int  i  =  0;  i  <  commentStart.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
6	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  commentStart.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  commentStart.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  commentStart.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
7	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  delimiter.charValue();  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  delimiter.charValue();  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  delimiter.charValue();  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
8	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
10	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
11	[BUG]  [BUGGY]  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
12	[BUG]  [BUGGY]  while(c!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(c!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
13	[BUG]  [BUGGY]  while(c!=  null  &&  c.charValue()  ==  delimiter)  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.charValue()  ==  delimiter)  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(c!=  null  &&  c.charValue()  ==  delimiter)  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
14	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  char  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  char  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null)  {  for(Character  char  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
15	[BUG]  [BUGGY]  Character  c  =  delimiter.toCharArray();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  delimiter.toCharArray();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  char  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  c  =  delimiter.charValue();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  Character  c  =  delimiter.getCharacter();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  delimiter.getCharacter();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  Character  c  =  delimiter.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  delimiter.toCharBuffer();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  Character  c  =  delimiter.escapeChar();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.escapeChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  delimiter.escapeChar();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  String  escapeChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  escapeChar  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String  escapeChar  =  quoteChar.charValue();	  char    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  char  escapeChar  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  escapeChar  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  escapeChar  =  delimiter.charValue();	  char    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
22	[BUG]  [BUGGY]  char  escapeChar  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  escapeChar  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  escapeChar  =  quoteChar.toCharArray();	  char    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
23	[BUG]  [BUGGY]  Char  escapeChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Char  escapeChar  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Char  escapeChar  =  quoteChar.charValue();	  char    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
24	[BUG]  [BUGGY]  char  escapeChar  =  quoteChar.doubleValue();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  escapeChar  =  quoteChar.doubleValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  escapeChar  =  quoteChar.doubleValue();	  char    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
25	[BUG]  [BUGGY]  if(commentStart!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  escapeChar.equals(c))  {	  if(escapeChar!=    null    &&    escapeChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
26	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  quoteChar.equals(c))  {	  if(c!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  if(c!=  null  &&  character.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  character.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  character.equals(c))  {	  if(c!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  quoteChar.toCharArray();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  quoteChar.toCharBuffer();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  Character  c  =  quoteChar.toLowerCase();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  quoteChar.toLowerCase();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  Character  c  =  quoteChar.trim();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.trim();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  quoteChar.trim();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  if(c  ==  null  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c  ==  null  &&  c.equals(escapeChar))  {	  if(escapeChar    ==    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  if(c  ==  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c  ==  null  &&  escapeChar.equals(c))  {	  if(escapeChar    ==    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escapeChar.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escapeChar.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (delimiter!=  null  &&  escapeChar.equals(escapeChar))  {	  if    (escape!=    null    &&    escapeChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
36	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  delimiter.equals(escapeChar))  {	  if    (escape!=    null    &&    escapeChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
37	[BUG]  [BUGGY]  if(c!=  delimiter  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  &&  escapeChar.equals(c))  {	  if(delimiter!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  if(c!=  escapeChar  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  &&  delimiter.equals(c))  {	  if(delimiter!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  if  (c!=  null  &&  escape.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  escape.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (c!=  null  &&  escape.equals(c)||  c!=  delimiter)  {	  if    (escape!=    null    &&    escape.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
40	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape.equals(c)||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape.equals(c)||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  escape.equals(c)||  c  ==  delimiter)  {	  if    (escape!=    null    &&    escape.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
41	[BUG]  [BUGGY]  if  (escape  ==  null  &&  escape.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  escape.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape  ==  null  &&  escape.equals(c)||  c!=  delimiter)  {	  if    (escape!=    null    &&    escape.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
42	[BUG]  [BUGGY]  if(commentStart!=  null  &&  commentStart.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  commentStart.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  commentStart.equals(c))  {	  if(escape!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
43	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
44	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
45	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
46	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
47	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c  ==  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
48	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
49	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  quoteChar.equals(c))  {	  if(escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  quoteChar.equals(commentStart))  {	  if(escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  quoteChar.equals(commentStart))  {	  if(escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
52	[BUG]  [BUGGY]  if(escape  ==  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape  ==  null  &&  quoteChar.equals(c))  {	  if(escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  c.equals(delimiter))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
55	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  c.equals(commentStart))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
56	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  c.equals(quoteChar))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
57	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(escape))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  c.equals(escape))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
58	[BUG]  [BUGGY]  if(c  ==  null  &&  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c  ==  null  &&  c.equals(delimiter))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
59	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(recordSeparator))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(recordSeparator))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  c.equals(recordSeparator))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
60	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c  ==  null  &&  quoteChar.equals(commentStart))  {	  if(escape    ==    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
62	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
63	[BUG]  [BUGGY]  while(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
64	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
65	[BUG]  [BUGGY]  while(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
66	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  commentStart.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  commentStart.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  commentStart.equals(delimiter))  {	  if(delimiter!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
67	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.equals(c))  {	  if(delimiter!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
68	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  quoteChar.equals(escapeChar))  {	  if(delimiter!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
69	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null  &&  quoteChar.equals(commentStart))  {	  if(delimiter!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
70	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(escape))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.equals(escape))  {	  if(escape!=    null    &&    commentStart.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
71	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  quoteChar.equals(delimiter))  {	  if(escape!=    null    &&    commentStart.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
72	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.equals(commentStart))  {	  if(escape!=    null    &&    commentStart.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
73	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue();  set.add(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue();  set.add(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  delimiter.charValue();  set.add(c);	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
74	[BUG]  [BUGGY]  set.add(quoteChar);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  set.add(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	set.add(quoteChar);	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
75	[BUG]  [BUGGY]  Set  <  Character>  set  =  set.iterator().next();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  set.iterator().next();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Set  <  Character>  set  =  set.iterator().next();	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
76	[BUG]  [BUGGY]  char  c  =  quoteChar.charValue();  set.add(c);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  quoteChar.charValue();  set.add(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  c  =  quoteChar.charValue();  set.add(c);	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  Set  <  Character>  set  =  set.get(quoteChar);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  set.get(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Set  <  Character>  set  =  set.get(quoteChar);	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  Set  <  Character>  set  =  set.keySet();  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  set.keySet();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Set  <  Character>  set  =  set.keySet();	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
79	[BUG]  [BUGGY]  String  c  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  c  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String  c  =  quoteChar.charValue();	  char    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
80	[BUG]  [BUGGY]  char  c  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  c  =  quoteChar.toCharArray();	  char    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
81	[BUG]  [BUGGY]  char  c  =  quoteChar.getValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  quoteChar.getValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  c  =  quoteChar.getValue();	  char    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
82	[BUG]  [BUGGY]  char  c  =  quoteChar.trim();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  quoteChar.trim();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  c  =  quoteChar.trim();	  char    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
83	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  ||  c!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  if(c!=  delimiter  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
86	[BUG]  [BUGGY]  if(c!=  escapeChar  ||  delimiter!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  ||  delimiter!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  ||  delimiter!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
87	[BUG]  [BUGGY]  if(c!=  escapeChar  ||  c!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  ||  c!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  ||  c!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
88	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  ||  c!=  null  &&  c.equals(escapeChar))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
89	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  quoteChar.toCharArray();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
90	[BUG]  [BUGGY]  Character  escapeChar  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  c.charValue();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
91	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.escapeChar();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.escapeChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  quoteChar.escapeChar();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
92	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  quoteChar.toCharBuffer();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
93	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.trim();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.trim();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  quoteChar.trim();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
94	[BUG]  [BUGGY]  if(c!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
95	[BUG]  [BUGGY]  if(escape!=  null  &&  escapeChar.equals(c)||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escapeChar.equals(c)||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  escapeChar.equals(c)||  c  ==  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
96	[BUG]  [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape  ==  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
97	[BUG]  [BUGGY]  if(c!=  escapeChar  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  &&  escapeChar.equals(c)||  c!=  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
98	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter.equals(c)||  c!=  escapeChar)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter.equals(c)||  c!=  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  delimiter.equals(c)||  c!=  escapeChar)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
99	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar.equals(c)||  c!=  escapeChar)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar.equals(c)||  c!=  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  escapeChar.equals(c)||  c!=  escapeChar)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
100	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  1]);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  +  1]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
101	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  -  1]);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  -  1]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
102	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]  +  1);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]  +  1);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ]  +  1);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
103	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]));  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]));  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ]));	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
104	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ],  quoteChar);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ],  quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ],  quoteChar);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
105	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  2]);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  2]);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  +  2]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
106	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  commentStart.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  commentStart.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  commentStart.equals(c))  {	  if(escapeChar!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
107	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.equals(escape))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (delimiter!=  null  &&  quoteChar.equals(escape))  {	  if    (delimiter!=    null    &&    escape.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
108	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  quoteChar.toCharArray();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
109	[BUG]  [BUGGY]  Character  delimiter  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  c.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
110	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  quoteChar.toCharBuffer();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
111	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  quoteChar.delimiter();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
112	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.trim();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.trim();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  quoteChar.trim();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
113	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.escapeChar();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.escapeChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  quoteChar.escapeChar();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
114	[BUG]  [BUGGY]  if  (escape!=  null  &&  commentStart.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  commentStart.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  commentStart.equals(c))  {	  if    (escape!=    null    &&    commentStart.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
115	[BUG]  [BUGGY]  if(c!=  delimiter  &&  escape!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  escape!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  &&  escape!=  null  &&  delimiter.equals(c))  {	  if(escape!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
116	[BUG]  [BUGGY]  if(delimiter!=  null  &&  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  c.equals(delimiter))  {	  if(escape!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
117	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c  ==  't')  {	  if(escape!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
118	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.equals(delimiter))  {	  if(delimiter!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
119	[BUG]  [BUGGY]  if(commentStart!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  delimiter.equals(c))  {	  if(delimiter!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
120	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  commentStart.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  commentStart.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null  &&  commentStart.equals(delimiter))  {	  if(delimiter!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
121	[BUG]  [BUGGY]  if(c!=  delimiter  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  &&  delimiter.equals(c))  {	  if(delimiter!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
122	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  quoteChar.equals(c))  {	  if(delimiter!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
123	[BUG]  [BUGGY]  if(c!=' "'  ||  c  ==  '')  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=' "'  ||  c  ==  '')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=' "'  ||  c  ==  '')  {	  if(delimiter!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
124	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c!=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c!=  't')  {	  if(delimiter!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
125	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  quoteChar.equals(delimiter))  {	  if(delimiter!=    null    &&    escapeChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
126	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(delimiter))  {	  if(delimiter!=    null    &&    escapeChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
127	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  delimiter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  delimiter.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  delimiter.equals(delimiter))  {	  if(delimiter!=    null    &&    escapeChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
128	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  c.equals(escapeChar))  {	  if(c!=    null    &&    c.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
129	[BUG]  [BUGGY]  if(delimiter!=  null  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  c.equals(escapeChar))  {	  if(c!=    null    &&    c.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
130	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  ||  c.equals(escapeChar))  {	  if(c!=    null    &&    c.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
131	[BUG]  [BUGGY]  if(c!=  escapeChar  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {	  if(escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
132	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(c)||  c.equals(delimiter))  {	  if(escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
133	[BUG]  [BUGGY]  if  (c!=  null  &&  commentStart.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  commentStart.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (c!=  null  &&  commentStart.equals(c))  {	  if    (c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
134	[BUG]  [BUGGY]  if(c!=  escapeChar  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  &&  quoteChar.equals(c))  {	  if(c!=    escapeChar    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
135	[BUG]  [BUGGY]  if(c!=  escapeChar  ||  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  ||  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  ||  c.equals(escapeChar))  {	  if(c!=    escapeChar    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
136	[BUG]  [BUGGY]  if(c!=  commentStart  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  commentStart  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  commentStart  &&  escapeChar.equals(c))  {	  if(c!=    escapeChar    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
137	[BUG]  [BUGGY]  if(c!=  escapeChar  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  escapeChar  &&  c.equals(escapeChar))  {	  if(c!=    escapeChar    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
138	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.toCharArray();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter.toCharArray();	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
139	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.escapeChar();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.escapeChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter.escapeChar();	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
140	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.charValue()  +  1;  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.charValue()  +  1;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter.charValue()  +  1;	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
141	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter.toCharBuffer();	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
142	[BUG]  [BUGGY]  While(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	While(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
143	[BUG]  [BUGGY]  while(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
144	[BUG]  [BUGGY]  while(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
145	[BUG]  [BUGGY]  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
146	[BUG]  [BUGGY]  if(c!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
147	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
148	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
149	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null  &&  escapeChar.equals(c))  {	  if(delimiter    ==    null    &&    escapeChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
150	[BUG]  [BUGGY]  String[]  header  =  set.get(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(c);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
151	[BUG]  [BUGGY]  String[]  header  =  set.get(commentStart);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(commentStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(commentStart);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
152	[BUG]  [BUGGY]  String[]  header  =  set.get(quoteChar)+  1;  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(quoteChar)+  1;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(quoteChar)+  1;	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
153	[BUG]  [BUGGY]  String[]  header  =  set.get(quoteChar,  c);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(quoteChar,  c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(quoteChar,  c);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
154	[BUG]  [BUGGY]  String[]  header  =  set.get(quoteChar,  delimiter);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(quoteChar,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(quoteChar,  delimiter);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
155	[BUG]  [BUGGY]  String[]  header  =  set.get(escapeChar);  [CE]  illegal  start  of  type  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(escapeChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(escapeChar);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
156	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.escapeCharValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.escapeCharValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter.escapeCharValue();	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
157	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.getCharValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.getCharValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter.getCharValue();	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
158	[BUG]  [BUGGY]  if(escape!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
159	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  delimiter!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
160	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {	  if(c!=    delimiter    ||    escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
161	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  c.equals(delimiter))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
162	[BUG]  [BUGGY]  if(delimiter!=  null  &&  c.equals(escape))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  c.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  c.equals(escape))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
163	[BUG]  [BUGGY]  if(c  ==  null  &&  c.equals(escape))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  c.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c  ==  null  &&  c.equals(escape))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
164	[BUG]  [BUGGY]  Set  <  String>  set  =  set.add(quoteChar);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  String>  set  =  set.add(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Set  <  String>  set  =  set.add(quoteChar);	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
165	[BUG]  [BUGGY]  Set  <  String>  set  =  set.keySet();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  String>  set  =  set.keySet();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Set  <  String>  set  =  set.keySet();	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
166	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  delimiter.equals(delimiter))  {	  if    (delimiter!=    null    &&    escape.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
167	[BUG]  [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape  ==  null  &&  escapeChar.equals(delimiter))  {	  if(delimiter!=    null    &&    escapeChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
168	[BUG]  [BUGGY]  if(c!=  'e'  ||  c  ==  'E')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'e'  ||  c  ==  'E')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'e'  ||  c  ==  'E')  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
169	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  c  ==  'r')  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
170	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
171	[BUG]  [BUGGY]  if(c!=  '.')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  '.')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  '.')  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
172	[BUG]  [BUGGY]  if(c!=' "')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=' "')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=' "')  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
173	[BUG]  [BUGGY]  if(c!=  '')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  '')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  '')  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
174	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(escape))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (delimiter!=  null  &&  delimiter.equals(escape))  {	  if    (escape!=    null    &&    delimiter.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
175	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  c.equals(escapeChar))  {	  if(c!=    null    &&    c.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
176	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.escapeCharValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.escapeCharValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  quoteChar.escapeCharValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
177	[BUG]  [BUGGY]  Character  delimiter  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  delimiter  =  character.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
178	[BUG]  [BUGGY]  if  (c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter)  {	  if    (delimiter!=    null    &&    escape.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
179	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue()  +  1;  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue()  +  1;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  delimiter.charValue()  +  1;	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
180	[BUG]  [BUGGY]  Character  c  =  DEFAULT.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  DEFAULT.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  DEFAULT.charValue();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
181	[BUG]  [BUGGY]  if(delimiter  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
182	[BUG]  [BUGGY]  if(quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
183	[BUG]  [BUGGY]  if(commentStart!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
184	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.escapeCharValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.escapeCharValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  quoteChar.escapeCharValue();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
185	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  quoteChar.toChars();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
186	[BUG]  [BUGGY]  if(escape  ==  null  &&  delimiter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  delimiter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape  ==  null  &&  delimiter.equals(commentStart))  {	  if(escape    ==    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
187	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(escapeChar)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(escapeChar)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  c.equals(escapeChar)||  c!=  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
188	[BUG]  [BUGGY]  if(escape!=  null  &&  escapeChar.equals(delimiter)||  c!=  escapeChar)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escapeChar.equals(delimiter)||  c!=  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  escapeChar.equals(delimiter)||  c!=  escapeChar)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
189	[BUG]  [BUGGY]  if(escape!=  null  &&  escapeChar.equals(c)||  c  >=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escapeChar.equals(c)||  c  >=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  escapeChar.equals(c)||  c  >=  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
190	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ])+  1;  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ])+  1;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ])+  1;	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
191	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  3]);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  3]);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.toArray(new  String[set.size()  +  3]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
192	[BUG]  [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape  ==  null  &&  escapeChar.equals(escapeChar))  {	  if(escape!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
193	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals( " "))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  delimiter.equals( " "))  {	  if(delimiter!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
194	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  delimiter.charValue())  {	  if(delimiter!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
195	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(labelValue))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(labelValue))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  delimiter.equals(labelValue))  {	  if(delimiter!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
196	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  escapeChar  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  escapeChar  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c!=  escapeChar  &&  c.equals(escapeChar))  {	  if(c!=    escapeChar    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
197	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {	  if(escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
198	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(c)||  c  ==  delimiter)  {	  if(escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
199	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  EXCEL  &&  escapeChar!=  null  &&  escapeChar.equals(c))  {	  if(escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
200	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c!=  DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(c)||  c!=  DEFAULT)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(c)||  c!=  DEFAULT)  {	  if(escapeChar!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
201	[BUG]  [BUGGY]  String[]  header  =  set.get(escape);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(escape);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
202	[BUG]  [BUGGY]  String[]  header  =  set.get(quoteChar  +  1);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(quoteChar  +  1);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(quoteChar  +  1);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
203	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(c))  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
204	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  cur[i];  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  cur[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  cur[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
205	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  new  HashSet  <  String>();  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  new  HashSet  <  String>();  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  new  HashSet  <  String>();  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  null;  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  null;  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  null;  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
207	[BUG]  [BUGGY]  Char  c  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Char  c  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Char  c  =  quoteChar.charValue();	  char    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
208	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c!=  't')  {	  if(escape!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
209	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  'n'  ||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  'n'  ||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c!=  'n'  ||  c!=  delimiter)  {	  if(escape!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
210	[BUG]  [BUGGY]  if  (c!=  null  &&  c.equals(escape)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  c.equals(escape)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (c!=  null  &&  c.equals(escape)||  c!=  delimiter)  {	  if    (escape!=    null    &&    escape.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
211	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape.equals(c)||  c  >=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape.equals(c)||  c  >=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  escape.equals(c)||  c  >=  delimiter)  {	  if    (escape!=    null    &&    escape.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
212	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  delimiter.equals(escapeChar))  {	  if(escapeChar!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
213	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(char))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(char))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(char))  {	  if(escapeChar!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
214	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(prettyPrinter))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(prettyPrinter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(prettyPrinter))  {	  if(escapeChar!=    null    &&    commentStart.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
215	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  CSVFormat.NONE)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  CSVFormat.NONE)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  escape  ==  CSVFormat.NONE)  {	  if    (c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
216	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  CSVFormat.NONE)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  CSVFormat.NONE)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  escape!=  CSVFormat.NONE)  {	  if    (c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
217	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (delimiter!=  null  &&  c.equals(commentStart))  {	  if    (c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
218	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape.charValue().equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape.charValue().equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (escape!=  null  &&  escape.charValue().equals(c))  {	  if    (c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
219	[BUG]  [BUGGY]  Character  c  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  character.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
220	[BUG]  [BUGGY]  Character  c  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  quoteChar.toChars();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
221	[BUG]  [BUGGY]  Character  c  =  quoteChar.escapeChar();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.escapeChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  quoteChar.escapeChar();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
222	[BUG]  [BUGGY]  Character  c  =  writer.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  writer.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  writer.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
223	[BUG]  [BUGGY]  if(delimiter!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
224	[BUG]  [BUGGY]  For(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  For(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	For(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
225	[BUG]  [BUGGY]  Deseparator  <  Character>  delimiter  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Deseparator  <  Character>  delimiter  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Deseparator  <  Character>  delimiter  =  delimiter.charValue();	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
226	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
227	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
228	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
229	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
230	[BUG]  [BUGGY]  if(c!=' "'  &&  delimiter!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=' "'  &&  delimiter!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=' "'  &&  delimiter!=  null  &&  delimiter.equals(c))  {	  if(delimiter!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
231	[BUG]  [BUGGY]  if(c!=  'n'  ||  delimiter!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  delimiter!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  ||  delimiter!=  null  &&  delimiter.equals(c))  {	  if(delimiter!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
232	[BUG]  [BUGGY]  if(escape  ==  null  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape  ==  null  &&  c.equals(escapeChar))  {	  if(c!=    null    &&    c.equals(escapeChar))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
233	[BUG]  [BUGGY]  if  (c!=  delimiter  &&  escape.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  &&  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (c!=  delimiter  &&  escape.equals(c))  {	  if    (delimiter!=    null    &&    escape.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
234	[BUG]  [BUGGY]  if(c!=  null  &&  commentStart.charValue().equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  commentStart.charValue().equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  commentStart.charValue().equals(c))  {	  if    (c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
235	[BUG]  [BUGGY]  Character  c  =  commentStart.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  commentStart.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  c  =  commentStart.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
236	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.charValue().equals(quoteChar))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
237	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
238	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.equals(quoteChar))  {	  if(delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
239	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.charValue().equals(delimiter))  {	  if(delimiter!=    null    &&    escapeChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
240	[BUG]  [BUGGY]  if(c!=  delimiter  &&  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  &&  c.equals(delimiter))  {	  if(delimiter!=    null    &&    delimiter.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
241	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
242	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
243	[BUG]  [BUGGY]  if  (c!=' "'  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=' "'  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if  (c!=' "'  &&  escapeChar.equals(c))  {	  if    (escape    ==    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
244	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.charValue().equals(c))  {	  if(delimiter!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
245	[BUG]  [BUGGY]  if(c!=  'n'  &&  c!=  escapeChar  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  &&  c!=  escapeChar  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'n'  &&  c!=  escapeChar  &&  c.equals(escapeChar))  {	  if(c!=    escapeChar    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
246	[BUG]  [BUGGY]  if(c!=  'escape'  &&  c.equals(escapeChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'escape'  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  'escape'  &&  c.equals(escapeChar))  {	  if(c!=    escapeChar    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
247	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter!=  null?  delimiter.charValue()  :  c;  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter!=  null?  delimiter.charValue()  :  c;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter!=  null?  delimiter.charValue()  :  c;	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
248	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter!=  null?  quoteChar.charValue()  :  c.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter!=  null?  quoteChar.charValue()  :  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  delimiter!=  null?  quoteChar.charValue()  :  c.charValue();	  Character    escapeChar    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
249	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(escapeChar)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(escapeChar)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  c.equals(escapeChar)||  c!=  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
250	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escape!=  null  &&  quoteChar.equals(quoteChar))  {	  if(escape    ==    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
251	[BUG]  [BUGGY]  Set  <  String>  set  =  set.iterator().next();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  String>  set  =  set.iterator().next();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Set  <  String>  set  =  set.iterator().next();	  Character    c    =    quoteChar.charValue();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
252	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escapeChar!=  null  &&  escapeChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escapeChar!=  null  &&  escapeChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null  &&  escapeChar!=  null  &&  escapeChar.equals(commentStart))  {	  if(escapeChar!=    null    &&    escapeChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
253	[BUG]  [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escapeChar!=  null  &&  escapeChar.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(escapeChar!=  null  &&  escapeChar.equals(ceilingChar))  {	  if(escapeChar!=    null    &&    escapeChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
254	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +   "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +   "') ");  }	  if(quoteChar!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
255	[BUG]  [BUGGY]  CharEscapeChar  escapeChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  CharEscapeChar  escapeChar  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	CharEscapeChar  escapeChar  =  quoteChar.charValue();	  char    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
256	[BUG]  [BUGGY]  Char  escapeChar  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Char  escapeChar  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Char  escapeChar  =  delimiter.charValue();	  char    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
257	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
258	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  for(int  i  =  0;  i  <  set.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
259	[BUG]  [BUGGY]  if(commentStart!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(commentStart!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  set[i];  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
260	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  c;  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  c;  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  quoteChar.length;  ++i)  {  set[i]  =  c;  }	  if(quoteChar!=    null)    {    for(int    i    =    0;    i    <    quoteChar.length;    ++i)    {    set[i]    =    set[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
261	[BUG]  [BUGGY]  if(c!=  null  &&  c.startsWith(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.startsWith(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  c.startsWith(delimiter))  {	  if(c!=    null    &&    c.equals(escape))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
262	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.charValue().equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null  &&  commentStart.charValue().equals(commentStart))  {	  if    (escape!=    null    &&    delimiter.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
263	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  c.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
264	[BUG]  [BUGGY]  if(delimiter  ==  null)  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null)  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter  ==  null)  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }	  if(quoteChar!=    null    &&    quoteChar.equals(commentStart))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
265	[BUG]  [BUGGY]  while(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
266	[BUG]  [BUGGY]  while(c!=  null  &&  c  ==  delimiter.charValue())  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c  ==  delimiter.charValue())  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	while(c!=  null  &&  c  ==  delimiter.charValue())  {  for(Character  c  :  c.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
267	[BUG]  [BUGGY]  if(delimiter!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(delimiter!=  null)  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
268	[BUG]  [BUGGY]  if(c!=  null  &&  c  ==  delimiter.charValue())  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c  ==  delimiter.charValue())  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  null  &&  c  ==  delimiter.charValue())  {  for(Character  c  :  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    for(Character    c    :    delimiter.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
269	[BUG]  [BUGGY]  char  c  =  commentStart.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  commentStart.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	char  c  =  commentStart.charValue();	  char    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
270	[BUG]  [BUGGY]  Char  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Char  c  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Char  c  =  delimiter.charValue();	  char    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
271	[BUG]  [BUGGY]  String[]  header  =  quoteChar.get(quoteChar);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteChar.get(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  quoteChar.get(quoteChar);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
272	[BUG]  [BUGGY]  String[]  header  =  set.get(categoryChar);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.get(categoryChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	String[]  header  =  set.get(categoryChar);	  String[]    header    =    set.get(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
273	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escapeChar  ==  null  &&  escapeChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escapeChar  ==  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	if(c!=  delimiter  ||  escapeChar  ==  null  &&  escapeChar.equals(c))  {	  if(escapeChar    ==    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
274	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.escapeChar(c);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.escapeChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.4082482904638631	656	656	1	replace	Character  escapeChar  =  quoteChar.escapeChar(c);	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
