bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(c,  escape);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(c,  escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapedChar(c,  escape);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
2	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.getEscapedChar(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.getEscapedChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quoteChar.getEscapedChar(c);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
3	[BUG]  [BUGGY]  Character  escapeChar  =  quoteSurroundingSpaces.getEscapedChar(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteSurroundingSpaces.getEscapedChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quoteSurroundingSpaces.getEscapedChar(c);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapedChar(c,  delimiter);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(c,  escapeChar);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(c,  escapeChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapedChar(c,  escapeChar);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
6	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(quoteChar);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapedChar(quoteChar);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
7	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteChar.getChar())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
8	[BUG]  [BUGGY]  if  (escape!=  null  ||  escape  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  escape  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  escape  ==  delimiter.getChar())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
9	[BUG]  [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  delimiter  ==  quoteChar.getValue())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  if  (escape  ==  null  ||  delimiter  ==  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  ||  delimiter  ==  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  ||  delimiter  ==  quoteChar.getValue())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteChar.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
12	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  delimiter.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
13	[BUG]  [BUGGY]  if  (escape!=  null  ||  escape  ==  delimiter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  escape  ==  delimiter.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  escape  ==  delimiter.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
14	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.getDelimiter(c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
15	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  escape);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c,  escape);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
16	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c,  delimiter);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
17	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c,  c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
18	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  false);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  false);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c,  false);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
19	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  quoteChar.length())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
20	[BUG]  [BUGGY]  if(escape!=  null  &&  escape  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  escape  ==  quoteChar.length())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  if(escape!=  null  &&  escape!=  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape!=  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  escape!=  delimiter.length())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
22	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  quoteChar.charValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
23	[BUG]  [BUGGY]  if(escape!=  null  ||  escape  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  ||  escape  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  ||  escape  ==  delimiter.length())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
24	[BUG]  [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  delimiter  ==  quoteChar.length())  {	  if    (escape!=    null    ||    delimiter    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
26	[BUG]  [BUGGY]  parseChar(c,  delimiter))  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  parseChar(c,  delimiter))  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	parseChar(c,  delimiter))  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
27	[BUG]  [BUGGY]  QuoteDelimiter  delimiter  =  quoteChar.delimiter();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  QuoteDelimiter  delimiter  =  quoteChar.delimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	QuoteDelimiter  delimiter  =  quoteChar.delimiter();	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
28	[BUG]  [BUGGY]  if  (escape  ==  null  &&  escape  ==  header.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  escape  ==  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  escape  ==  header.length())  {	  if    (escape!=    null    &&    escape    ==    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
29	[BUG]  [BUGGY]  if  (escape!=  null  ||  escape  ==  header.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  escape  ==  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  escape  ==  header.length())  {	  if    (escape!=    null    &&    escape    ==    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  >=  header.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  >=  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  >=  header.length())  {	  if    (escape!=    null    &&    escape    ==    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.charValue())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  delimiter  ==  quoteChar.length())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  delimiter.getChar())  {	  if    (delimiter!=    null    &&    escape    ==    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
34	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  quoteChar.getChar())  {	  if    (delimiter!=    null    &&    escape    ==    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
35	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  quoteChar.length())  {	  if    (delimiter!=    null    &&    escape    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
36	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
37	[BUG]  [BUGGY]  if(escape!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
38	[BUG]  [BUGGY]  if(escape!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
39	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
40	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
41	[BUG]  [BUGGY]  ||  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  ||  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	||  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
42	[BUG]  [BUGGY]  if  (escape!=  null  ||  escape!=  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  escape!=  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  escape!=  delimiter.length())  {	  if    (delimiter!=    null    &&    escape!=    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
43	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter!=  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter!=  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter!=  delimiter.length())  {	  if    (delimiter!=    null    &&    escape!=    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
44	[BUG]  [BUGGY]  set.add(c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  set.add(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	set.add(c);	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
45	[BUG]  [BUGGY]  Set  <  Character>  set  =  set.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  set.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Set  <  Character>  set  =  set.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  String[]  header  =  quoteChar.getHeaderRecords();  set.add(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteChar.getHeaderRecords();  set.add(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteChar.getHeaderRecords();  set.add(c);	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  Set  set.add(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Set  set.add(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Set  set.add(c);	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  Set  <  String>  set  =  set.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Set  <  String>  set  =  set.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Set  <  String>  set  =  set.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords();  set.add(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords();  set.add(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quotePolicy.getHeaderRecords();  set.add(c,  delimiter);	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentChar();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCurrentChar();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getCurrentChar();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  Character  c  =  delimiter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  delimiter.getCurrentCharacter();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentCharIndex();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCurrentCharIndex();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getCurrentCharIndex();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  Character  c  =  quoteChar.getSurroundingSpaces();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getSurroundingSpaces();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getSurroundingSpaces();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  Character  c  =  quoteChar.getEscapedChar();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getEscapedChar();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getEscapedChar();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
55	[BUG]  [BUGGY]  Character  c  =  quoteChar.delimiter();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.delimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.delimiter();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.length())  {	  if    (escape!=    null    &&    escape    ==    quoteEmptyLines.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.length)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.length)  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.length)  {	  if    (escape!=    null    &&    escape    ==    quoteEmptyLines.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.size())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.size())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.size())  {	  if    (escape!=    null    &&    escape    ==    quoteEmptyLines.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.stringValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.stringValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.stringValue())  {	  if    (escape!=    null    &&    escape    ==    quoteEmptyLines.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  delimiter  ==  quoteChar.toString())  {	  if    (escape!=    null    ||    delimiter    ==    escape.toString())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  if  (escape  ==  null  ||  delimiter  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  ||  delimiter  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  ||  delimiter  ==  quoteChar.toString())  {	  if    (escape!=    null    ||    delimiter    ==    escape.toString())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
62	[BUG]  [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  escape.toString())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  escape.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  delimiter  ==  escape.toString())  {	  if    (escape!=    null    ||    delimiter    ==    escape.toString())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
63	[BUG]  [BUGGY]  if(escape!=  null  &&  escape!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  escape!=  delimiter.charValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
64	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  quoteChar.getChar())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
65	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter!=  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter!=  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter!=  delimiter.getChar())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
66	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.delimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
67	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.delimiter(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.delimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.delimiter(c);	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
68	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.getSurroundingSpaces();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.getSurroundingSpaces();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.getSurroundingSpaces();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.removeDelimiter();  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.removeDelimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.removeDelimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  quoteChar.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
72	[BUG]  [BUGGY]  if(escape!=  null  &&  escape!=  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape!=  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  escape!=  delimiter.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
73	[BUG]  [BUGGY]  if(escape!=  null  &&  escape  ==  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape  ==  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  escape  ==  quoteChar.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
74	[BUG]  [BUGGY]  if(escape!=  null  ||  escape  ==  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  ||  escape  ==  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  ||  escape  ==  delimiter.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
75	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {	  if    (escape!=    null    &&    delimiter    ==    escape.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
76	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.toCharArray();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.toCharBuffer();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  Character  delimiter  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  c.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
79	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.byteValue();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.byteValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.byteValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.getChar();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.getChar();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.getChar();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  if  (escape!=  null  ||  delimiter  ==  escapeChar.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  delimiter  ==  escapeChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  delimiter  ==  escapeChar.toString())  {	  if    (escape!=    null    &&    delimiter    ==    escapeChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
82	[BUG]  [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  escapeChar.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  escapeChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  delimiter  ==  escapeChar.toString())  {	  if    (escape!=    null    &&    delimiter    ==    escapeChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
83	[BUG]  [BUGGY]  if  (escape  ==  null  &&  escape!=  header.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  escape!=  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  escape!=  header.length())  {	  if    (escape!=    null    &&    escape!=    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
84	[BUG]  [BUGGY]  if  (escape!=  null  ||  escape!=  header.length())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  escape!=  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  escape!=  header.length())  {	  if    (escape!=    null    &&    escape!=    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
85	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.getCharValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteChar.getCharValue())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
86	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  delimiter.getCharValue())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
87	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
88	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
89	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
90	[BUG]  [BUGGY]  if(escape!=  null)  {  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null)  {  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
91	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  quoteChar.getChar())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
92	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getCSV())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getCSV())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.getCSV())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
93	[BUG]  [BUGGY]  if  (escape!=  null  ||  escape  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  escape  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  escape  ==  quoteChar.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
94	[BUG]  [BUGGY]  if  (escape  ==  null  &&  escape  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  escape  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  escape  ==  delimiter.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
95	[BUG]  [BUGGY]  if  (delimiter!=  null  ||  escape  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  ||  escape  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  ||  escape  ==  delimiter.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
96	[BUG]  [BUGGY]  if  (escape  ==  null  ||  escape  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  ||  escape  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  ||  escape  ==  quoteChar.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
97	[BUG]  [BUGGY]  if  (escape  ==  null  &&  escape  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  escape  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  escape  ==  quoteChar.charValue())  {	  if    (escape!=    null    &&    escape    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
98	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteChar.toString())  {	  if    (escape!=    null    &&    escape    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
99	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
100	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(quoteChar);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCharacter(quoteChar);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
101	[BUG]  [BUGGY]  Character  c  =  delimiter.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  delimiter.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
102	[BUG]  [BUGGY]  Character  c  =  set.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  set.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  set.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
103	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(quote);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(quote);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCharacter(quote);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
104	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCharacter(c,  delimiter);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
105	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(c,  escape);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(c,  escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapeChar(c,  escape);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
106	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.getEscapeChar(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.getEscapeChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quoteChar.getEscapeChar(c);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
107	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(c,  escapeChar);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(c,  escapeChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapeChar(c,  escapeChar);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  Character  escapeChar  =  quoteSurroundingSpaces.getEscapeChar(c);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteSurroundingSpaces.getEscapeChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quoteSurroundingSpaces.getEscapeChar(c);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
109	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(quoteChar);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapeChar(quoteChar);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
110	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapeChar(c,  delimiter);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
111	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(quotePolicy);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(quotePolicy);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.getDelimiter(quotePolicy);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
112	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(quote);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(quote);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.getDelimiter(quote);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
113	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  c);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
114	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  escape);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  escape);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
115	[BUG]  [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  delimiter  ==  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  delimiter  ==  quoteChar.getChar())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
116	[BUG]  [BUGGY]  if  (escape  ==  null  ||  delimiter  ==  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  ||  delimiter  ==  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  ||  delimiter  ==  quoteChar.getChar())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  escape.getChar())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  escape.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  delimiter  ==  escape.getChar())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
118	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  quoteChar.getValue())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
119	[BUG]  [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  delimiter  ==  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  delimiter  ==  quoteChar.getValue())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  quoteChar.getValue())  {	  if    (delimiter!=    null    &&    escape!=    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
121	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter!=  escape.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter!=  escape.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter!=  escape.getValue())  {	  if    (delimiter!=    null    &&    escape!=    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
122	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  quotePolicy.getValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  quotePolicy.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  quotePolicy.getValue())  {	  if    (delimiter!=    null    &&    escape!=    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
123	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escapeChar.getValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escapeChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  escapeChar.getValue())  {	  if    (escape!=    null    &&    delimiter    ==    escapeChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
124	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escapeChar.length())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escapeChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  escapeChar.length())  {	  if    (escape!=    null    &&    delimiter    ==    escapeChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
125	[BUG]  [BUGGY]  if  (escape  ==  null  &&  escape  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  escape  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  &&  escape  ==  quoteChar.length())  {	  if    (escape!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
126	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  description.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  description.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  description.getCharValue())  {	  if    (escape!=    null    &&    escape    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
127	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape  ==  description.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape  ==  description.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape  ==  description.charValue())  {	  if    (escape!=    null    &&    escape    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
128	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  description.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  description.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  description.toString())  {	  if    (escape!=    null    &&    escape    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
129	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  description.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  description.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  description.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
130	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  description.getChar())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  description.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  description.getChar())  {	  if    (escape!=    null    &&    escape    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
131	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  delimiter.toString())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
132	[BUG]  [BUGGY]  if  (escape!=  null  ||  escape  ==  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  escape  ==  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  escape  ==  delimiter.toString())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
133	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  delimiter.getValue())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
134	[BUG]  [BUGGY]  String[]  header  =  quoteChar.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteChar.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteChar.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
135	[BUG]  [BUGGY]  String[]  header  =  quoteHeaderRecord.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteHeaderRecord.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteHeaderRecord.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
136	[BUG]  [BUGGY]  String[]  header  =  quoteSurroundingSpaces.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteSurroundingSpaces.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteSurroundingSpaces.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
137	[BUG]  [BUGGY]  String[]  header  =  quoteLines.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteLines.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteLines.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
138	[BUG]  [BUGGY]  String[]  header  =  quotePolicy.getRecords();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quotePolicy.getRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quotePolicy.getRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
139	[BUG]  [BUGGY]  String[]  header  =  quoteDelimiter.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteDelimiter.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteDelimiter.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
140	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape  ==  quoteChar.toString())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
141	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  quoteChar.toString())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
142	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter!=  escape.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter!=  escape.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter!=  escape.getChar())  {	  if    (delimiter!=    null    &&    escape!=    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
143	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  quotePolicy.getChar())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  quotePolicy.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  quotePolicy.getChar())  {	  if    (delimiter!=    null    &&    escape!=    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
144	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  delimiter.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
145	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.toCharArray();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
146	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.toCharBuffer();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
147	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCharacter();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getCharacter();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
148	[BUG]  [BUGGY]  Character  c  =  quoteChar.trim();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.trim();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.trim();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
149	[BUG]  [BUGGY]  Character  c  =  quoteChar.getChar();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getChar();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getChar();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
150	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(quoteChar);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCSV(quoteChar);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
151	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCSV(c);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCSV(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getCSV(c);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
152	[BUG]  [BUGGY]  Character  c  =  set.getCSV(c);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  set.getCSV(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  set.getCSV(c);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
153	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(defaultCharacter);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(defaultCharacter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCSV(defaultCharacter);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
154	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(defaultChar);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(defaultChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCSV(defaultChar);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
155	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(context);  [CE]  illegal  start  of  type  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(context);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCSV(context);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
156	[BUG]  [BUGGY]  Quote  other  =  quoteChar.getFormat();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  quoteChar.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  quoteChar.getFormat();	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
157	[BUG]  [BUGGY]  Quote  other  =  this.quotePolicy.getFormat();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  this.quotePolicy.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  this.quotePolicy.getFormat();	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
158	[BUG]  [BUGGY]  Quote  other  =  set.getFormat();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.getFormat();	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
159	[BUG]  [BUGGY]  Quote  other  =  quotePolicy.getFormat(),  delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  quotePolicy.getFormat(),  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  quotePolicy.getFormat(),  delimiter);	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
160	[BUG]  [BUGGY]  Quote  other  =  quotePolicy.getFormat(),  delimiter;  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  quotePolicy.getFormat(),  delimiter;  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  quotePolicy.getFormat(),  delimiter;	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
161	[BUG]  [BUGGY]  Quote  other  =  quotePolicy.getFormat(),  DEFAULT);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  quotePolicy.getFormat(),  DEFAULT);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  quotePolicy.getFormat(),  DEFAULT);	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
162	[BUG]  [BUGGY]  ||  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  ||  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	||  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
163	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
164	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  + "') ");  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  + "') ");  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  + "') ");	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
165	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getKey())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getKey())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.getKey())  {	  if    (escape!=    null    &&    delimiter    ==    escape.getKey())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
166	[BUG]  [BUGGY]  if  (escape!=  null  ||  delimiter  ==  escape.getKey())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  ||  delimiter  ==  escape.getKey())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  ||  delimiter  ==  escape.getKey())  {	  if    (escape!=    null    &&    delimiter    ==    escape.getKey())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
167	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    escape!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
168	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    escape!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
169	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter!=  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    escape!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
170	[BUG]  [BUGGY]  Quote  other  =  set.get(quoteChar);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(quoteChar);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
171	[BUG]  [BUGGY]  Quote  other  =  set.get(c  +  1);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(c  +  1);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(c  +  1);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
172	[BUG]  [BUGGY]  Quote  other  =  set.get(c,  quoteChar);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(c,  quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(c,  quoteChar);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
173	[BUG]  [BUGGY]  Quote  other  =  set.get(quote);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(quote);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(quote);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
174	[BUG]  [BUGGY]  Quote  other  =  set.get(commentStart);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(commentStart);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(commentStart);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
175	[BUG]  [BUGGY]  Quote  other  =  set.get(0);  [CE]  illegal  start  of  type  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(0);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(0);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
176	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
177	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.toCharArray())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.toCharArray())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.toCharArray())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
178	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  + "') ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  + "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
179	[BUG]  [BUGGY]  if(escape!=  null)  {  if(delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  if(delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null)  {  if(delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
180	[BUG]  [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
181	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
182	[BUG]  [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteStart.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteStart.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteStart.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
183	[BUG]  [BUGGY]  if(delimiter!=  quotePolicy.DEFAULT)  {  if(commentStart!=  null  &&  delimiter  ==  quotePolicy.delimiter())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quotePolicy.DEFAULT)  {  if(commentStart!=  null  &&  delimiter  ==  quotePolicy.delimiter())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quotePolicy.DEFAULT)  {  if(commentStart!=  null  &&  delimiter  ==  quotePolicy.delimiter())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
184	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter  ==  delimiter.getChar())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
185	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quotePolicy.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quotePolicy.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  quotePolicy.getChar())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
186	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
187	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  delimiter.toString())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
188	[BUG]  [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords(recordSeparator);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords(recordSeparator);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quotePolicy.getHeaderRecords(recordSeparator);	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
189	[BUG]  [BUGGY]  String[]  header  =  quoteHeaderRecords.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteHeaderRecords.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteHeaderRecords.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
190	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter!=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    escape!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
191	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter!=  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter!=  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter!=  escape.charValue())  {	  if    (delimiter!=    null    &&    escape!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
192	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.toString())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
193	[BUG]  [BUGGY]  Character  c  =  this.quotePolicy.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  this.quotePolicy.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  this.quotePolicy.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
194	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(escape);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCharacter(escape);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
195	[BUG]  [BUGGY]  Set  set  =  quotePolicy.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Set  set  =  quotePolicy.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Set  set  =  quotePolicy.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
196	[BUG]  [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords();  set.add(c,  header);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords();  set.add(c,  header);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quotePolicy.getHeaderRecords();  set.add(c,  header);	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
197	[BUG]  [BUGGY]  char[]  header  =  quotePolicy.getHeaderRecords();  set.add(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  char[]  header  =  quotePolicy.getHeaderRecords();  set.add(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	char[]  header  =  quotePolicy.getHeaderRecords();  set.add(c);	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
198	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape.getChars())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape.getChars())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  escape.getChars())  {	  if    (escape!=    null    &&    delimiter    ==    escape.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
199	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  escape.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  escape.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  escape.toCharArray())  {	  if    (escape!=    null    &&    delimiter    ==    escape.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
200	[BUG]  [BUGGY]  Character  c  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.toChars();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
201	[BUG]  [BUGGY]  Character  c  =  quoteChar.getChars();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getChars();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getChars();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
202	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(delimiter);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(delimiter);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
203	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  delimiter);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(quoteChar,  delimiter);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
204	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(escape);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(escape);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
205	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(categoryStart);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(categoryStart);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(categoryStart);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
206	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(escape);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapeChar(escape);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
207	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapeChar(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapeChar(delimiter);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
208	[BUG]  [BUGGY]  Character  escapeChar  =  set.getEscapeChar(c);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  set.getEscapeChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  set.getEscapeChar(c);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
209	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getEscape())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getEscape())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.getEscape())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
210	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getDelimiter())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getDelimiter())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.getDelimiter())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
211	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.getCharValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quotePolicy.getCharValue())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
212	[BUG]  [BUGGY]  Character  delimiter  =  quoteDelimiter.getDelimiter();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteDelimiter.getDelimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteDelimiter.getDelimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
213	[BUG]  [BUGGY]  Character  delimiter  =  quote.getDelimiter();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quote.getDelimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quote.getDelimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
214	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  >=  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  >=  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  >=  delimiter.length())  {	  if    (delimiter!=    null    &&    escape    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
215	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  recordSeparator.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  recordSeparator.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  recordSeparator.toString())  {	  if    (escape!=    null    &&    delimiter    ==    escapeChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
216	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.getValue())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
217	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quotePolicy.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quotePolicy.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quotePolicy.getValue())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
218	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteEscape.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteEscape.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteEscape.getValue())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
219	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getValue())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
220	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quotePolicy.getValue())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
221	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  escape.getCharValue())  {	  if    (escape!=    null    &&    delimiter    ==    escapeChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
222	[BUG]  [BUGGY]  if  (delimiter!=  null  ||  escape  ==  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  ||  escape  ==  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  ||  escape  ==  escape.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
223	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape!=  delimiter.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
224	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape!=  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape!=  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape!=  escape.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
225	[BUG]  [BUGGY]  Quote  other  =  set.get(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(c,  delimiter);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
226	[BUG]  [BUGGY]  Quote  other  =  set.get(c  -  1);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(c  -  1);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(c  -  1);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
227	[BUG]  [BUGGY]  Quote  other  =  set.get(escape);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(escape);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
228	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCSV(delimiter);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
229	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(escape);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCSV(escape);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
230	[BUG]  [BUGGY]  Character  c  =  this.quotePolicy.getCSV(c);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  this.quotePolicy.getCSV(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  this.quotePolicy.getCSV(c);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
231	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(converter);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(converter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCSV(converter);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
232	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quotePolicy.getCurrentCharacter();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
233	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentCharValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCurrentCharValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  quoteChar.getCurrentCharValue();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
234	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape  ==  escape.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape  ==  escape.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape  ==  escape.getValue())  {	  if    (escape    ==    null    &&    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
235	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  DEFAULT.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  DEFAULT.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  DEFAULT.getValue())  {	  if    (delimiter!=    null    &&    escape!=    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
236	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  source.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  source.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  source.getValue())  {	  if    (delimiter!=    null    &&    escape!=    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
237	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  <  quoteEmptyLines.length)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  <  quoteEmptyLines.length)  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  <  quoteEmptyLines.length)  {	  if    (escape!=    null    &&    escape    ==    quoteEmptyLines.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
238	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter  ==  delimiter.length())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
239	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape!=  description.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape!=  description.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape!=  description.charValue())  {	  if    (escape!=    null    &&    escape    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
240	[BUG]  [BUGGY]  if  (delimiter!=  null  ||  escape!=  escape.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  ||  escape!=  escape.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  ||  escape!=  escape.getValue())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
241	[BUG]  [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  ||  escape!=  delimiter.getValue())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
242	[BUG]  [BUGGY]  Character  delimiter  =  set.getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  set.getDelimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  set.getDelimiter(c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
243	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c  +  1);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c  +  1);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c  +  1);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
244	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  description.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  description.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  description.length())  {	  if    (escape!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
245	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  <  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  <  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  <  delimiter.length())  {	  if    (escape!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
246	[BUG]  [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  ||  escape!=  delimiter.getChar())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
247	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape!=  DEFAULT.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape!=  DEFAULT.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape!=  DEFAULT.getChar())  {	  if    (delimiter!=    null    &&    escape!=    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
248	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getChar())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
249	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quotePolicy.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
250	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.delimiterValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.delimiterValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.delimiterValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
251	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.toChars();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
252	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteDelimiter.length())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
253	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape  +   "')  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape  +   "')  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  escape  +   "')  {	  if    (escape    ==    null    &&    delimiter    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
254	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape!=  header.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape!=  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape!=  header.length())  {	  if    (escape!=    null    &&    escape!=    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
255	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.toCharArray())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
256	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.toCharArray())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quotePolicy.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
257	[BUG]  [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  ||  escape!=  delimiter.toString())  {	  if    (escape!=    null    ||    delimiter    ==    escape.toString())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
258	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(escape);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapedChar(escape);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
259	[BUG]  [BUGGY]  Character  escapeChar  =  set.getEscapedChar(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  set.getEscapedChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  set.getEscapedChar(c);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
260	[BUG]  [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quotePolicy.getEscapedChar(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  quotePolicy.getEscapedChar(delimiter);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
261	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEscape.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEscape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEscape.charValue())  {	  if    (escape!=    null    &&    escape    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
262	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quotePolicy.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quotePolicy.charValue())  {	  if    (escape!=    null    &&    escape    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
263	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteLine.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteLine.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteLine.charValue())  {	  if    (escape!=    null    &&    escape    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
264	[BUG]  [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  ||  escape!=  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  ||  escape!=  delimiter.length())  {	  if    (escape!=    null    ||    delimiter    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
265	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  escape.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  escape.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  escape.length())  {	  if    (escape!=    null    ||    delimiter    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
266	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter  ==  delimiter.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
267	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  quotePolicy.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  quotePolicy.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  quotePolicy.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
268	[BUG]  [BUGGY]  Quote  other  =  delimiter.getFormat();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  delimiter.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  delimiter.getFormat();	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
269	[BUG]  [BUGGY]  Quote  other  =  getFormat();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  getFormat();	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
270	[BUG]  [BUGGY]  Quote  other  =  this.set.getFormat();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  this.set.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  this.set.getFormat();	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
271	[BUG]  [BUGGY]  Quote  other  =  this.setFormat.getFormat();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  this.setFormat.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  this.setFormat.getFormat();	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
272	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.toString())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
273	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  header.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  header.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  header.toString())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
274	[BUG]  [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quoteChar.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
275	[BUG]  [BUGGY]  if(delimiter  ==  quotePolicy.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quotePolicy.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quotePolicy.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
276	[BUG]  [BUGGY]  if(delimiter!=  quotePolicy.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  quotePolicy.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  quotePolicy.charValue())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
277	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  delimiter.getKey())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  delimiter.getKey())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  delimiter.getKey())  {	  if    (escape!=    null    &&    delimiter    ==    escape.getKey())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
278	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape.getEscape())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escape.getEscape())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  escape.getEscape())  {	  if    (escape!=    null    &&    delimiter    ==    escape.getKey())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
279	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  <  header.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  <  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  <  header.length())  {	  if    (escape!=    null    &&    escape    ==    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
280	[BUG]  [BUGGY]  if(escape!=  null)  {  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null)  {  if(delimiter!=  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
281	[BUG]  [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
282	[BUG]  [BUGGY]  if(escape!=  null)  {  if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null)  {  if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
283	[BUG]  [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  delimiter.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
284	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  delimiter.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
285	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  templateChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  templateChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  templateChar.toCharArray())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
286	[BUG]  [BUGGY]  Character  delimiter  =  quoteDelimiter.getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteDelimiter.getDelimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteDelimiter.getDelimiter(c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
287	[BUG]  [BUGGY]  Character  delimiter  =  c.getDelimiter(quoteChar);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.getDelimiter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  c.getDelimiter(quoteChar);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
288	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape  ==  delimiter.getValue())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
289	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape  ==  buffer.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape  ==  buffer.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape  ==  buffer.getValue())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
290	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.getEscapeChar(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.getEscapeChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  delimiter.getEscapeChar(c);	  Character    escapeChar    =    quotePolicy.getEscapeChar(c);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
291	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteLine.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteLine.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteLine.toString())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
292	[BUG]  [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords(c);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quotePolicy.getHeaderRecords(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quotePolicy.getHeaderRecords(c);	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
293	[BUG]  [BUGGY]  String[]  header  =  quoteSeparator.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  String[]  header  =  quoteSeparator.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	String[]  header  =  quoteSeparator.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
294	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
295	[BUG]  [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
296	[BUG]  [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null)  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
297	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
298	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.length())  {  if(commentStart!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
299	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
300	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escapeChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  escapeChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  escapeChar.getChar())  {	  if    (escape!=    null    &&    delimiter    ==    escapeChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
301	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  commentStart.toString())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  commentStart.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter  ==  commentStart.toString())  {	  if    (escape!=    null    &&    escape    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
302	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape  ==  delimiter.toString())  {	  if    (escape!=    null    ||    delimiter    ==    escape.toString())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
303	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape  ==  escape.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape  ==  escape.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape  ==  escape.toCharArray())  {	  if    (escape!=    null    &&    delimiter    ==    escape.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
304	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  escape  ==  escape.getKey())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  escape  ==  escape.getKey())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter!=  null  &&  escape  ==  escape.getKey())  {	  if    (escape!=    null    &&    delimiter    ==    escape.getKey())    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
305	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.getEscapedChar(c);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.getEscapedChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  escapeChar  =  delimiter.getEscapedChar(c);	  Character    escapeChar    =    quotePolicy.getEscapedChar(c);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
306	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape  ==  delimiter.getChar())  {	  if    (escape!=    null    ||    delimiter    ==    escape.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
307	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  quoteEmptyLines.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  quoteEmptyLines.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter  ==  quoteEmptyLines.charValue())  {	  if    (escape!=    null    &&    escape    ==    quoteEmptyLines.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
308	[BUG]  [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  escape  ==  quoteEmptyLines.getCharValue())  {	  if    (escape!=    null    &&    escape    ==    quoteEmptyLines.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
309	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escape  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escape  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  null  &&  escape  ==  delimiter.length())  {	  if    (escape    ==    null    &&    delimiter    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
310	[BUG]  [BUGGY]  if  (delimiter  ==  null  &&  escape  ==  escape.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  null  &&  escape  ==  escape.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (delimiter  ==  null  &&  escape  ==  escape.length())  {	  if    (escape    ==    null    &&    delimiter    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
311	[BUG]  [BUGGY]  Quote  other  =  set.get(char);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  set.get(char);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  set.get(char);	  Quote    other    =    set.get(c);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
312	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getEscaped())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getEscaped())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.getEscaped())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
313	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape  ==  delimiter.length())  {	  if    (escape!=    null    ||    delimiter    ==    escape.length())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
314	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escape  ==  escape.getValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escape  ==  escape.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  null  &&  escape  ==  escape.getValue())  {	  if    (escape    ==    null    &&    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
315	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  escape  ==  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  escape  ==  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  null  &&  escape  ==  delimiter.getValue())  {	  if    (escape    ==    null    &&    delimiter    ==    escape.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
316	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  <  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  <  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  <  delimiter.length())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.length())    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
317	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.length())  {  throw  new  IllegalStateException( "CSV  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  quoteChar  + "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "CSV    start    character    and    the    delimiter    cannot    be    the    same    ('   "    +    quoteChar    +   "')   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
318	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {	  if    (escape!=    null    &&    delimiter    ==    quoteChar.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
319	[BUG]  [BUGGY]  Character  c  =  delimiter;  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter;  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  delimiter;	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
320	[BUG]  [BUGGY]  char  c  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  char  c  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	char  c  =  quoteChar.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
321	[BUG]  [BUGGY]  Character  c  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  character.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
322	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape  ==  templateChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape  ==  templateChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape  ==  templateChar.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
323	[BUG]  [BUGGY]  if  (escape  ==  null  ||  escape  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  ||  escape  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape  ==  null  ||  escape  ==  delimiter.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
324	[BUG]  [BUGGY]  if(delimiter!=  null  ||  escape  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  ||  escape  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  ||  escape  ==  quoteChar.charValue())  {	  if    (escape!=    null    ||    escape    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
325	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  delimiter.getChar())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
326	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  <  delimiter.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  <  delimiter.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  <  delimiter.getChar())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
327	[BUG]  [BUGGY]  Character  c  =  delimiter.getCSV(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCSV(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  c  =  delimiter.getCSV(c);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
328	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
329	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  (	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
330	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
331	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
332	[BUG]  [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
333	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  cannot  be  the  same  ('   "  +  escape  +  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  cannot  be  the  same  ('   "  +  escape  +  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  cannot  be  the  same  ('   "  +  escape  +	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
334	[BUG]  [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null)  {  if(commentStart!=  null  &&  commentStart  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +   "') ");  }	  if(delimiter    ==    quoteChar.charValue())    {    if(commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
335	[BUG]  [BUGGY]  Character  delimiter  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  delimiter.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
336	[BUG]  [BUGGY]  Character  delimiter  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  character.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
337	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(quoteChar);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.getDelimiter(quoteChar);	  Character    delimiter    =    quotePolicy.getDelimiter(quoteChar);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
338	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  ==  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  ==  delimiter.getCharValue())  {	  if    (escape!=    null    &&    escape    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
339	[BUG]  [BUGGY]  Set  set  =  set.getHeaderRecords();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Set  set  =  set.getHeaderRecords();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Set  set  =  set.getHeaderRecords();	  String[]    header    =    quotePolicy.getHeaderRecords();    set.add(c);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
340	[BUG]  [BUGGY]  Character  delimiter  =  c.getDelimiter();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.getDelimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  c.getDelimiter();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
341	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.delimiterChar();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.delimiterChar();  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Character  delimiter  =  quoteChar.delimiterChar();	  Character    delimiter    =    quoteChar.getDelimiter();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
342	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  header.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  header.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(escape!=  null  &&  delimiter  ==  header.length())  {	  if    (escape!=    null    &&    escape    ==    header.length())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
343	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter  ==  description.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter  ==  description.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if  (escape!=  null  &&  delimiter  ==  description.charValue())  {	  if    (escape!=    null    &&    escape    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
344	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  delimiter  ==  delimiter.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
345	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape  <  delimiter.getValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape  <  delimiter.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	if(delimiter!=  null  &&  escape  <  delimiter.getValue())  {	  if(delimiter!=    null    &&    escape    ==    delimiter.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
346	[BUG]  [BUGGY]  Quote  other  =  quotePolicy.getFormat(c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  quotePolicy.getFormat(c);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  quotePolicy.getFormat(c);	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
347	[BUG]  [BUGGY]  Quote  other  =  quotePolicy.getFormat(quoteChar);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      void  validate()  throws  IllegalStateException  {  if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }      [BUGGY]  Quote  other  =  quotePolicy.getFormat(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.31622776601683794	641	641	1	replace	Quote  other  =  quotePolicy.getFormat(quoteChar);	  Quote    other    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
