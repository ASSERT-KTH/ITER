bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()));  [CE]  <identifier>  expected  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length));  [CE]  <identifier>  expected  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  <identifier>  expected  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set));  [CE]  <identifier>  expected  [FE]                        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()));  [CE]  <identifier>  expected  [FE]                          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header));  [CE]  <identifier>  expected  [FE]                            java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  unreachable  statement	3	None	add
8	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  [CE]  not  a  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  not  a  statement	3	None	add
9	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  Throwables.warning( "The  header  contains  null  names:   "  +  Arrays.toString(header));  [CE]  cannot  find  symbol  Throwables  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  Throwables.warning( "The  header  contains  null  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    Throwables.warning( "The  header  contains  null  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  cannot  find  symbol  Throwables	3	None	add
10	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));  [CE]  no  suitable  method  found  for  toString(Set<String>,int)  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  no  suitable  method  found  for  toString(Set<String>,int)	7	None	replace
11	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set));  [CE]  no  suitable  method  found  for  toString(Set<String>)  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  no  suitable  method  found  for  toString(Set<String>)	7	None	replace
12	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	add	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	7	1	replace
13	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	7	1	replace
14	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set));  [CE]  no  suitable  method  found  for  toString(String[],Set<String>)  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  no  suitable  method  found  for  toString(String[],Set<String>)	7	None	replace
15	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  unreachable  statement	11	None	add
16	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  Throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [CE]  not  a  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  Throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    Throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  not  a  statement	11	None	add
17	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  Throwables.warning( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [CE]  cannot  find  symbol  Throwables  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  Throwables.warning( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    Throwables.warning( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  cannot  find  symbol  Throwables	11	None	add
18	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  Throwables.exception(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [CE]  cannot  find  symbol  Throwables  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  Throwables.exception(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    Throwables.exception(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  cannot  find  symbol  Throwables	11	None	add
19	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	add	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	4	1	replace
20	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	4	1	replace
21	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [CE]  no  suitable  method  found  for  toString(int)  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  no  suitable  method  found  for  toString(int)	4	None	replace
22	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [CE]  no  suitable  method  found  for  toString(int)  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  no  suitable  method  found  for  toString(int)	4	None	replace
23	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));  [CE]  no  suitable  method  found  for  toString(Set<String>)  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  no  suitable  method  found  for  toString(Set<String>)	4	None	replace
24	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	add	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	4	1	replace
26	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	4	1	replace
27	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length);  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length);  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length,  set.size()));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length,  set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size());  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
34	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
36	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    Throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
37	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
38	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  Throwables.warning( "The  header  contains  duplicate  names:   "  +  set.toString());  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  Throwables.warning( "The  header  contains  duplicate  names:   "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    Throwables.warning( "The  header  contains  duplicate  names:   "  +  set.toString());	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
39	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log( "The  header  contains  duplicate  names: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
43	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
44	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()  -  1));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()  -  1));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header));  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  set.addAll(Arrays.asList(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header));	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
53	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header.length));  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  set.addAll(Arrays.asList(header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header.length));	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
57	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  -  header.length));	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]      for(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      for(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        for(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
60	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  java.lang.Exception:  The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  java.lang.Exception:  The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    java.lang.Exception:  The  header  contains  unknown  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
61	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  }	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
62	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  }	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
63	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  java.lang.Exception:   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  java.lang.Exception:   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    java.lang.Exception:   "The  header  contains  unknown  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
64	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length);  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length);  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]      for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
66	[BUG]  [BUGGY]      if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
67	[BUG]  [BUGGY]      if(set.size()  ==  header.length)  {  set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      if(set.size()  ==  header.length)  {  set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        if(set.size()  ==  header.length)  {  set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
68	[BUG]  [BUGGY]      for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'ufffd')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'ufffd')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'ufffd')  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
69	[BUG]  [BUGGY]      for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  return;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  return;  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  return;  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
70	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  java.lang.Exception:  The  header  contains  duplicate  names:   "  +  set.toString());  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  java.lang.Exception:  The  header  contains  duplicate  names:   "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    java.lang.Exception:  The  header  contains  duplicate  names:   "  +  set.toString());	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
71	[BUG]  [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()));  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
73	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  java.lang.Exception:  The  header  contains  null  names:   "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  java.lang.Exception:  The  header  contains  null  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    java.lang.Exception:  The  header  contains  null  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
74	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
75	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
76	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  java.lang.Exception:   "The  header  contains  null  names:   "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  java.lang.Exception:   "The  header  contains  null  names:   "  +  Arrays.toString(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    java.lang.Exception:   "The  header  contains  null  names:   "  +  Arrays.toString(header));	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
77	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
79	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  2));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  2));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  2));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
82	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
83	[BUG]  [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]      for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
85	[BUG]  [BUGGY]      for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
86	[BUG]  [BUGGY]      for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
87	[BUG]  [BUGGY]      result.addAll(Arrays.asList(header));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]      result.addAll(Arrays.asList(header));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	        result.addAll(Arrays.asList(header));	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
88	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
89	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  Arrays.toString(header));  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  Arrays.toString(header));  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
90	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
91	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  set.toString());  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  set.toString());  }	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
92	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
93	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length));  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(   "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {    [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]    }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
