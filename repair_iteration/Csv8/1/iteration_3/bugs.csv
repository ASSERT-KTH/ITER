bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1),  header.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size(),  header.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size(),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
5	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()),  header.length);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
6	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()),  header.length);  [CE]  illegal  start  of  expression  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
7	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
8	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
9	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
10	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());	  Throwables.throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
11	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
12	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.asList(header));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.asList(header));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
13	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.size());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
14	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.size());  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.size());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
15	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  + "  header  length: "  +  header.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  + "  header  length: "  +  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  + "  header  length: "  +  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.size());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  + "  headers: "  +  header.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  + "  headers: "  +  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  + "  headers: "  +  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.size());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.size());  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.size());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
19	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
20	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()  -  1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()  -  1));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
21	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size());  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
25	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length),  set.size());  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
26	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length)+ ",  set.size());  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length)+ ",  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length)+ ",  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
27	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size()  -  1);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size()  -  1);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size()  -  1);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
28	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size(),  header.length);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.size(),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
29	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'n')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'n')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'n')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
30	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'ufffd')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'ufffd')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'ufffd')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
31	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=' "')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=' "')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=' "')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
32	[BUG]  [BUGGY]  Character  c  =  set.keySet();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Character  c  =  set.keySet();  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Character  c  =  set.keySet();	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
33	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '.')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '.')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '.')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
34	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  ',')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  ',')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  ',')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
35	[BUG]  [BUGGY]  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
36	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]);  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ]);	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
37	[BUG]  [BUGGY]  if(!set.contains(header))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.contains(header))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.contains(header))  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
38	[BUG]  [BUGGY]  final  String[]  header  =  set.toArray(new  String[set.size()  ]);  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  String[]  header  =  set.toArray(new  String[set.size()  ]);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  String[]  header  =  set.toArray(new  String[set.size()  ]);	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
39	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
41	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set));  [CE]  not  a  statement  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  not  a  statement	23	None	replace
42	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set),  header.length);  [CE]  not  a  statement  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  not  a  statement	23	None	replace
43	[BUG]  [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
44	[BUG]  [BUGGY]  if(!set.isEmptyLines())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.isEmptyLines())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.isEmptyLines())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
45	[BUG]  [BUGGY]  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
46	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
47	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  *  header.length));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()  *  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  *  header.length));	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
48	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  +  header.length));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()  +  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  +  header.length));	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
49	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length  +  1));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length  +  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  -  header.length  +  1));	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
50	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length),  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length),  false);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  -  header.length),  false);	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
51	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  /  header.length));  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()  /  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  /  header.length));	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
52	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length,  quoteChar));  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length,  quoteChar));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  -  header.length,  quoteChar));	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
53	[BUG]  [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()!=    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
54	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header.length));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header.length));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header.length));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()!=    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
55	[BUG]  [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()!=    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
56	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header.length));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header.length));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header.length));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()!=    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
57	[BUG]  [BUGGY]  result.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()!=    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	56	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	79	None	replace
59	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	79	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  header.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  header.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  header.toString());	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	44	None	replace
61	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	44	None	replace
62	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString(),  header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString(),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	44	None	replace
63	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  name: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  name: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  name: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    name:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	40	None	replace
64	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    name:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	40	None	replace
65	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  header.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  header.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  header.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    name:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	40	None	replace
66	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  character: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  character: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  character: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    name:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	40	None	replace
67	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  string: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  string: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  string: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    name:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	40	None	replace
68	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString(),  header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString(),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    name:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	40	None	replace
69	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()));	  set.addAll(Arrays.asList(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	53	None	replace
70	[BUG]  [BUGGY]  set.add(Arrays.asList(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.add(Arrays.asList(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.add(Arrays.asList(header.length));	  set.addAll(Arrays.asList(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	53	None	replace
71	[BUG]  [BUGGY]  set.addAll(Arrays.asList(escape));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(escape));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(escape));	  set.addAll(Arrays.asList(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	53	None	replace
72	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  quoteChar);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  quoteChar);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  quoteChar);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	10	None	replace
73	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	10	None	replace
74	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length,  quoteChar));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length,  quoteChar));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length,  quoteChar));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	10	None	replace
75	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  quoteChar));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  quoteChar));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  quoteChar));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	10	None	replace
76	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  delimiter);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  delimiter);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  delimiter);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	10	None	replace
77	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	10	None	replace
78	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  set.size());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	10	None	replace
79	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	93	None	replace
80	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	93	None	replace
81	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  +  1,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  +  1,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  +  1,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	93	None	replace
82	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  exception);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  exception);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  exception);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	93	None	replace
83	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  quoteChar);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  quoteChar);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  quoteChar);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	93	None	replace
84	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	27	None	replace
85	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	27	None	replace
86	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	27	None	replace
87	[BUG]  [BUGGY]  Throwables.exception( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.exception( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.exception( "The  header  contains  unknown  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.exception(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	18	None	replace
88	[BUG]  [BUGGY]  Throwables.exception( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.exception( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.exception( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.exception(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	18	None	replace
89	[BUG]  [BUGGY]  Set.addAll(Arrays.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set.addAll(Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set.addAll(Arrays.asList(header));	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	67	None	replace
90	[BUG]  [BUGGY]  Set.removeAll(Arrays.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set.removeAll(Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set.removeAll(Arrays.asList(header));	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	67	None	replace
91	[BUG]  [BUGGY]  cuplur.addAll(Arrays.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  cuplur.addAll(Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	cuplur.addAll(Arrays.asList(header));	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	67	None	replace
92	[BUG]  [BUGGY]  Set  <  String>  set  =  set.get(header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set  <  String>  set  =  set.get(header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set  <  String>  set  =  set.get(header.length);	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	67	None	replace
93	[BUG]  [BUGGY]  Set  <  String>  set  =  set.size();  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set  <  String>  set  =  set.size();  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set  <  String>  set  =  set.size();	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	67	None	replace
94	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()    -    1));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	50	None	replace
95	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()    -    1));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	50	None	replace
96	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	31	None	replace
97	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	31	None	replace
98	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	31	None	replace
99	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	31	None	replace
100	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	31	None	replace
101	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	94	None	replace
102	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	94	None	replace
103	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	94	None	replace
104	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  name: "  +  set.toString());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	94	None	replace
105	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	94	None	replace
106	[BUG]  [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	81	None	replace
107	[BUG]  [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	81	None	replace
108	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	81	None	replace
109	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	81	None	replace
110	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	81	None	replace
111	[BUG]  [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	81	None	replace
112	[BUG]  [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	81	None	replace
113	[BUG]  [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	71	None	replace
114	[BUG]  [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	71	None	replace
115	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	71	None	replace
116	[BUG]  [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	71	None	replace
117	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	71	None	replace
118	[BUG]  [BUGGY]  allowUnknownName(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowUnknownName(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowUnknownName(set.size())  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	71	None	replace
119	[BUG]  [BUGGY]  allowEmptyLines(set.size()  +  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size()  +  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size()  +  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	71	None	replace
120	[BUG]  [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  duplicate  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "CSV  header  contains  duplicate  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	37	None	replace
121	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	21	None	replace
122	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size(),  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size(),  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size(),  header.length));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	21	None	replace
123	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	21	None	replace
124	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString(Arrays.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString(Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString(Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	21	None	replace
125	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	21	None	replace
126	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	48	None	replace
127	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  duplicate  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    Throwables.warning(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	38	None	replace
128	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  null  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    Throwables.warning(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	38	None	replace
129	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  duplicate  names: "  +  set.size());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  duplicate  names: "  +  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  duplicate  names: "  +  set.size());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    Throwables.warning(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	38	None	replace
130	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  duplicate  name: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  duplicate  name: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  duplicate  name: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    Throwables.warning(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	38	None	replace
131	[BUG]  [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	58	None	replace
132	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header.length));  if(set.size()  ==  header.length)  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header.length));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header.length));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	58	None	replace
133	[BUG]  [BUGGY]  set.addAll(Arrays.asList(delimiter));  if(set.size()  ==  header.length)  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(delimiter));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(delimiter));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	58	None	replace
134	[BUG]  [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	58	None	replace
135	[BUG]  [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(set.size());  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(set.size());  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  Set  <  String>  header  =  new  HashSet  <  String>(set.size());  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	58	None	replace
136	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size(),    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	28	None	replace
137	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length),  header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size(),    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	28	None	replace
138	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.size(),  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.size(),  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.size(),  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size(),    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	28	None	replace
139	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length),  quoteChar);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length),  quoteChar);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size(),  header.length),  quoteChar);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size(),    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	28	None	replace
140	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  header.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  header.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  header.toString());	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	20	None	replace
141	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  [CE]  <identifier>  expected  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
142	[BUG]  [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString());  }	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	20	None	replace
143	[BUG]  [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	20	None	replace
144	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.getName());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.getName());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.getName());	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	20	None	replace
145	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	25	None	add
146	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	25	None	add
147	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  Throwables.warning( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  Throwables.warning( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    Throwables.warning( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	25	None	add
148	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  Throwables.exception( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  Throwables.exception( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    Throwables.exception( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	25	None	add
149	[BUG]  [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	7	None	replace
150	[BUG]  [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header)));  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header)));  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header)));  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	7	None	replace
151	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()  -  1));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	5	None	replace
152	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header,  set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	5	None	replace
153	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	5	None	replace
154	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()  -  1));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	5	None	replace
155	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
156	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
157	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
158	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
159	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
160	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
161	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
162	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	92	None	replace
163	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.size());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.size());	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	92	None	replace
164	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Sets.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Sets.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Sets.toString(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	92	None	replace
165	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	92	None	replace
166	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  +  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  +  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  +  1));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	92	None	replace
167	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	26	None	replace
168	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	26	None	replace
169	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  string.valueOf(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  string.valueOf(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  string.valueOf(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	26	None	replace
170	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.length()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.length()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.length()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	26	None	replace
171	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.get(0));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.get(0));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.get(0));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	26	None	replace
172	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.get(0)));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.get(0)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.get(0)));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	26	None	replace
173	[BUG]  [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log(new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString()));	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	35	None	replace
174	[BUG]  [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	83	None	replace
175	[BUG]  [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	83	None	replace
176	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	83	None	replace
177	[BUG]  [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	83	None	replace
178	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	83	None	replace
179	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	83	None	replace
180	[BUG]  [BUGGY]  aughtException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  aughtException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	aughtException( "The  header  contains  null  names: "  +  Arrays.toString(header));	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	83	None	replace
181	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  set.size()  -  1));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	49	None	replace
182	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.size()  -  1));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	49	None	replace
183	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set,  header.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set,  header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set,  header.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	49	None	replace
184	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	6	None	replace
185	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	6	None	replace
186	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.asList(header));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	6	None	replace
187	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	6	None	replace
188	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(header,  set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	6	None	replace
189	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.asList(set.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	6	None	replace
190	[BUG]  [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log(new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    if(!set.isEmpty())    {    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	74	None	replace
191	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.size()));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    if(!set.isEmpty())    {    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	74	None	replace
192	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	16	None	replace
193	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	16	None	replace
194	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	16	None	replace
195	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	16	None	replace
196	[BUG]  [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	84	None	replace
197	[BUG]  [BUGGY]  for(String  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	84	None	replace
198	[BUG]  [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	84	None	replace
199	[BUG]  [BUGGY]  for(Character  c  =  header.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  header.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  header.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	84	None	replace
200	[BUG]  [BUGGY]  For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	84	None	replace
201	[BUG]  [BUGGY]  for(char  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(char  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(char  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	84	None	replace
202	[BUG]  [BUGGY]  result.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	54	None	replace
203	[BUG]  [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(set.size());  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  Set  <  String>  header  =  new  HashSet  <  String>(set.size());  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  Set  <  String>  header  =  new  HashSet  <  String>(set.size());  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	54	None	replace
204	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length);	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	54	None	replace
205	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set.size()));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	87	None	replace
206	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	87	None	replace
207	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set.size()  -  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set.size()  -  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set.size()  -  header.length));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	87	None	replace
208	[BUG]  [BUGGY]  result.addAll(Sets.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Sets.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Sets.asList(header));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	87	None	replace
209	[BUG]  [BUGGY]  result.addAll(set.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(set.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(set.asList(header));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	87	None	replace
210	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set.size()  +  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set.size()  +  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set.size()  +  header.length));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	87	None	replace
211	[BUG]  [BUGGY]  result.addAll(Arrays.asList(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(header.length));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	87	None	replace
212	[BUG]  [BUGGY]  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    java.lang.Exception:    The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	70	None	replace
213	[BUG]  [BUGGY]  if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    java.lang.Exception:    The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	70	None	replace
214	[BUG]  [BUGGY]  if(set.size()  >  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()  >  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  >  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    java.lang.Exception:    The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	70	None	replace
215	[BUG]  [BUGGY]  java.lang.Exception:  The  header  contains  duplicate  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  java.lang.Exception:  The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	java.lang.Exception:  The  header  contains  duplicate  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    java.lang.Exception:    The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	70	None	replace
216	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    header.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	39	None	replace
217	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.getMessage());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.getMessage());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.getMessage());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    header.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	39	None	replace
218	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(),  set.size());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    header.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	39	None	replace
219	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.length);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    header.toString());    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	39	None	replace
220	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	13	None	replace
221	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	13	None	replace
222	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.valueOf(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.valueOf(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.valueOf(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	13	None	replace
223	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.length()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.length()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.length()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	13	None	replace
224	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()  +  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()  +  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.size()  +  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	13	None	replace
225	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	24	None	replace
226	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	24	None	replace
227	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.asList(header));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	24	None	replace
228	[BUG]  [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	85	None	replace
229	[BUG]  [BUGGY]  for(Character  c  =  header.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  header.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  header.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	85	None	replace
230	[BUG]  [BUGGY]  for(String  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	85	None	replace
231	[BUG]  [BUGGY]  for(char  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(char  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(char  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	85	None	replace
232	[BUG]  [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(2))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(2))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(2))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	85	None	replace
233	[BUG]  [BUGGY]  For(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  For(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	For(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	85	None	replace
234	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(commentStart))  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(commentStart))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals(commentStart))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	59	None	replace
235	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	59	None	replace
236	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(delimiter)||  c.equals(delimiter))  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(delimiter)||  c.equals(delimiter))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals(delimiter)||  c.equals(delimiter))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	59	None	replace
237	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(quoteChar))  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(quoteChar))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals(quoteChar))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	59	None	replace
238	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals( " "))  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals( " "))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals( " "))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	59	None	replace
239	[BUG]  [BUGGY]  for(String  c  :  set.values())  {  if(c.equals(delimiter))  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.values())  {  if(c.equals(delimiter))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.values())  {  if(c.equals(delimiter))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	59	None	replace
240	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	2	None	replace
241	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(header.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	2	None	replace
242	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	15	None	replace
243	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	73	None	replace
244	[BUG]  [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	73	None	replace
245	[BUG]  [BUGGY]  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	73	None	replace
246	[BUG]  [BUGGY]  if(header.length()!=  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length()!=  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length()!=  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	73	None	replace
247	[BUG]  [BUGGY]  java.lang.Exception:  The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  java.lang.Exception:  The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	java.lang.Exception:  The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	73	None	replace
248	[BUG]  [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
249	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
250	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
251	[BUG]  [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size())  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
252	[BUG]  [BUGGY]  allowEmptyLines(set.size()  +  header.length))  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size()  +  header.length))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size()  +  header.length))  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
253	[BUG]  [BUGGY]  allowEmptyLines(set.size(),  header.length))  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(set.size(),  header.length))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(set.size(),  header.length))  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
254	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size())  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
255	[BUG]  [BUGGY]  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.contains(header))  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	89	None	replace
256	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length,  set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length,  set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length,  set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	32	None	replace
257	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length(),  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length(),  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length(),  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	32	None	replace
258	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	4	None	replace
259	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	4	None	replace
260	[BUG]  [BUGGY]  if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	76	None	replace
261	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString(header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.toString(header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	34	None	replace
262	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	34	None	replace
263	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length),  delimiter);  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length),  delimiter);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header.length),  delimiter);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	34	None	replace
264	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString(header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	34	None	replace
265	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());	  	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	19	None	add
266	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    Throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());	  	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	19	None	add
267	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  Throwables.warning( "The  header  contains  null  names: "  +  set.toString());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  Throwables.warning( "The  header  contains  null  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    Throwables.warning( "The  header  contains  null  names: "  +  set.toString());	  	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	19	None	add
268	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	47	None	replace
269	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	47	None	replace
270	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  string.valueOf(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  string.valueOf(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  string.valueOf(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	47	None	replace
271	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.size());  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.size());	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	47	None	replace
272	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.get(0));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.get(0));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.get(0));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	47	None	replace
273	[BUG]  [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	86	None	replace
274	[BUG]  [BUGGY]  for(String  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	86	None	replace
275	[BUG]  [BUGGY]  For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
276	[BUG]  [BUGGY]  for(Character  c  =  header.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  header.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  header.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
277	[BUG]  [BUGGY]  for(char  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(char  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(char  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
278	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length,  set.size()));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.length,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
279	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
280	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  string,  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  string,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  string,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
281	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
282	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  delimiter,  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  delimiter,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  delimiter,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
283	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  c,  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  c,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  c,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
284	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  String.valueOf(set));  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  String.valueOf(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  String.valueOf(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
285	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  String.valueOf(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
286	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()  -  1));  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length()));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
287	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length()));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length()));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
288	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set,  header.length()));  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set,  header.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set,  header.length()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length()));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
289	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
290	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
291	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
292	[BUG]  [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.isEmpty())    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
293	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
294	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
295	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(header.length));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
296	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.getName());  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.getName());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.getName());	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
297	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
298	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
299	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
300	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	65	None	replace
301	[BUG]  [BUGGY]  For(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  For(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	For(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	65	None	replace
302	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
303	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	14	None	replace
304	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	14	None	replace
305	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	14	None	replace
306	[BUG]  [BUGGY]  set.add(Arrays.asList(header));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.add(Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.add(Arrays.asList(header));	  set.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	52	None	replace
307	[BUG]  [BUGGY]  set.addAll(Arrays.asList(delimiter));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(delimiter));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(delimiter));	  set.addAll(Arrays.asList(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	52	None	replace
308	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header,  set.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header,  set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString(header,  set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	82	None	replace
309	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	1	None	replace
310	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	1	None	replace
311	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.toString(set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	1	None	replace
312	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  arrays.toString(set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	1	None	replace
313	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	72	None	replace
314	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.length));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
315	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()  -  1));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
316	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.size()));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
317	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size(),  header.length));  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size(),  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size(),  header.length));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
318	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
319	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }	  for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
320	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals( " "))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals( " "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals( " "))  {  throw  new  IllegalStateException( " ");  }	  for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
321	[BUG]  [BUGGY]  for(String  c  :  set.values())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.values())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.values())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }	  for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
322	[BUG]  [BUGGY]  For(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  For(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	For(String  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }	  for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
323	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
324	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    Throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
325	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Throwables.warning( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Throwables.warning( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    Throwables.warning( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
326	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Throwables.exception(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Throwables.exception(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    Throwables.exception(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
327	[BUG]  [BUGGY]  Throwables.log( "The  header  contains  null  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log( "The  header  contains  null  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log( "The  header  contains  null  names: "  +  set.toString());	  Throwables.log(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
328	[BUG]  [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  header.toString());  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  header.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log( "The  header  contains  duplicate  names: "  +  header.toString());	  Throwables.log(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
329	[BUG]  [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  set.size());  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log( "The  header  contains  duplicate  names: "  +  set.size());	  Throwables.log(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
330	[BUG]  [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log( "The  header  contains  duplicate  names: "  +  set.toString(),  header.length);	  Throwables.log(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
331	[BUG]  [BUGGY]  Throwables.log( "The  header  contains  unknown  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log( "The  header  contains  unknown  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log( "The  header  contains  unknown  names: "  +  set.toString());	  Throwables.log(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
332	[BUG]  [BUGGY]  Throwables.log( "The  header  contains  numeric  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log( "The  header  contains  numeric  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log( "The  header  contains  numeric  names: "  +  set.toString());	  Throwables.log(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
333	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set),    header.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
334	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set),  header.length);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set),    header.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
335	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set)+ ",  header.length: "  +  header.length);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set)+ ",  header.length: "  +  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set)+ ",  header.length: "  +  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set),    header.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
336	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length,  set.size());  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length,  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length,  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set),    header.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
337	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.length));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.length));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
338	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  Arrays.toString(set.size()));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  name: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
339	[BUG]  [BUGGY]  if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  >=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
340	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Sets.toString(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
341	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.toString(set.size()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  string.toString(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
342	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()  -  1));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
343	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Sets.toString(set.size()));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Sets.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Sets.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
344	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
345	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  return;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
346	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
347	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/'  ||  c.charAt(c.length  -  1)!=  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
348	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/')  {  return;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
349	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header),  set.size());  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header),  set.size());	  set.addAll(Arrays.asList(header));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
350	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header,  header.length));  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header,  header.length));	  set.addAll(Arrays.asList(header));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
351	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header,  0));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header,  0));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header,  0));	  set.addAll(Arrays.asList(header));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
352	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header.size()  -  set.length));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header.size()  -  set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header.size()  -  set.length));	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
353	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.toString()));  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.toString()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.toString()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
354	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.length()  -  1));  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.length()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.length()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
355	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.valueOf(header.length));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.valueOf(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.valueOf(header.length));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
356	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(header.length)));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(header.length)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(header.length)));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
357	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.size()));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.size()));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
358	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length()  -  1));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length()  -  1));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
359	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(header.length()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(header.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(header.length()));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
360	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '_')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '_')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '_')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
361	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '%')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '%')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '%')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
362	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    java.lang.Exception:  The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
363	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  }  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
364	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    java.lang.Exception:   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
365	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.toString()));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.toString()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  String.valueOf(set.toString()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
366	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.valueOf(header.length));  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.valueOf(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  set.valueOf(header.length));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
367	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  string.toString());  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  string.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  string.toString());	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
368	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
369	[BUG]  [BUGGY]  if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
370	[BUG]  [BUGGY]  if(header.length  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
371	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.size()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
372	[BUG]  [BUGGY]  if(header.length()!=  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length()!=  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length()!=  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
373	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	63	None	replace
374	[BUG]  [BUGGY]  java.lang.Exception:   "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  java.lang.Exception:   "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	java.lang.Exception:   "The  header  contains  unknown  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
375	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  -  1);  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  -  1);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.size()  -  1);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.size());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
376	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: ",  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: ",  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  unknown  names: ",  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
377	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    java.lang.Exception:  The  header  contains  null  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	25	None	add
378	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    java.lang.Exception:   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  illegal  start  of  type	25	None	add
379	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  }	  	non-compiled	[CE]  illegal  start  of  type	25	None	add
380	[BUG]  [BUGGY]  Throwables.log(Level.WARNING, "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.log(Level.WARNING, "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.log(Level.WARNING, "The  header  contains  duplicate  names: "  +  set.toString());	  Throwables.log(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
381	[BUG]  [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "CSV  header  contains  unknown  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
382	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
383	[BUG]  [BUGGY]  allowEscape(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEscape(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEscape(set.size()  -  header.length)  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
384	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size()  -  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size()  -  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size()  -  1)  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
385	[BUG]  [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size())  {  throw  new  IllegalStateException( " ");  }	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	66	None	replace
386	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  return;  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  '/'  ||  c.charAt(c.length  -  1)  ==  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	69	None	replace
387	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	77	None	replace
388	[BUG]  [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	86	None	replace
389	[BUG]  [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	86	None	replace
390	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  2,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  2,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  2,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size(),    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	28	None	replace
391	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  4,  header.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  4,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  4,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size(),    header.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	28	None	replace
392	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set.get(header)));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set.get(header)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set.get(header)));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
393	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set.length));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set.length));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
394	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.length));  [CE]  try-with-resources  is  not  supported  in  -source  1.5  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.length));    	non-compiled	[CE]  try-with-resources  is  not  supported  in  -source  1.5	82	None	replace
395	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length),  header.length);  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.length));    	non-compiled	[CE]  ';'  expected	82	None	replace
396	[BUG]  [BUGGY]  for(char  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(char  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(char  c  :  set.keySet())  {  if(c.equals(delimiter))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
397	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(escape))  {  return;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(escape))  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals(escape))  {  return;  }	          for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    return;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
398	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  delimiter);  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  delimiter);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  delimiter);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  ';'  expected	93	None	replace
399	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1,  header.length));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  1,  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
400	[BUG]  [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
401	[BUG]  [BUGGY]  java.lang.Exception:  The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  java.lang.Exception:  The  header  contains  unknown  names:   "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	java.lang.Exception:  The  header  contains  unknown  names:   "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
402	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.get(header.length)));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.get(header.length)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.get(header.length)));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
403	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.length()));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header,  set.length()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
404	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  header.toString());  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  header.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  header.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    header.toString());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
405	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()));  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
406	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.get(header.length)));  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.get(header.length)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.get(header.length)));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
407	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  2));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  2));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()  -  2));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
408	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.size()));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header.size()));	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
409	[BUG]  [BUGGY]  Throwables.exception( "The  header  contains  unknown  names: ",  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.exception( "The  header  contains  unknown  names: ",  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.exception( "The  header  contains  unknown  names: ",  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.exception(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
410	[BUG]  [BUGGY]  Throwables.exception( "The  header  contains  unknown  names:  ' "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.exception( "The  header  contains  unknown  names:  ' "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.exception( "The  header  contains  unknown  names:  ' "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    Throwables.exception(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
411	[BUG]  [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    if(!set.isEmpty())    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
412	[BUG]  [BUGGY]  if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
413	[BUG]  [BUGGY]  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
414	[BUG]  [BUGGY]  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set  <  String>  header  =  new  HashSet  <  String>(header.length);  set.addAll(Arrays.asList(header));	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
415	[BUG]  [BUGGY]  allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
416	[BUG]  [BUGGY]  allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
417	[BUG]  [BUGGY]  allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
418	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
419	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(0)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(0)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(0)!=  '/')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
420	[BUG]  [BUGGY]  for(Character  c  :  set.values())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.values())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.values())  {  if(c.charAt(c.length  -  1)!=  '/')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
421	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length()  -  1));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length()  -  1));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
422	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(header.length)));  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(header.length)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(header.length)));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
423	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header),  set.length);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header),  set.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header),  set.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set),    header.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
424	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length,  header.length);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length,  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set),  header.length,  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set),    header.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
425	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.length);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set),    header.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
426	[BUG]  [BUGGY]  allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
427	[BUG]  [BUGGY]  allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
428	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
429	[BUG]  [BUGGY]  allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
430	[BUG]  [BUGGY]  aughtException( "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  aughtException( "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	aughtException( "The  header  contains  duplicate  names: "  +  set.toString());	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
431	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.size()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
432	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()  -  1));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()  -  1));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
433	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0));  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
434	[BUG]  [BUGGY]  if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header!=  null)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    if(!set.contains(header))    {    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
435	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  null  names: ",  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  null  names: ",  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  null  names: ",  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
436	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  null  names: "  +  Arrays.toString(set));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    Throwables.warning(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
437	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length,  header.length);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length,  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  header.length,  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
438	[BUG]  [BUGGY]  if(header.length  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
439	[BUG]  [BUGGY]  Exception:  The  header  contains  null  names:   "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Exception:  The  header  contains  null  names:   "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Exception:  The  header  contains  null  names:   "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
440	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()),  set.size());  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
441	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header)+ ",  set.size());  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header)+ ",  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header)+ ",  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
442	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header),  set.size());  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
443	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(header.length)));  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(header.length)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(header.length)));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
444	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
445	[BUG]  [BUGGY]  if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
446	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()  >  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()  >  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header));  if(set.size()  >  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
447	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(set.length));  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(set.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.toString(set.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
448	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString(header.length));  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  set.toString(header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
449	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()));  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header,  set.length()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length()));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
450	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.length()));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header,  set.length()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length()));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
451	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  Arrays.toString(set,  header.length()));  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  Arrays.toString(set,  header.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  Arrays.toString(set,  header.length()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length()));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
452	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.length);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(header.length),  set.length);	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
453	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set),  header.length);  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
454	[BUG]  [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length()  ==  0)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    java.lang.Exception:    The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
455	[BUG]  [BUGGY]  if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header!=  null)  {  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()!=    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
456	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  java.lang.Exception:  The  header  contains  null  names:   "  +  set.toString());  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  java.lang.Exception:  The  header  contains  null  names:   "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    java.lang.Exception:  The  header  contains  null  names:   "  +  set.toString());	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
457	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
458	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header),  set.length);  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header),  set.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header),  set.length);	  Throwables.throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
459	[BUG]  [BUGGY]  Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
460	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  numeric  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  numeric  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  numeric  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    Throwables.warning(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
461	[BUG]  [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.warning( "The  header  contains  unknown  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.warning( "The  header  contains  unknown  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    Throwables.warning(   "The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
462	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.length));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
463	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  header.length);  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  header.length);	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
464	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  numeric  names: "  +  set.toString());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
465	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header,  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
466	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(header));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
467	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(set));  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  nullString,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
468	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  string: "  +  set.toString());  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  string: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  string: "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    duplicate    name:   "    +    set.toString());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
469	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length),  set.length);  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length),  set.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length),  set.length);	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
470	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length),  set.size());  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.length),  set.size());	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
471	[BUG]  [BUGGY]  allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEscapeChar(header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
472	[BUG]  [BUGGY]  allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
473	[BUG]  [BUGGY]  allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
474	[BUG]  [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowNonEmptyLines(set.size()  -  1)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
475	[BUG]  [BUGGY]  aughtException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  aughtException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	aughtException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
476	[BUG]  [BUGGY]  String  nullString  =  set.toString();  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  String  nullString  =  set.toString();  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	String  nullString  =  set.toString();	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
477	[BUG]  [BUGGY]  Exception:   "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Exception:   "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Exception:   "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
478	[BUG]  [BUGGY]  java.lang.Exception:   "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  java.lang.Exception:   "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	java.lang.Exception:   "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
479	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.get(0));  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.get(0));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.get(0));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
480	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.toString()));  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.toString()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.toString()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
481	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.get(0)));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.get(0)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  String.valueOf(set.get(0)));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
482	[BUG]  [BUGGY]  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
483	[BUG]  [BUGGY]  Set  <  String>  set  =  new  HashSet  <  String>(header.length);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set  <  String>  set  =  new  HashSet  <  String>(header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set  <  String>  set  =  new  HashSet  <  String>(header.length);	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
484	[BUG]  [BUGGY]  Set  <  String>  set  =  set.keySet();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set  <  String>  set  =  set.keySet();  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set  <  String>  set  =  set.keySet();	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
485	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  header.length);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
486	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  headerEnd);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  headerEnd);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header.length),  headerEnd);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
487	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length),  header.length);  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.length));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
488	[BUG]  [BUGGY]  for(char  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(char  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(char  c  :  set.keySet())  {  if(c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }	  for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
489	[BUG]  [BUGGY]  if(header.length()!=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length()!=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length()!=  0)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    if(!set.isEmpty())    {    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
490	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.size()));  [CE]  invalid  method  declaration;  return  type  required  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
491	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.get(header.length)));  [CE]  invalid  method  declaration;  return  type  required  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.get(header.length)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.get(header.length)));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
492	[BUG]  [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  null  names: "  +  Arrays.toString(set.size()));  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  null  names: "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "CSV  header  contains  null  names: "  +  Arrays.toString(set.size()));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    if(header!=    null)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
493	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "), "The  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  invalid  method  declaration;  return  type  required  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( " "), "The  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( " "), "The  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    if(header!=    null)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
494	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length()),  header.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length()),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.length()),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length),    set.size());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
495	[BUG]  [BUGGY]  if(header.length  >  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length  >  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length  >  0)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
496	[BUG]  [BUGGY]  if(header.length  <  2)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length  <  2)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length  <  2)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    java.lang.Exception:       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
497	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(set.size()));  [CE]  invalid  method  declaration;  return  type  required  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.get(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
498	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size(),  header.length));  [CE]  invalid  method  declaration;  return  type  required  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size(),  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size(),  header.length));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
499	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length()));  [CE]  invalid  method  declaration;  return  type  required  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.length()));	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
500	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()),  header.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set.size()),  header.length);	  Throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
501	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'd')  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'd')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  'd')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
502	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  'n')  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  'n')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)  ==  'n')  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    'ufffd')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
503	[BUG]  [BUGGY]  if(!skipHeaderRecord)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(!skipHeaderRecord)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(!skipHeaderRecord)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
504	[BUG]  [BUGGY]  if(header.length  ==  0)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length  ==  0)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length  ==  0)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
505	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  return;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header));  if(set.size()!=  header.length)  {  return;  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    return;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
506	[BUG]  [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  null  names: "  +  Arrays.toString(header));  [CE]  invalid  method  declaration;  return  type  required  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "CSV  header  contains  null  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "CSV  header  contains  null  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    throw    new    IllegalStateException(   "The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
507	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set.subList(0,  set.size()  -  header.length)));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set.subList(0,  set.size()  -  header.length)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set.subList(0,  set.size()  -  header.length)));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
508	[BUG]  [BUGGY]  result.addAll(Arrays.asList(set.subList(0,  set.size())));  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.addAll(Arrays.asList(set.subList(0,  set.size())));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.addAll(Arrays.asList(set.subList(0,  set.size())));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
509	[BUG]  [BUGGY]  result.add(Arrays.asList(set.size()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  result.add(Arrays.asList(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	result.add(Arrays.asList(set.size()));	          result.addAll(Arrays.asList(header));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
510	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  set.size()));  [CE]  <identifier>  expected  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header,    set.size()));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
511	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  set.size()));  [CE]  <identifier>  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header.length,    set.size()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
512	[BUG]  [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
513	[BUG]  [BUGGY]  for(Character  c  =  set.getCommentStart();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.getCommentStart();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.getCommentStart();  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
514	[BUG]  [BUGGY]  For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	For(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
515	[BUG]  [BUGGY]  allowEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowEmptyLines(header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
516	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set,  header.size()));  [CE]  invalid  method  declaration;  return  type  required  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set,  header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set,  header.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
517	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "), "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [CE]  invalid  method  declaration;  return  type  required  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( " "), "The  header  contains  unknown  names: "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( " "), "The  header  contains  unknown  names: "  +  Arrays.toString(header));	  throw    new    IllegalStateException(       "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    if(!set.isEmpty())    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:       "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
518	[BUG]  [BUGGY]  if(set.size()  >  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(set.size()  >  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(set.size()  >  header.length)  {  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set.toString());  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    java.lang.Exception:    The    header    contains    duplicate    names:       "    +    set.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
519	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names:n "  +  Arrays.toString(header.length));  [CE]  invalid  method  declaration;  return  type  required  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names:n "  +  Arrays.toString(header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names:n "  +  Arrays.toString(header.length));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header.length));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
520	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names:  ' "  +  set.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names:  ' "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names:  ' "  +  set.toString());	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    set.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
521	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(set,  header.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
522	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( " ")  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( " ")  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    if(set.size()!=    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
523	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  header.length));  [CE]  invalid  method  declaration;  return  type  required  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  header.length));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()  -  1,  header.length),  header.length));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1,    header.length));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
524	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size())+ ",  header.length: "  +  header.length);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size())+ ",  header.length: "  +  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size())+ ",  header.length: "  +  header.length);	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()),    header.length);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
525	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.get(0)));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.get(0)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.get(0)));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
526	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()  +  1));  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()  +  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.size()  +  1));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
527	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.charAt(0)));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.charAt(0)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  String.valueOf(set.charAt(0)));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    String.valueOf(set.size()));    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
528	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set,  header));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(header,    set));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
529	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  set.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  set.toString());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
530	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
531	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
532	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
533	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa();  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa();  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa();	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
534	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  =  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  =  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  =	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
535	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapataire(set.size();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapataire(set.size();  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapataire(set.size();	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
536	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapataire(set.size();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapataire(set.size();  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapataire(set.size();	          if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
537	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));  [CE]  <identifier>  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
538	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0)));  [CE]  <identifier>  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0)));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0)));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
539	[BUG]  [BUGGY]  for(Character  c  =  set.charAt(0);  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.charAt(0);  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.charAt(0);  c!=  null;  c  =  c.charAt(c))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
540	[BUG]  [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
541	[BUG]  [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c).charAt(0)  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c).charAt(0)  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.iterator();  c!=  null;  c  =  c.charAt(c).charAt(0)  {  if(!c.isEmpty())  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.iterator();    c!=    null;    c    =    c.charAt(c))    {    if(!c.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
542	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names:  set.toString() ");  [CE]  <identifier>  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  null  names:  set.toString() ");  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  null  names:  set.toString() ");	  throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
543	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set,  set.size()));  [CE]  <identifier>  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set,  set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set,  set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    set.size()));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
544	[BUG]  [BUGGY]  if(header.length  ==  0)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length  ==  0)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length  ==  0)  {  set.addAll(Arrays.asList(header));  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  set.addAll(Arrays.asList(header));    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
545	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));  [CE]  <identifier>  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
546	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()  -  1));  [CE]  <identifier>  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
547	[BUG]  [BUGGY]  if(header.length!=  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length!=  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length!=  0)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
548	[BUG]  [BUGGY]  if(header.length  <  2)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  if(header.length  <  2)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	if(header.length  <  2)  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  throw    new    IllegalStateException(       "The    header    contains    null    names:       "    +    Arrays.toString(header));    java.lang.Exception:    The    header    contains    null    names:       "    +    Arrays.toString(header));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
549	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header.length  -  1));  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header.length  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header.length  -  1));	  set.addAll(Arrays.asList(header.length));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
550	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
551	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  set.size());  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  set.size());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.size()),  set.size());	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    1));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
552	[BUG]  [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length),  true);  [CE]  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(set.size()  -  header.length),  true);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(set.size()  -  header.length),  true);	  set.addAll(Arrays.asList(set.size()    -    header.length));    	non-compiled	[CE]  	57	None	replace
553	[BUG]  [BUGGY]  allowUnknownFormat(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowUnknownFormat(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowUnknownFormat(set.size())  {  throw  new  IllegalStateException( "The  header  contains  null  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  	83	None	replace
554	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( " ")  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( " ")  if(set.size()  ==  header.length)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
555	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()  -  1));  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()  -  1));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()  -  1));	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
556	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()),  header.length);  [CE]  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()),  header.length);  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set.size()),  header.length);	  throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  	42	None	replace
557	[BUG]  [BUGGY]  set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [CE]  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  	67	None	replace
558	[BUG]  [BUGGY]  Set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [CE]  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Set.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  	67	None	replace
559	[BUG]  [BUGGY]  cuplur.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [CE]  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  cuplur.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	cuplur.addAll(Arrays.asList(header));  }  else  {  set.addAll(Arrays.asList(header));  }	          if(set.size()    ==    header.length)    {    set.addAll(Arrays.asList(header));    }    else    {    set.addAll(Arrays.asList(header));    }    	non-compiled	[CE]  	67	None	replace
560	[BUG]  [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	allowSurroundingSpaces(set.size()  -  header.length)  {  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(header));  }	  if(set.size()    ==    header.length)    {    throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  	71	None	replace
561	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.length,  Arrays.toString(set));  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.length,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  header.length,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  	11	None	replace
562	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  header.length,  Arrays.toString(set));  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  header.length,  Arrays.toString(set));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  header.length,  Arrays.toString(set));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  	11	None	replace
563	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set.size()));  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  set,  Arrays.toString(set.size()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    set,    Arrays.toString(set));    	non-compiled	[CE]  	11	None	replace
564	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0));  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  duplicate  names: "  +  Arrays.toString(set.get(0));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()    -    2));    	non-compiled	[CE]  	80	None	replace
565	[BUG]  [BUGGY]  for(Character  c  =  set.getCommentStart();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.getCommentStart();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.getCommentStart();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	86	None	replace
566	[BUG]  [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.getCharacter();  c!=  null;  c  =  c.charAt(c).charAt(0))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	86	None	replace
567	[BUG]  [BUGGY]  for(Character  c  =  set.getEscapeCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  =  set.getEscapeCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  =  set.getEscapeCharacter();  c!=  null;  c  =  c.charAt(c))  {  if(c.escape  ==  false)  {  throw  new  IllegalStateException( " ");  }	          for(Character    c    =    set.getCharacter();    c!=    null;    c    =    c.charAt(c))    {    if(c.escape    ==    false)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	86	None	replace
568	[BUG]  [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(delimiter)||  c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(String  c  :  set.keySet())  {  if(c.equals(delimiter)||  c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(String  c  :  set.keySet())  {  if(c.equals(delimiter)||  c.equals(delimiter))  {  throw  new  IllegalStateException( " ");  }	  for(String    c    :    set.keySet())    {    if(c.equals(delimiter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	55	None	replace
569	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  String.valueOf(set.size()));  [CE]  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    String.valueOf(set.size()));    java.lang.Exception:  String.valueOf(set.size()));	  	non-compiled	[CE]  	25	None	add
570	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }  [CE]  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    if(!set.isEmpty())  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }	  	non-compiled	[CE]  	19	None	add
571	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }  [CE]  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    if(set.size()!=  header.length)  {  throw  new  IllegalStateException( "The  header  contains  null  names:   "  +  set.toString());  }	  	non-compiled	[CE]  	19	None	add
572	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  java.lang.Exception:   "The  header  contains  null  names:   "  +  set.toString());  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  null  names:   "  +  set.toString());  java.lang.Exception:   "The  header  contains  null  names:   "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    null    names:   "    +    set.toString());    java.lang.Exception:   "The  header  contains  null  names:   "  +  set.toString());	  	non-compiled	[CE]  	19	None	add
573	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set.size()));  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throw  new  IllegalStateException( "The  header  contains  duplicate  names:  ' "  +  Arrays.toString(set.size()));	  Throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set.size()));    	non-compiled	[CE]  	88	None	replace
574	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names:n "  +  Arrays.toString(header));  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names:n "  +  Arrays.toString(header));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	Throwables.throw  new  IllegalStateException( "The  header  contains  unknown  names:n "  +  Arrays.toString(header));	  Throwables.throw    new    IllegalStateException(   "The    header    contains    unknown    names:   "    +    Arrays.toString(header));    	non-compiled	[CE]  	46	None	replace
575	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.length()));  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.length()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( "The  header  contains  unknown  names: "  +  Arrays.toString(set,  header.length()));	  throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    Arrays.toString(set,    header.length()));    	non-compiled	[CE]  	51	None	replace
576	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  String.valueOf(set.size()));  [CE]  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  java.lang.Exception:  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    java.lang.Exception:  String.valueOf(set.size()));	  	non-compiled	[CE]  	12	None	add
577	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Exception:   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [CE]  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException(   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  Exception:   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw    new    IllegalStateException(   "The    header    contains    duplicate    names:   "    +    String.valueOf(set.size()));    Exception:   "The  header  contains  duplicate  names:   "  +  String.valueOf(set.size()));	  	non-compiled	[CE]  	12	None	add
578	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "), "The  header  contains  duplicate  names: "  +  set.toString());  [CE]  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  throw  new  IllegalStateException( " "), "The  header  contains  duplicate  names: "  +  set.toString());  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	throw  new  IllegalStateException( " "), "The  header  contains  duplicate  names: "  +  set.toString());	  throw    new    IllegalStateException(       "The    header    contains    duplicate    names:       "    +    set.toString());    if(!set.isEmpty())    {    throw    new    IllegalStateException(   "The    header    contains    duplicate    names:       "    +    set.toString());    }    	non-compiled	[CE]  	90	None	replace
579	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(0)  ==  '/')  {  return;  }  [CE]  [FE]                AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(0)  ==  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(c.length  -  1)!=  '/'  ||  c.charAt(0)  ==  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  	69	None	replace
580	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(0)!=  '/')  {  return;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {      [BUGGY]  for(Character  c  :  set.keySet())  {  if(c.charAt(0)!=  '/')  {  return;  }  [BUGGY]      }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	1.0	669	669	1	replace	for(Character  c  :  set.keySet())  {  if(c.charAt(0)!=  '/')  {  return;  }	          for(Character    c    :    set.keySet())    {    if(c.charAt(c.length    -    1)!=    '/')    {    return;    }    	non-compiled	[CE]  	69	None	replace
