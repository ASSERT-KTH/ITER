bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart.length);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart.length);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length,  header.length);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length,  header.length);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	3	None	replace
3	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  +  1);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  +  1);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]  final  LinkedList  <  String>  set  =  new  LinkedList  <  String>(header.length,  header.length);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  LinkedList  <  String>  set  =  new  LinkedList  <  String>(header.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  LinkedList  <  String>  set  =  new  LinkedList  <  String>(header.length,  header.length);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	3	None	replace
6	[BUG]  [BUGGY]  Character[]  header  =  getHeaders();  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeaders();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeaders();	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
7	[BUG]  [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[set.size()  ]);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[set.size()  ]);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getCharacters().toArray(new  Character[set.size()  ]);	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
8	[BUG]  [BUGGY]  Character[]  header  =  getHeader();  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeader();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeader();	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
9	[BUG]  [BUGGY]  Character[]  header  =  getEscapeCharacters();  [CE]  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getEscapeCharacters();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getEscapeCharacters();	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
10	[BUG]  [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[size()  ]);  [CE]  [FE]                                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[size()  ]);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getCharacters().toArray(new  Character[size()  ]);	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
11	[BUG]  [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[0]);  [CE]  [FE]                                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[0]);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getCharacters().toArray(new  Character[0]);	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
12	[BUG]  [BUGGY]  Character  header  =(Character)getRecordSeparator();  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getRecordSeparator();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getRecordSeparator();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
13	[BUG]  [BUGGY]  Character  header  =(Character)getHeaderRecord();  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getHeaderRecord();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getHeaderRecord();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
14	[BUG]  [BUGGY]  Character  header  =(Character)getEscapeChar();  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getEscapeChar();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getEscapeChar();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
15	[BUG]  [BUGGY]  Character  header  =(Character)getEscapeSurroundingSpaces();  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getEscapeSurroundingSpaces();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getEscapeSurroundingSpaces();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
16	[BUG]  [BUGGY]  Character  header  =(Character)getSurroundingSpaces();  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getSurroundingSpaces();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getSurroundingSpaces();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
17	[BUG]  [BUGGY]  Character  header  =(Character)getDelimiter();  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getDelimiter();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getDelimiter();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
18	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar.length);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar.length);    	non-compiled	[CE]  	49	None	replace
19	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar.length  +  1);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar.length  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar.length);    	non-compiled	[CE]  	49	None	replace
20	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar.length);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar.length);    	non-compiled	[CE]  	49	None	replace
21	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(quoteChar.length,  header.length);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(quoteChar.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(quoteChar.length,  header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar.length);    	non-compiled	[CE]  	49	None	replace
22	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar.length  -  1);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar.length  -  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar.length);    	non-compiled	[CE]  	49	None	replace
23	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header,  header.length);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header,  header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    header.length);    	non-compiled	[CE]  	50	None	replace
24	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header,  header.length);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header,  header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    header.length);    	non-compiled	[CE]  	50	None	replace
25	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  commentStart.length);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  commentStart.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  commentStart.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    header.length);    	non-compiled	[CE]  	50	None	replace
26	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  header.length  +  1);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  header.length  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    header.length);    	non-compiled	[CE]  	50	None	replace
27	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header,  header.length);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header,  header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    header.length);    	non-compiled	[CE]  	50	None	replace
28	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  header.length  -  1);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  header.length  -  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    header.length);    	non-compiled	[CE]  	50	None	replace
29	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar.length);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    header.length);    	non-compiled	[CE]  	50	None	replace
30	[BUG]  [BUGGY]  Character  c  =  getCharacter().charAt(0);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().charAt(0);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().charAt(0);	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
31	[BUG]  [BUGGY]  Character  c  =  getCharacter().charAt(i);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().charAt(i);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().charAt(i);	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
32	[BUG]  [BUGGY]  Character  c  =  getCharacter().getCharacterEncoding();  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().getCharacterEncoding();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().getCharacterEncoding();	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
33	[BUG]  [BUGGY]  Character  c  =  getDelimiter();  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getDelimiter();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getDelimiter();	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
34	[BUG]  [BUGGY]  Character  c  =  getCharacter().toCharArray();  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().toCharArray();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().toCharArray();	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
35	[BUG]  [BUGGY]  Character  c  =  getCharacterEncoding();  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacterEncoding();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacterEncoding();	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
36	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  /  2);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  /  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  /  2);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    /    1);    	non-compiled	[CE]  	46	None	replace
37	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  /  1);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  /  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  /  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    /    1);    	non-compiled	[CE]  	46	None	replace
38	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  /  1);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  /  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  /  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    /    1);    	non-compiled	[CE]  	46	None	replace
39	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  /  1);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  /  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  /  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    /    1);    	non-compiled	[CE]  	46	None	replace
40	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	35	None	replace
41	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	35	None	replace
42	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar,  delimiter);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar,  delimiter);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	35	None	replace
43	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  commentStart.length);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  commentStart.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  commentStart.length);	  final    Set    <    String>    set    =    new    LinkedHashSet    <    String>(header.length,    header.length);    	non-compiled	[CE]  	6	None	replace
44	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  2);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  2);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length    -    1);    	non-compiled	[CE]  	22	None	replace
45	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  2);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  2);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length    -    1);    	non-compiled	[CE]  	22	None	replace
46	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar  +  1);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar  +  1);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	10	None	replace
47	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(quoteChar,  header.length);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(quoteChar,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(quoteChar,  header.length);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	10	None	replace
48	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(line.length,  quoteChar);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(line.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(line.length,  quoteChar);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	10	None	replace
49	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(commentStart.length,  quoteChar);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(commentStart.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(commentStart.length,  quoteChar);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	10	None	replace
50	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(c.length,  quoteChar);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(c.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(c.length,  quoteChar);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	10	None	replace
51	[BUG]  [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length  +  1);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length  +  1);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    +    1);    	non-compiled	[CE]  	7	None	replace
52	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length)+  1;  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length)+  1;  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length)+  1;	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    +    1);    	non-compiled	[CE]  	7	None	replace
53	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar,  delimiter);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    quoteChar);    	non-compiled	[CE]  	47	None	replace
54	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header,  quoteChar);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header,  quoteChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    quoteChar);    	non-compiled	[CE]  	47	None	replace
55	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header,  quoteChar);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header,  quoteChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    quoteChar);    	non-compiled	[CE]  	47	None	replace
56	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  commentStart);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  commentStart);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    quoteChar);    	non-compiled	[CE]  	47	None	replace
57	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  c);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  c);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    quoteChar);    	non-compiled	[CE]  	47	None	replace
58	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    quoteChar);    	non-compiled	[CE]  	47	None	replace
59	[BUG]  [BUGGY]  Character[]  header  =  quotePolicy.getHeaders();  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quotePolicy.getHeaders();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quotePolicy.getHeaders();	  Character[]    header    =    quoteChar.getHeaders();    	non-compiled	[CE]  	28	None	replace
60	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.getHeaderRecords();  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.getHeaderRecords();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.getHeaderRecords();	  Character[]    header    =    quoteChar.getHeaders();    	non-compiled	[CE]  	28	None	replace
61	[BUG]  [BUGGY]  Character[]  header  =  this.quoteChar.getHeaders();  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  this.quoteChar.getHeaders();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  this.quoteChar.getHeaders();	  Character[]    header    =    quoteChar.getHeaders();    	non-compiled	[CE]  	28	None	replace
62	[BUG]  [BUGGY]  Character[]  header  =  delimiter.getHeaders();  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  delimiter.getHeaders();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  delimiter.getHeaders();	  Character[]    header    =    quoteChar.getHeaders();    	non-compiled	[CE]  	28	None	replace
63	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.getRecordHeaders();  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.getRecordHeaders();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.getRecordHeaders();	  Character[]    header    =    quoteChar.getHeaders();    	non-compiled	[CE]  	28	None	replace
64	[BUG]  [BUGGY]  Character[]  header  =  c.getHeaders();  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  c.getHeaders();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  c.getHeaders();	  Character[]    header    =    quoteChar.getHeaders();    	non-compiled	[CE]  	28	None	replace
65	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( ": ");  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( ": ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( ": ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
66	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "- ");  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "- ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "- ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
67	[BUG]  [BUGGY]  Character[]  header  =  quotePolicy.split( "null ");  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quotePolicy.split( "null ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quotePolicy.split( "null ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
68	[BUG]  [BUGGY]  Character[]  header  =  quotePolicy.split( "none ");  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quotePolicy.split( "none ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quotePolicy.split( "none ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
69	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "; ");  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "; ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "; ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
70	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "_ ");  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "_ ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "_ ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
71	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length());  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length());	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    -    1);    	non-compiled	[CE]  	21	None	replace
72	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  3);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  3);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    -    1);    	non-compiled	[CE]  	21	None	replace
73	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  -  1);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  -  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    -    1);    	non-compiled	[CE]  	5	None	replace
74	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  -  2);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  -  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  -  2);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    -    1);    	non-compiled	[CE]  	5	None	replace
75	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  -  1);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  -  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    -    1);    	non-compiled	[CE]  	5	None	replace
76	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  header.length  -  1);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  header.length  -  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    -    1);    	non-compiled	[CE]  	5	None	replace
77	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  -  3);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  -  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  -  3);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    -    1);    	non-compiled	[CE]  	5	None	replace
78	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  commentStart);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  commentStart);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
79	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  quoteChar,  delimiter);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  quoteChar,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  quoteChar,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
80	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(c.length,  quoteChar);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(c.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(c.length,  quoteChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
81	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  c.length);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  c.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  c.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
82	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  escapeChar);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
83	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  quoteChar);  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c,  quoteChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
84	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size()  -  1);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size()  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size()  -  1);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.size());    	non-compiled	[CE]  	8	None	replace
85	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size()  +  1);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size()  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size()  +  1);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.size());    	non-compiled	[CE]  	8	None	replace
86	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(recordSeparator.size());  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(recordSeparator.size());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(recordSeparator.size());	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.size());    	non-compiled	[CE]  	8	None	replace
87	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.size());  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.size());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.size());	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.size());    	non-compiled	[CE]  	8	None	replace
88	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    +    2);    	non-compiled	[CE]  	11	None	replace
89	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  3);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  3);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    +    2);    	non-compiled	[CE]  	11	None	replace
90	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  *  2);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  *  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  *  2);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    +    2);    	non-compiled	[CE]  	11	None	replace
91	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart.length);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart.length);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    header.length);    	non-compiled	[CE]  	45	None	replace
92	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    header.length);    	non-compiled	[CE]  	45	None	replace
93	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length  +  1);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length  +  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    header.length);    	non-compiled	[CE]  	45	None	replace
94	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    header.length);    	non-compiled	[CE]  	45	None	replace
95	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(commentStart);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(commentStart);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
96	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(0);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(0);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(0);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
97	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(commentStart  +  1);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(commentStart  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(commentStart  +  1);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
98	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(quoteStart  +  1);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(quoteStart  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(quoteStart  +  1);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
99	[BUG]  [BUGGY]  char  header  =  quoteCharacter.charAt(quoteStart);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  char  header  =  quoteCharacter.charAt(quoteStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	char  header  =  quoteCharacter.charAt(quoteStart);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
100	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(0,  quoteCharacter.length());  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(0,  quoteCharacter.length());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(0,  quoteCharacter.length());	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
101	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(commentStart  -  1);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(commentStart  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(commentStart  -  1);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
102	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "commentStart ");  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "commentStart ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "commentStart ");	  Character[]    header    =    quoteChar.split(   "u   ");    	non-compiled	[CE]  	43	None	replace
103	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "u000 ");  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "u000 ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "u000 ");	  Character[]    header    =    quoteChar.split(   "u   ");    	non-compiled	[CE]  	43	None	replace
104	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "u00e8 ");  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "u00e8 ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "u00e8 ");	  Character[]    header    =    quoteChar.split(   "u   ");    	non-compiled	[CE]  	43	None	replace
105	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size(),  header.length);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size(),  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size(),  header.length);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	1	None	replace
106	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
107	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  +  1);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  +  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
108	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
109	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(commentStart,  header.length);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(commentStart,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(commentStart,  header.length);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
110	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  4);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  4);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  -  4);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    4);    	non-compiled	[CE]  	39	None	replace
111	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  4);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  4);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  4);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    4);    	non-compiled	[CE]  	39	None	replace
112	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar,  delimiter);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
113	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar,  delimiter);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
114	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header.length,  quoteChar,  delimiter);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header.length,  quoteChar,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header.length,  quoteChar,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
115	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  escape);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  escape);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  escape);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
116	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart,  delimiter);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
117	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  c,  delimiter);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  c,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
118	[BUG]  [BUGGY]  final  LinkedList  <  String>  set  =  new  LinkedList  <  String>(header.length  +  1);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  LinkedList  <  String>  set  =  new  LinkedList  <  String>(header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  LinkedList  <  String>  set  =  new  LinkedList  <  String>(header.length  +  1);	  final    LinkedList    <    String>    set    =    new    LinkedList    <    String>(header.length);    	non-compiled	[CE]  	12	None	replace
119	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  +  2);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  +  2);	  final    Set    <    String>    set    =    new    LinkedHashSet    <    String>(header.length    +    1);    	non-compiled	[CE]  	13	None	replace
120	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(commentStart);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(commentStart);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
121	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(commentStart  +  1);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(commentStart  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(commentStart  +  1);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
122	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(0);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(0);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(0);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
123	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(commentStart  -  1);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(commentStart  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(commentStart  -  1);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
124	[BUG]  [BUGGY]  Character  header  =  delimiter.charAt(quoteStart);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  delimiter.charAt(quoteStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  delimiter.charAt(quoteStart);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
125	[BUG]  [BUGGY]  Character  header  =  c.charAt(quoteStart);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  c.charAt(quoteStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  c.charAt(quoteStart);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
126	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(escape);  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(escape);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(escape);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
127	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  2);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  2);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar    +    1);    	non-compiled	[CE]  	18	None	replace
128	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar  +  1);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar    +    1);    	non-compiled	[CE]  	18	None	replace
129	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  +  1);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar    +    1);    	non-compiled	[CE]  	18	None	replace
130	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  3);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  3);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar    +    1);    	non-compiled	[CE]  	18	None	replace
131	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  c);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar  +  c);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar    +    1);    	non-compiled	[CE]  	18	None	replace
132	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart.length,  header.length);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart.length,  header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart.length);    	non-compiled	[CE]  	4	None	replace
133	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  +  1);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart.length);    	non-compiled	[CE]  	4	None	replace
134	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart.length);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart.length);    	non-compiled	[CE]  	4	None	replace
135	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  -  1);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  -  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart.length);    	non-compiled	[CE]  	4	None	replace
136	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  +  2);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header.length  +  2);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    +    1);    	non-compiled	[CE]  	2	None	replace
137	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  +  1);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    +    1);    	non-compiled	[CE]  	2	None	replace
138	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  header.length  +  1);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  header.length  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    header.length    +    1);    	non-compiled	[CE]  	2	None	replace
139	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart,  header.length);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart,  header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	15	None	replace
140	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart.length,  header);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart.length,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart.length,  header);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	15	None	replace
141	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart,  header);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(commentStart,  header);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	15	None	replace
142	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  3);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  -  3);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    3);    	non-compiled	[CE]  	24	None	replace
143	[BUG]  [BUGGY]  Character  header  =  getCharacter(c,  commentStart);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(c,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(c,  commentStart);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
144	[BUG]  [BUGGY]  Character  header  =  getCharacter(c,  quoteChar);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(c,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(c,  quoteChar);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
145	[BUG]  [BUGGY]  Character  header  =  getCharacter(c,  delimiter);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(c,  delimiter);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
146	[BUG]  [BUGGY]  Character  header  =  getCharacterRecord(c);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacterRecord(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacterRecord(c);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
147	[BUG]  [BUGGY]  Character  header  =  getCharacter(commentStart);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(commentStart);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
148	[BUG]  [BUGGY]  Character  header  =  getCharacter(c,  escape);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(c,  escape);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(c,  escape);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
149	[BUG]  [BUGGY]  Character[]  header  =  getHeader(c,  quoteChar);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeader(c,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeader(c,  quoteChar);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
150	[BUG]  [BUGGY]  Character[]  header  =  getHeader(header);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeader(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeader(header);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
151	[BUG]  [BUGGY]  Character[]  header  =  getHeader(c,  delimiter);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeader(c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeader(c,  delimiter);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
152	[BUG]  [BUGGY]  Character[]  header  =  getChars(c);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getChars(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getChars(c);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
153	[BUG]  [BUGGY]  Character[]  header  =  getHeader(c,  commentStart);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeader(c,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeader(c,  commentStart);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
154	[BUG]  [BUGGY]  Character[]  header  =  getRecordHeader(c);  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getRecordHeader(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getRecordHeader(c);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
155	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length  +  1);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length  +  1);	  final    ArrayList    <    String>    set    =    new    TreeSet    <    String>(header.length);    	non-compiled	[CE]  	34	None	replace
156	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  LinkedList  <  String>(header.length);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  LinkedList  <  String>(header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  LinkedList  <  String>(header.length);	  final    ArrayList    <    String>    set    =    new    TreeSet    <    String>(header.length);    	non-compiled	[CE]  	34	None	replace
157	[BUG]  [BUGGY]  Character  header  =  getCharacterEncoding();  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacterEncoding();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacterEncoding();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
158	[BUG]  [BUGGY]  Character  header  =  getCharacterRecord();  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacterRecord();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacterRecord();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
159	[BUG]  [BUGGY]  Character  header  =  getHeader();  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
160	[BUG]  [BUGGY]  Character  header  =  getChar();  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getChar();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getChar();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
161	[BUG]  [BUGGY]  Character  header  =  getEscapeChar();  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getEscapeChar();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getEscapeChar();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
162	[BUG]  [BUGGY]  Character  header  =  getRecordChar();  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getRecordChar();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getRecordChar();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
163	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  escapeChar);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    escapeChar);    	non-compiled	[CE]  	48	None	replace
164	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  escapeChar);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    escapeChar);    	non-compiled	[CE]  	48	None	replace
165	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  escapeChar);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    escapeChar);    	non-compiled	[CE]  	48	None	replace
166	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  escapeChar);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    escapeChar);    	non-compiled	[CE]  	48	None	replace
167	[BUG]  [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  1);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  1);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
168	[BUG]  [BUGGY]  List  <  String>  set  =  new  ArrayList  <  String>(header.length);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  List  <  String>  set  =  new  ArrayList  <  String>(header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	List  <  String>  set  =  new  ArrayList  <  String>(header.length);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
169	[BUG]  [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size());  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.size());	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
170	[BUG]  [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
171	[BUG]  [BUGGY]  Set  <  String>  set  =  new  HashSet  <  String>(header.length);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Set  <  String>  set  =  new  HashSet  <  String>(header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Set  <  String>  set  =  new  HashSet  <  String>(header.length);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
172	[BUG]  [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
173	[BUG]  [BUGGY]  Character[]  header  =  quotePolicy.getHeader();  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quotePolicy.getHeader();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quotePolicy.getHeader();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
174	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.getHeaderRecord();  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.getHeaderRecord();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.getHeaderRecord();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
175	[BUG]  [BUGGY]  Character[]  header  =  delimiter.getHeader();  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  delimiter.getHeader();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  delimiter.getHeader();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
176	[BUG]  [BUGGY]  Character[]  header  =  this.quoteChar.getHeader();  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  this.quoteChar.getHeader();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  this.quoteChar.getHeader();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
177	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.getRecordHeader();  [CE]  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.getRecordHeader();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.getRecordHeader();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
178	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.toString();  [CE]  [FE]                                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.toString();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.toString();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
179	[BUG]  [BUGGY]  Character[]  header  =  quoteCharacters.get(c,  delimiter);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteCharacters.get(c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteCharacters.get(c,  delimiter);	  Character[]    header    =    quoteCharacters.get(c);    	non-compiled	[CE]  	56	None	replace
180	[BUG]  [BUGGY]  Character[]  header  =  set.get(c);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  set.get(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  set.get(c);	  Character[]    header    =    quoteCharacters.get(c);    	non-compiled	[CE]  	56	None	replace
181	[BUG]  [BUGGY]  Character[]  header  =  quoteCharacters.get(escape);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteCharacters.get(escape);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteCharacters.get(escape);	  Character[]    header    =    quoteCharacters.get(c);    	non-compiled	[CE]  	56	None	replace
182	[BUG]  [BUGGY]  Character[]  header  =  quoteCharacters.get(header);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteCharacters.get(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteCharacters.get(header);	  Character[]    header    =    quoteCharacters.get(c);    	non-compiled	[CE]  	56	None	replace
183	[BUG]  [BUGGY]  Character[]  header  =  quoteCharacters.get(c,  commentStart);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteCharacters.get(c,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteCharacters.get(c,  commentStart);	  Character[]    header    =    quoteCharacters.get(c);    	non-compiled	[CE]  	56	None	replace
184	[BUG]  [BUGGY]  Character[]  header  =  this.quoteCharacters.get(c);  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  this.quoteCharacters.get(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  this.quoteCharacters.get(c);	  Character[]    header    =    quoteCharacters.get(c);    	non-compiled	[CE]  	56	None	replace
185	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  quoteChar);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  quoteChar);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	16	None	replace
186	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(quoteChar.length,  header);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(quoteChar.length,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(quoteChar.length,  header);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	16	None	replace
187	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  c);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  c);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
188	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  header);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  header);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
189	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  c);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length,  c);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
190	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header.length);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c,  header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
191	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  c);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length,  c);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
192	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  c,  quoteChar);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  c,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  c,  quoteChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
193	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(c,  commentStart);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(c,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(c,  commentStart);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
194	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(c,  delimiter);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(c,  delimiter);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
195	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(escape,  c);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(escape,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(escape,  c);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
196	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(commentStart,  escape);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(commentStart,  escape);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(commentStart,  escape);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
197	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(header,  escape);  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(header,  escape);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(header,  escape);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
198	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(c,  escape,  commentStart);  [CE]  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(c,  escape,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(c,  escape,  commentStart);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
199	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(c,  escape,  delimiter);  [CE]  [FE]                                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(c,  escape,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(c,  escape,  delimiter);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
200	[BUG]  [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length,  quoteChar);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length,  quoteChar);	  final    java.util.ArrayList    <    String>    set    =    new    java.util.ArrayList    <    String>(header.length);    	non-compiled	[CE]  	9	None	replace
201	[BUG]  [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.size());  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.size());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.size());	  final    java.util.ArrayList    <    String>    set    =    new    java.util.ArrayList    <    String>(header.length);    	non-compiled	[CE]  	9	None	replace
202	[BUG]  [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length  +  2);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length  +  2);	  final    java.util.ArrayList    <    String>    set    =    new    java.util.ArrayList    <    String>(header.length);    	non-compiled	[CE]  	9	None	replace
203	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  2);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  2);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    *    1);    	non-compiled	[CE]  	51	None	replace
204	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  *  1);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  *  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length  *  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    *    1);    	non-compiled	[CE]  	51	None	replace
205	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  *  1);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  *  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  ArrayList  <  String>(header.length  *  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    *    1);    	non-compiled	[CE]  	51	None	replace
206	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  *  1);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  *  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  *  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    *    1);    	non-compiled	[CE]  	51	None	replace
207	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  +  2);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  +  2);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    +    1);    	non-compiled	[CE]  	33	None	replace
208	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length  +  1);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  TreeSet  <  String>(header.length  +  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    +    1);    	non-compiled	[CE]  	33	None	replace
209	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  -  2);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  -  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  -  2);	  final    Set    <    String>    set    =    new    LinkedHashSet    <    String>(header.length    -    1);    	non-compiled	[CE]  	23	None	replace
210	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  -  1);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  -  1);	  final    Set    <    String>    set    =    new    LinkedHashSet    <    String>(header.length    -    1);    	non-compiled	[CE]  	23	None	replace
211	[BUG]  [BUGGY]  Character  header  =  getHeader(c,  quoteChar);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader(c,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader(c,  quoteChar);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
212	[BUG]  [BUGGY]  Character  header  =  getChar(c);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getChar(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getChar(c);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
213	[BUG]  [BUGGY]  Character  header  =  getHeader(c,  commentStart);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader(c,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader(c,  commentStart);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
214	[BUG]  [BUGGY]  Character  header  =  getHeaderRecord(c);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeaderRecord(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeaderRecord(c);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
215	[BUG]  [BUGGY]  Character  header  =  getHeader(c,  delimiter);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader(c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader(c,  delimiter);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
216	[BUG]  [BUGGY]  Character  header  =  getHeader(c  +  1);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader(c  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader(c  +  1);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
217	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(header);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(header);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
218	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(escape);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(escape);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(escape);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
219	[BUG]  [BUGGY]  Character[]  header  =  delimiter.quoteChar(c);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  delimiter.quoteChar(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  delimiter.quoteChar(c);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
220	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(commentStart);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(commentStart);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
221	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(commentStart,  c);  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(commentStart,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(commentStart,  c);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
222	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  2);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  2);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    -    1);    	non-compiled	[CE]  	25	None	replace
223	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length  -  1);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  TreeSet  <  String>(header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  TreeSet  <  String>(header.length  -  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    -    1);    	non-compiled	[CE]  	25	None	replace
224	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length  -  1);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.length  -  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    -    1);    	non-compiled	[CE]  	25	None	replace
225	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  3);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  3);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    -    1);    	non-compiled	[CE]  	25	None	replace
226	[BUG]  [BUGGY]  final  List  <  String>  set  =  new  LinkedList  <  String>(header.length);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  List  <  String>  set  =  new  LinkedList  <  String>(header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  List  <  String>  set  =  new  LinkedList  <  String>(header.length);	  final    List    <    String>    set    =    new    TreeSet    <    String>(header.length);    	non-compiled	[CE]  	44	None	replace
227	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  +  1);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  +  1);	  final    Set    <    String>    set    =    new    LinkedHashSet    <    String>(header.length    +    1);    	non-compiled	[CE]  	13	None	replace
228	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(quoteCharacter.length);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(quoteCharacter.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(quoteCharacter.length);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
229	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(quoteCharacter.length());  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(quoteCharacter.length());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(quoteCharacter.length());	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
230	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(lineStart);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(lineStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(lineStart);	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
231	[BUG]  [BUGGY]  Character  c  =  this.getCharacter();  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  this.getCharacter();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  this.getCharacter();	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
232	[BUG]  [BUGGY]  Character  c  =  getCharacter().charAt(header);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().charAt(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().charAt(header);	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
233	[BUG]  [BUGGY]  Character  c  =  getCharacter().getChars(0,  header);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().getChars(0,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().getChars(0,  header);	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
234	[BUG]  [BUGGY]  Character  c  =  getCSVCharacter();  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCSVCharacter();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCSVCharacter();	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
235	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  descriptionStart);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  descriptionStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  descriptionStart);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	10	None	replace
236	[BUG]  [BUGGY]  Character[]  header  =  c.getHeader();  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  c.getHeader();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  c.getHeader();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
237	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.toCharArray();  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.toCharArray();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.toCharArray();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
238	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.getHeader(recordSeparator);  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.getHeader(recordSeparator);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.getHeader(recordSeparator);	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
239	[BUG]  [BUGGY]  Character  header  =  getHeader(header);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader(header);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
240	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  3);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  3);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    3);    	non-compiled	[CE]  	24	None	replace
241	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteChar);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	16	None	replace
242	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length,  quoteChar);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length,  quoteChar);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	16	None	replace
243	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.size());  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.size());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.size());	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.size());    	non-compiled	[CE]  	8	None	replace
244	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  + "') ");  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  + "') ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  + "') ");	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	15	None	replace
245	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  + "');  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  + "');  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  + "');	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	15	None	replace
246	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  header);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
247	[BUG]  [BUGGY]  Character[]  header  =  quotes.get(c);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quotes.get(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quotes.get(c);	  Character[]    header    =    quoteCharacters.get(c);    	non-compiled	[CE]  	56	None	replace
248	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  header.length);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  header.length);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    header.length);    	non-compiled	[CE]  	45	None	replace
249	[BUG]  [BUGGY]  Character  header  =(Character)getCharacterFormat();  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getCharacterFormat();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getCharacterFormat();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
250	[BUG]  [BUGGY]  Character  header  =(Character)getFormat();  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getFormat();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getFormat();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
251	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  commentStart);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  commentStart);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
252	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  + "') ");  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  + "') ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  + "') ");	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
253	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  + "');  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  + "');  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  + "');	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
254	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.size());  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.size());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  TreeSet  <  String>(header.size());	  final    ArrayList    <    String>    set    =    new    TreeSet    <    String>(header.length);    	non-compiled	[CE]  	34	None	replace
255	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  /  1);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  /  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  /  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    +    1);    	non-compiled	[CE]  	33	None	replace
256	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  escapeChar);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
257	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar,  escapeChar);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
258	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  delimiter.length,  quoteChar);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  delimiter.length,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  delimiter.length,  quoteChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
259	[BUG]  [BUGGY]  Character  header  =  getCharacter(header);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(header);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
260	[BUG]  [BUGGY]  Character  header  =  getCharacter(c  +  1);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(c  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(c  +  1);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
261	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	3	None	replace
262	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length,  header.length);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length,  header.length);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length,    header.length);    	non-compiled	[CE]  	3	None	replace
263	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length  +  1);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length  +  1);	  final    Set    <    String>    set    =    new    LinkedList    <    String>(header.length);    	non-compiled	[CE]  	38	None	replace
264	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  quoteChar);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  quoteChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header,  quoteChar);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	35	None	replace
265	[BUG]  [BUGGY]  Character[]  header  =  getHeaderRecord(c);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeaderRecord(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeaderRecord(c);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
266	[BUG]  [BUGGY]  Character[]  header  =  getHeader(recordSeparator);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeader(recordSeparator);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeader(recordSeparator);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
267	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "escape ");  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "escape ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "escape ");	  Character[]    header    =    quoteChar.split(   "u   ");    	non-compiled	[CE]  	43	None	replace
268	[BUG]  [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[getCharacters().size()  ]);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getCharacters().toArray(new  Character[getCharacters().size()  ]);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getCharacters().toArray(new  Character[getCharacters().size()  ]);	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
269	[BUG]  [BUGGY]  Character[]  header  =  getEscapeChar();  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getEscapeChar();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getEscapeChar();	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
270	[BUG]  [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  header.length);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
271	[BUG]  [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	ArrayList  <  String>  set  =  new  ArrayList  <  String>(header);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
272	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(0,  quoteCharacter);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(0,  quoteCharacter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(0,  quoteCharacter);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
273	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length  -  1);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedList  <  String>(header.length  -  1);	  final    List    <    String>    set    =    new    ArrayList    <    String>(header.length    -    1);    	non-compiled	[CE]  	22	None	replace
274	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(delimiter);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(delimiter);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
275	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(header,  c);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(header,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(header,  c);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
276	[BUG]  [BUGGY]  Character[]  header  =  quoteChars(c);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChars(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChars(c);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
277	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar  +  1);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  quoteChar  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar    +    1);    	non-compiled	[CE]  	18	None	replace
278	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  escapeChar);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  escapeChar);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  escapeChar);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    escapeChar);    	non-compiled	[CE]  	48	None	replace
279	[BUG]  [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header);	  final    java.util.ArrayList    <    String>    set    =    new    java.util.ArrayList    <    String>(header.length);    	non-compiled	[CE]  	9	None	replace
280	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  delimiter);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header,    quoteChar);    	non-compiled	[CE]  	47	None	replace
281	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  4);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  4);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  -  4);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    -    1);    	non-compiled	[CE]  	25	None	replace
282	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  +  2);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart.length  +  2);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart.length);    	non-compiled	[CE]  	4	None	replace
283	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "# ");  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "# ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "# ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
284	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( ";n ");  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( ";n ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( ";n ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
285	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "/ ");  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "/ ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "/ ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
286	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  -  1);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  commentStart  -  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	15	None	replace
287	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  delimiter);  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    c);    	non-compiled	[CE]  	59	None	replace
288	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length  -  1);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  header.length  -  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    header.length);    	non-compiled	[CE]  	45	None	replace
289	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  *  2);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  *  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  *  2);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    +    1);    	non-compiled	[CE]  	33	None	replace
290	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  *  1);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  *  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  *  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length    +    1);    	non-compiled	[CE]  	33	None	replace
291	[BUG]  [BUGGY]  Character[]  header  =  delimiter(c);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  delimiter(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  delimiter(c);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
292	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(ceiler);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(ceiler);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(ceiler);	  Character[]    header    =    quoteChar(c);    	non-compiled	[CE]  	30	None	replace
293	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "n ",  delimiter);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "n ",  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "n ",  delimiter);	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
294	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "= ");  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "= ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "= ");	  Character[]    header    =    quoteChar.split(   "n   ");    	non-compiled	[CE]  	40	None	replace
295	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  -  3);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  -  3);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  LinkedHashSet  <  String>(header.length  -  3);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    3);    	non-compiled	[CE]  	24	None	replace
296	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  4);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  4);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length  *  4);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    4);    	non-compiled	[CE]  	39	None	replace
297	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length;  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length;  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length;	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    4);    	non-compiled	[CE]  	39	None	replace
298	[BUG]  [BUGGY]  final  HashSet  <  String>  set  =  new  HashSet  <  String>(header.length);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  HashSet  <  String>  set  =  new  HashSet  <  String>(header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  HashSet  <  String>  set  =  new  HashSet  <  String>(header.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    -    4);    	non-compiled	[CE]  	39	None	replace
299	[BUG]  [BUGGY]  Character[]  header  =  getHeader(char);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeader(char);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeader(char);	  Character[]    header    =    getHeader(c);    	non-compiled	[CE]  	29	None	replace
300	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  ArrayList  <  String>(header.length  +  2);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length    +    2);    	non-compiled	[CE]  	11	None	replace
301	[BUG]  [BUGGY]  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	java.util.ArrayList  <  String>  set  =  new  java.util.ArrayList  <  String>(header.length);	  final    java.util.ArrayList    <    String>    set    =    new    java.util.ArrayList    <    String>(header.length);    	non-compiled	[CE]  	9	None	replace
302	[BUG]  [BUGGY]  Character[]  header  =  quoteChar(c,  writer);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar(c,  writer);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar(c,  writer);	  Character[]    header    =    quoteChar(c,    escape);    	non-compiled	[CE]  	57	None	replace
303	[BUG]  [BUGGY]  Character  header  =(Character)getCharacter();  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getCharacter();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getCharacter();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
304	[BUG]  [BUGGY]  Character  header  =(Character)getHeaderSeparator();  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =(Character)getHeaderSeparator();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =(Character)getHeaderSeparator();	  Character    header    =(Character)getCSVFormat();    	non-compiled	[CE]  	42	None	replace
305	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.getHeaders(c);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.getHeaders(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.getHeaders(c);	  Character[]    header    =    quoteChar.getHeaders();    	non-compiled	[CE]  	28	None	replace
306	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  c  delimiter);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  c  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  quoteChar,  c  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
307	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  c,  delimiter);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  c,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar,    delimiter);    	non-compiled	[CE]  	17	None	replace
308	[BUG]  [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteLine);  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteLine);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  quoteLine);	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	10	None	replace
309	[BUG]  [BUGGY]  Character  header  =  getHeader(char);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader(char);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader(char);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
310	[BUG]  [BUGGY]  Character  header  =  getHeader(Character.DEFAULT);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getHeader(Character.DEFAULT);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getHeader(Character.DEFAULT);	  Character    header    =    getHeader(c);    	non-compiled	[CE]  	53	None	replace
311	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  delimiter);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
312	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  delimiter);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  delimiter);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  delimiter);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
313	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  quoteChar.length);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  quoteChar.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c.length,  quoteChar.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
314	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  c.length);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(c,  c.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(c,  c.length);	  final    Set    <    String>    set    =    new    HashSet    <    String>(c.length,    quoteChar);    	non-compiled	[CE]  	19	None	replace
315	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(c);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(c);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
316	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(quoteCharacter.length);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(quoteCharacter.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(quoteCharacter.length);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
317	[BUG]  [BUGGY]  Character  header  =  quoteCharacter.charAt(quoteStart  +  1);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  quoteCharacter.charAt(quoteStart  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  quoteCharacter.charAt(quoteStart  +  1);	  Character    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	55	None	replace
318	[BUG]  [BUGGY]  Character  c  =  getCharacter().escapeChar(c);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().escapeChar(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().escapeChar(c);	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
319	[BUG]  [BUGGY]  Character  c  =  getCharacter().escapeCharacter(c);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().escapeCharacter(c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().escapeCharacter(c);	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
320	[BUG]  [BUGGY]  Character  c  =  getCharacter().charAt(0,  0);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  c  =  getCharacter().charAt(0,  0);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  c  =  getCharacter().charAt(0,  0);	  Character    c    =    getCharacter();    	non-compiled	[CE]  	27	None	replace
321	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.delimiterChar();  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.delimiterChar();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.delimiterChar();	  Character[]    header    =    quoteChar.getHeader();    	non-compiled	[CE]  	31	None	replace
322	[BUG]  [BUGGY]  Character  header  =  getCharacterEscape();  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacterEscape();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacterEscape();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
323	[BUG]  [BUGGY]  Character  header  =  getCharacterDelimiter();  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacterDelimiter();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacterDelimiter();	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
324	[BUG]  [BUGGY]  Character  header  =  getCharacter().charAt(header);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter().charAt(header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter().charAt(header);	  Character    header    =    getCharacter();    	non-compiled	[CE]  	26	None	replace
325	[BUG]  [BUGGY]  Character  header  =  getCharacter(char);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character  header  =  getCharacter(char);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character  header  =  getCharacter(char);	  Character    header    =    getCharacter(c);    	non-compiled	[CE]  	41	None	replace
326	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(commentStart,  header);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(commentStart,  header);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(commentStart,  header);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
327	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  -  1);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  -  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  commentStart  -  1);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    commentStart);    	non-compiled	[CE]  	58	None	replace
328	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  escapeChar  +  1);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  escapeChar  +  1);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  HashSet  <  String>(header.length,  escapeChar  +  1);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length,    quoteChar    +    1);    	non-compiled	[CE]  	18	None	replace
329	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(quoteCharacter.indexOf('n',  commentStart));  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(quoteCharacter.indexOf('n',  commentStart));  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(quoteCharacter.indexOf('n',  commentStart));	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
330	[BUG]  [BUGGY]  String  header  =  quoteCharacter.charAt(0,  quoteCharacter.charAt(quoteStart));  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  String  header  =  quoteCharacter.charAt(0,  quoteCharacter.charAt(quoteStart));  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	String  header  =  quoteCharacter.charAt(0,  quoteCharacter.charAt(quoteStart));	  String    header    =    quoteCharacter.charAt(quoteStart);    	non-compiled	[CE]  	54	None	replace
331	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  /  2);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  /  2);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length  /  2);	  final    Set    <    String>    set    =    new    HashSet    <    String>(header.length    /    1);    	non-compiled	[CE]  	46	None	replace
332	[BUG]  [BUGGY]  Character[]  header  =  quoteChar.split( "u00e7c ");  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  quoteChar.split( "u00e7c ");  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  quoteChar.split( "u00e7c ");	  Character[]    header    =    quoteChar.split(   "u   ");    	non-compiled	[CE]  	43	None	replace
333	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar.length);  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar.length);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar.length);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	35	None	replace
334	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar.charAt(0));  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar.charAt(0));  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  quoteChar.charAt(0));	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	35	None	replace
335	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  c);  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  c);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.length,  c);	  final    Set    <    String>    set    =    new    TreeSet    <    String>(header.length,    quoteChar);    	non-compiled	[CE]  	35	None	replace
336	[BUG]  [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.size());  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  final  Set  <  String>  set  =  new  TreeSet  <  String>(header.size());  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	final  Set  <  String>  set  =  new  TreeSet  <  String>(header.size());	  final    ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.size());    	non-compiled	[CE]  	8	None	replace
337	[BUG]  [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	ArrayList  <  String>  set  =  new  ArrayList  <  String>(header.length,  commentStart);	  ArrayList    <    String>    set    =    new    ArrayList    <    String>(header.length);    	non-compiled	[CE]  	52	None	replace
338	[BUG]  [BUGGY]  Character[]  header  =  getHeaderRecord();  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {      [BUGGY]  Character[]  header  =  getHeaderRecord();  [BUGGY]      set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.7071067811865475	666	666	1	replace	Character[]  header  =  getHeaderRecord();	  Character[]    header    =    getCharacters();    	non-compiled	[CE]  	32	None	replace
