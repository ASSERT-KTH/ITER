bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (c!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]  if  (c!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  null  &&  quoteChar.equals(commentStart))  {	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(c))  {	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (commentStart!=  null  &&  quoteChar.equals(commentStart))  {	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (commentStart!=  null  &&  quoteChar.equals(quoteChar))  {	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]    [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	  	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(c))  {  [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (commentStart!=  null  &&  quoteChar.equals(c))  {	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(   "The  escape  character  and  the  delimiter  cannot  be  the  same  (' "  +  escape  +   "') ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(   "The  comment  start  character  and  the  delimiter  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  [BUGGY]  if(c!=  null  &&  c.equals(commentStart))  {  [BUGGY]  throw  new  IllegalStateException(   "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(   "The  comment  start  and  the  escape  character  cannot  be  the  same  (' "  +  commentStart  +   "') ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(commentStart))  {	if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
