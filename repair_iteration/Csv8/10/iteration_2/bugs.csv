bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (c!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if  (c!=  null  &&  quoteChar.equals(c))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  null  &&  quoteChar.equals(c))  {	  if    (c!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  if  (escape!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if  (escape!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (escape!=  null  &&  quoteChar.equals(commentStart))  {	  if    (c!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  Character  c  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  quoteChar.charValue();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charValue();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  String  quoteChar  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  String  quoteChar  =  c.charValue();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  c.charValue();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCharacter();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  quoteChar.getCharacter();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getCharacter();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  quoteChar.toCharArray();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.toCharArray();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentChar();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  quoteChar.getCurrentChar();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getCurrentChar();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  Character  c  =  getCharacter();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  getCharacter();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(quote);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  quoteChar.charAt(quote);  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(quote);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(quoteChar))  {	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c  ==  null  &&  quoteChar.equals(c))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  &&  quoteChar.equals(c))  {	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(escape!=  null  &&  quoteChar.equals(c))  {	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  quoteChar.equals(quoteChar))  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(delimiter))  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(commentStart!=  null  &&  quoteChar.equals(delimiter))  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c  ==  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  &&  quoteChar.equals(delimiter))  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  c.equals(quoteChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(quoteChar))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c  ==  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  &&  quoteChar.equals(commentStart))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  ||  c.equals(commentStart))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  ||  c.equals(commentStart))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  if(c!=  null  &&  commentStart.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  commentStart.equals(c))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  commentStart.equals(c))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  if  (c!=  quoteChar  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if  (c!=  quoteChar  &&  quoteChar.equals(c))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  quoteChar  &&  quoteChar.equals(c))  {	  if    (commentStart!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  if  (c!=  'n'  ||  c!=  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if  (c!=  'n'  ||  c!=  'r'  ||  c  ==  't')  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  'n'  ||  c!=  'r'  ||  c  ==  't')  {	  if    (commentStart!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  if  (c!=  'n'  ||  c!=  'r'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if  (c!=  'n'  ||  c!=  'r'  ||  c!=  't')  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  'n'  ||  c!=  'r'  ||  c!=  't')  {	  if    (commentStart!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(delimiter))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(copiedChar))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  c.equals(copiedChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(copiedChar))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals( " "))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  c.equals( " "))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals( " "))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  c.equals(info.commentStart))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.commentStart))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(quoteChar))  {	  if    (commentStart!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if  (delimiter!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (delimiter!=  null  &&  quoteChar.equals(commentStart))  {	  if    (commentStart!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  if(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  char  quoteChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  char  quoteChar  =  quoteChar.charValue();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  quoteChar  =  quoteChar.charValue();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  if(quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy  ==  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  if(quotePolicy!=  Quote.NONE)  {  for(Character  c  :  quotedHeaders)  {  set.add(c);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(quotePolicy!=  Quote.NONE)  {  for(Character  c  :  quotedHeaders)  {  set.add(c);  }  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy!=  Quote.NONE)  {  for(Character  c  :  quotedHeaders)  {  set.add(c);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  if(quotePolicy!=  Quote.NONE)  {  for(Character  c  :  description.charValue())  {  quoteChar  =  c;  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(quotePolicy!=  Quote.NONE)  {  for(Character  c  :  description.charValue())  {  quoteChar  =  c;  }  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy!=  Quote.NONE)  {  for(Character  c  :  description.charValue())  {  quoteChar  =  c;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  if  (c!=  commentStart  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if  (c!=  commentStart  &&  quoteChar.equals(c))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  commentStart  &&  quoteChar.equals(c))  {	  if    (commentStart!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(commentStart))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  &&  quoteChar.equals(commentStart))  {	  if    (commentStart!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  escapeChar  =  quoteChar.charValue();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  quoteChar.charValue();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  delimiter.charValue();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.charValue();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  delimiter  =  quoteChar.charValue();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  quoteChar.charValue();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  Character  c  =  quoteChar(c);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  quoteChar(c);  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar(c);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  Character  c  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  Character  c  =  character.charValue();  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  character.charValue();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  quoteChar.equals(ceilingChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(ceilingChar))  {	  if    (c!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoted))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoted))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(quoted))  {	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(char))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  quoteChar.equals(char))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(char))  {	  if(quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
53	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(prefixChar))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  c.equals(prefixChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(prefixChar))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(     "The  escape  character  and  the  delimiter  cannot  be  the  same  ('   "  +  escape  +     "')   ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(     "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }    [BUGGY]  if(c!=  null  &&  c.equals(ceilingChar))  {  [BUGGY]    throw  new  IllegalStateException(     "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(     "The  comment  start  and  the  escape  character  cannot  be  the  same  ('   "  +  commentStart  +     "')   ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(ceilingChar))  {	  if(c!=    null    &&    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
