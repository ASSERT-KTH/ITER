bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ceilingChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(ceilingChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(ceilingChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    null    &&    quoteChar.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
2	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(escape!=  null  &&  quoteChar.equals(ceilingChar))  {	  if(c!=    null    &&    quoteChar.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
3	[BUG]  [BUGGY]  Character  c  =  delimiter.getCharacter();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.getCharacter();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCSVFormat();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCSVFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getCSVFormat();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(quoteChar);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(quoteChar);	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCharacterCount();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCharacterCount();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getCharacterCount();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCharacterEncoding();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getCharacterEncoding();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  if  (c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c!=    't')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
9	[BUG]  [BUGGY]  if  (c  ==  'n'  ||  c!=  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c  ==  'n'  ||  c!=  'r'  ||  c  ==  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c  ==  'n'  ||  c!=  'r'  ||  c  ==  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c!=    't')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
10	[BUG]  [BUGGY]  if  (c!=  'n'  ||  c  ==  'r'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  'n'  ||  c  ==  'r'  ||  c!=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  'n'  ||  c  ==  'r'  ||  c!=  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c!=    't')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
11	[BUG]  [BUGGY]  char  quoteChar  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  quoteChar  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  quoteChar  =  c.charValue();	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  String  quoteChar  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  delimiter.charValue();	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  Character  quoteChar  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  quoteChar  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  quoteChar  =  c.charValue();	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  String  quoteChar  =  c.substring(0,  c.length()  -  1);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  c.substring(0,  c.length()  -  1);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  c.substring(0,  c.length()  -  1);	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  String  quoteChar  =  c.toCharArray();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  c.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  c.toCharArray();	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  String  quoteChar  =  c.substring(0,  c.length()  -  2);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  c.substring(0,  c.length()  -  2);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  c.substring(0,  c.length()  -  2);	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(copiedChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(copiedChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(copiedChar))  {	  if(c!=    null    &&    c.equals(copiedChar))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
18	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(copiedChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(copiedChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  ||  c.equals(copiedChar))  {	  if(c!=    null    &&    c.equals(copiedChar))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
19	[BUG]  [BUGGY]  Character  c  =  delimiter.getCurrentChar();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCurrentChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.getCurrentChar();	  Character    c    =    quoteChar.getCurrentChar();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  Character  c  =  quoteChar.removeChar(commentStart);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.removeChar(commentStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.removeChar(commentStart);	  Character    c    =    quoteChar.getCurrentChar();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentCharIndex();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCurrentCharIndex();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getCurrentCharIndex();	  Character    c    =    quoteChar.getCurrentChar();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(0);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(0);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(0);	  Character    c    =    quoteChar.getCurrentChar();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  Character  c  =  quoteChar.getEscapedChar();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getEscapedChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getEscapedChar();	  Character    c    =    quoteChar.getCurrentChar();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  Character  c  =  delimiter.toCharArray();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.toCharArray();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
25	[BUG]  [BUGGY]  char  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  c  =  delimiter.charValue();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
26	[BUG]  [BUGGY]  Character  c  =  escape.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escape.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  escape.charValue();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
27	[BUG]  [BUGGY]  Character  c  =  delimiter.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.toCharBuffer();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
28	[BUG]  [BUGGY]  Quote  quotePolicy  =  Quote.NONE;  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  Quote.NONE;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quotePolicy  =  Quote.NONE;	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
29	[BUG]  [BUGGY]  Character  c  =  quotedHeaders.get(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quotedHeaders.get(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quotedHeaders.get(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
30	[BUG]  [BUGGY]  Quote  quoteChar  =  quotedHeaders.get(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotedHeaders.get(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotedHeaders.get(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
31	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotedHeaders.get(c);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotedHeaders.get(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quotePolicy  =  quotedHeaders.get(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
32	[BUG]  [BUGGY]  Character  c  =  quoteHeaders.get(c);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteHeaders.get(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteHeaders.get(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
33	[BUG]  [BUGGY]  Quote  quotedHeaders  =  quotePolicy.getRangeHeaders();  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quotedHeaders  =  quotePolicy.getRangeHeaders();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quotedHeaders  =  quotePolicy.getRangeHeaders();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
34	[BUG]  [BUGGY]  Quote  quotedHeaders  =  Quote.NONE.parseQuotedChar(c);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quotedHeaders  =  Quote.NONE.parseQuotedChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quotedHeaders  =  Quote.NONE.parseQuotedChar(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
35	[BUG]  [BUGGY]  While(quote!=  null  &&  quoteChar.equals(c))  {  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(quote!=  null  &&  quoteChar.equals(c))  {  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(quote!=  null  &&  quoteChar.equals(c))  {  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
36	[BUG]  [BUGGY]  While(c!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(c!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(c!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
37	[BUG]  [BUGGY]  While(c!=  null  &&  c!=  quoteChar)  {  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(c!=  null  &&  c!=  quoteChar)  {  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(c!=  null  &&  c!=  quoteChar)  {  if(quote!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
38	[BUG]  [BUGGY]  While(quote!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(quote!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(quote!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
39	[BUG]  [BUGGY]  While(c!=  null  &&  c!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(c!=  null  &&  c!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(c!=  null  &&  c!=  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
40	[BUG]  [BUGGY]  while(quote!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(quote!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	while(quote!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
41	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
42	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
43	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
44	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
45	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
46	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
47	[BUG]  [BUGGY]  if  (c!=  null  &&  quoteChar.equals(c)||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quoteChar.equals(c)||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  null  &&  quoteChar.equals(c)||  c  ==  delimiter)  {	  if    (c!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
49	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
50	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
51	[BUG]  [BUGGY]  if(c  ==  'N'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'N'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'N'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
52	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
53	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  quoteChar.equals(c))  {	  if(delimiter!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  Character  c  =  getCharacter().charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().charValue();	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  Character  c  =  getCharacter().getCharacterIndex(commentStart);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().getCharacterIndex(commentStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().getCharacterIndex(commentStart);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  Character  c  =  getCharacter().toCharArray();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().toCharArray();	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  Character  c  =  getCharacter().getCharacterStart();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().getCharacterStart();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().getCharacterStart();	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  Character  c  =  getCharacter().getCharacterCount();  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().getCharacterCount();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().getCharacterCount();	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  Character  c  =  getCSVFormat();  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCSVFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCSVFormat();	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  Character  c  =  escape.toCharArray();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escape.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  escape.toCharArray();	  Character    c    =    quoteChar.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
61	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharArray(this.set);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharArray(this.set);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.toCharArray(this.set);	  Character    c    =    quoteChar.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  Character  c  =  escapeChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escapeChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  escapeChar.toCharArray();	  Character    c    =    quoteChar.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  Character  c  =  quoteChar.trim();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.trim();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.trim();	  Character    c    =    quoteChar.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  if(quotePolicy  ==  Quote.NONE  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy  ==  Quote.NONE  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy  ==  Quote.NONE  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy    ==    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
65	[BUG]  [BUGGY]  if(quotePolicy  ==  Quote.NONE  ||  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy  ==  Quote.NONE  ||  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy  ==  Quote.NONE  ||  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy    ==    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
66	[BUG]  [BUGGY]  safeGet(quotePolicy)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  safeGet(quotePolicy)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	safeGet(quotePolicy)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy    ==    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
67	[BUG]  [BUGGY]  if(quotePolicy  ==  Quote.NONE  ||  quoteChar  >=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy  ==  Quote.NONE  ||  quoteChar  >=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy  ==  Quote.NONE  ||  quoteChar  >=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy    ==    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
68	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
69	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  quoteChar!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  quoteChar!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||  quoteChar!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
70	[BUG]  [BUGGY]  if(c!=  quoteChar  &&  quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  quoteChar  &&  quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  quoteChar  &&  quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
71	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(commentStart!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
72	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  delimiter!=  quoteChar)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  delimiter!=  quoteChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||  delimiter!=  quoteChar)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
73	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoteChar)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(quoteChar)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(quoteChar)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
74	[BUG]  [BUGGY]  if  (c!=  DEFAULT  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  DEFAULT  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  DEFAULT  &&  quoteChar.equals(commentStart))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
75	[BUG]  [BUGGY]  if  (c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
76	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter  ==  null  &&  quoteChar.equals(c))  {	  if(c    ==    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
77	[BUG]  [BUGGY]  Character  c  =  description.charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  description.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  description.charValue();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
78	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.NONE;  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.NONE;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.NONE;	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
79	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.none();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.none();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.none();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
80	[BUG]  [BUGGY]  Quote  quoteChar  =  description.charValue();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  description.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  description.charValue();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
81	[BUG]  [BUGGY]  Character  c  =  commentStart.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  commentStart.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  commentStart.charValue();	  Character    c    =    character.charValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
82	[BUG]  [BUGGY]  Character  c  =  writer.charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  writer.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  writer.charValue();	  Character    c    =    character.charValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
83	[BUG]  [BUGGY]  Character  c  =  character.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  character.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  character.toCharBuffer();	  Character    c    =    character.charValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
84	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar.equals(delimiter))  {	  if(commentStart!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
85	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(commentStart!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
86	[BUG]  [BUGGY]  if(delimiter!=  c  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  c  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  c  &&  quoteChar.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
87	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  quoteChar.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
88	[BUG]  [BUGGY]  if(c  ==  delimiter  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  delimiter  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  delimiter  &&  quoteChar.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
89	[BUG]  [BUGGY]  if(escape!=  delimiter  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  delimiter  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(escape!=  delimiter  &&  quoteChar.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
90	[BUG]  [BUGGY]  if(c!=  commentStart  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  commentStart  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  commentStart  &&  quoteChar.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
91	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  ||  c.equals(quoteChar))  {	  if(c!=    null    ||    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
92	[BUG]  [BUGGY]  if(c!=  null  ||  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  ||  quoteChar.equals(commentStart))  {	  if(c!=    null    ||    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
93	[BUG]  [BUGGY]  if(c  ==  null  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  &&  c.equals(commentStart))  {	  if(c!=    null    ||    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
94	[BUG]  [BUGGY]  if(commentStart!=  null  ||  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  ||  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(commentStart!=  null  ||  c.equals(commentStart))  {	  if(c!=    null    ||    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
95	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  ||  c.equals(delimiter))  {	  if(c!=    null    ||    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
96	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(prefixChar))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(prefixChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(prefixChar))  {	  if(c!=    null    &&    c.equals(prefixChar))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
97	[BUG]  [BUGGY]  if(prefixChar!=  null  &&  c.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(prefixChar!=  null  &&  c.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(prefixChar!=  null  &&  c.equals(c))  {	  if(c!=    null    &&    c.equals(prefixChar))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
98	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(prefixChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(prefixChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  ||  c.equals(prefixChar))  {	  if(c!=    null    &&    c.equals(prefixChar))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
99	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
100	[BUG]  [BUGGY]  if(c  ==  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
101	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
102	[BUG]  [BUGGY]  if(delimiter!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
103	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(ceiler))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(ceiler))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(ceiler))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
104	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  ||  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  ||  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar!=  null  ||  quoteChar.equals(delimiter))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
105	[BUG]  [BUGGY]  if(c!=  null  ||  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  ||  quoteChar.equals(c))  {	  if(c!=    null    &&    commentStart.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  if(delimiter!=  null  &&  c.equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  c.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  c.equals(c))  {	  if(c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
107	[BUG]  [BUGGY]  String  quoteChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  quoteChar.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
108	[BUG]  [BUGGY]  Character  quoteChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  quoteChar  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  quoteChar  =  quoteChar.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
109	[BUG]  [BUGGY]  char  quoteChar  =  quotePolicy.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  quoteChar  =  quotePolicy.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  quoteChar  =  quotePolicy.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
110	[BUG]  [BUGGY]  String  quoteChar  =  quoteChar.StringValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  quoteChar.StringValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  quoteChar.StringValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
111	[BUG]  [BUGGY]  char  quoteChar  =  quote.charValue();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  quoteChar  =  quote.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  quoteChar  =  quote.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
112	[BUG]  [BUGGY]  char  quoteChar  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  quoteChar  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  quoteChar  =  quoteChar.toCharArray();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
113	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(info.commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(info.commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(info.commentStart))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
114	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.quoteChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(info.quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.quoteChar))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
115	[BUG]  [BUGGY]  if(commentStart!=  null  &&  c.equals(info.commentStart))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  c.equals(info.commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(commentStart!=  null  &&  c.equals(info.commentStart))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
116	[BUG]  [BUGGY]  if(c  ==  null  &&  c.equals(info.commentStart))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  c.equals(info.commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  &&  c.equals(info.commentStart))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
117	[BUG]  [BUGGY]  Character  c  =  quoteChar(escape);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar(escape);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
118	[BUG]  [BUGGY]  Character  c  =  quoteChar(commentStart);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar(commentStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar(commentStart);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
119	[BUG]  [BUGGY]  Character  c  =  delimiter(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter(c);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
120	[BUG]  [BUGGY]  Character  c  =  quoteChar(escape,  c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar(escape,  c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar(escape,  c);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
121	[BUG]  [BUGGY]  Character  c  =  quoteChar(delimiter);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar(delimiter);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
122	[BUG]  [BUGGY]  Character  c  =  escapeChar(c);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escapeChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  escapeChar(c);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
123	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||  c.equals(commentStart))  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
124	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||!quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||!quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||!quoteChar.equals(c))  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
125	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||  c.equals(quoteChar))  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
126	[BUG]  [BUGGY]  if(quotePolicy!=  Quote.NONE  ||  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  Quote.NONE  ||  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy!=  Quote.NONE  ||  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
127	[BUG]  [BUGGY]  While(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
128	[BUG]  [BUGGY]  while(quotePolicy!=  Quote.NONE)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(quotePolicy!=  Quote.NONE)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	while(quotePolicy!=  Quote.NONE)  {	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
129	[BUG]  [BUGGY]  if(ceilingChar!=  null  &&  c.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(ceilingChar!=  null  &&  c.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(ceilingChar!=  null  &&  c.equals(c))  {	  if(c!=    null    &&    c.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
130	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(commentStart);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(commentStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(commentStart);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
131	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(delimiter);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(delimiter);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
132	[BUG]  [BUGGY]  char  c  =  quoteChar.charAt(commentStart);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  c  =  quoteChar.charAt(commentStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  c  =  quoteChar.charAt(commentStart);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
133	[BUG]  [BUGGY]  Character  c  =  delimiter.charAt(quoteChar);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charAt(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.charAt(quoteChar);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
134	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(offset);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(offset);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(offset);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
135	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(escape);  [CE]  illegal  start  of  type  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(escape);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
136	[BUG]  [BUGGY]  Character  delimiter  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  c.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
137	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  quoteChar.toCharArray();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
138	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.delimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  quoteChar.delimiter();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
139	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  quoteChar.toCharBuffer();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
140	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.trim();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.trim();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  quoteChar.trim();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
141	[BUG]  [BUGGY]  Character  delimiter  =  escape.charValue();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  escape.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  escape.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
142	[BUG]  [BUGGY]  if(c!=  EXCEL  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
143	[BUG]  [BUGGY]  if(c  ==  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
144	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
145	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  ||  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  ||  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  ||  quoteChar.equals(c))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
146	[BUG]  [BUGGY]  if(quoteChar!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
147	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar  ==  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar  ==  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar  ==  null  &&  quoteChar.equals(c))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
148	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(escape!=  null  &&  quoteChar.equals(quoteChar))  {	  if(c!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
149	[BUG]  [BUGGY]  if  (c!=  delimiter  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  delimiter  &&  quoteChar.equals(c))  {	  if    (c!=    commentStart    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
150	[BUG]  [BUGGY]  if  (c!=  commentStart  ||  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  commentStart  ||  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  commentStart  ||  quoteChar.equals(c))  {	  if    (c!=    commentStart    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
151	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
152	[BUG]  [BUGGY]  if(c!=  'e'  ||  c  ==  'E')  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'e'  ||  c  ==  'E')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'e'  ||  c  ==  'E')  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
153	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c  ==  quoteChar.charValue())  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
154	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar.charValue())  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
155	[BUG]  [BUGGY]  Character  c  =  quoteChar.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.toLowerCase();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
156	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.toCharBuffer();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
157	[BUG]  [BUGGY]  if(quoteChar  ==  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar  ==  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar  ==  null  &&  quoteChar.equals(c))  {	  if(quoteChar!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
158	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  quoteChar.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  &&  quoteChar.equals(quoteChar))  {	  if(quoteChar!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
159	[BUG]  [BUGGY]  if(quoteChar!=  null  ||  quoteChar.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  ||  quoteChar.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  ||  quoteChar.equals(quoteChar))  {	  if(quoteChar!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  if  (c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
161	[BUG]  [BUGGY]  if  (c!=  quoteChar  ||  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  quoteChar  ||  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  quoteChar  ||  quoteChar.equals(c))  {	  if    (c!=    quoteChar    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
162	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
163	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
164	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
165	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
166	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
167	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  commentStart  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  commentStart  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  commentStart  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
168	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  escapeChar)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  escapeChar)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
169	[BUG]  [BUGGY]  if(c  ==  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
170	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
171	[BUG]  [BUGGY]  if(c!=  quoteChar  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  quoteChar  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  quoteChar  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
172	[BUG]  [BUGGY]  if(delimiter!=  c  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  c  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  c  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
173	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(escape!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
174	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals( "   "))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals( "   "))  {	  if(c!=    null    &&    c.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
175	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals( "n "))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals( "n "))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals( "n "))  {	  if(c!=    null    &&    c.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
176	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals( "* "))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals( "* "))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals( "* "))  {	  if(c!=    null    &&    c.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
177	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals( "- "))  {	  if(c!=    null    &&    c.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
178	[BUG]  [BUGGY]  if(quoted!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoted!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoted!=  null  &&  quoteChar.equals(c))  {	  if(c!=    null    &&    quoteChar.equals(quoted))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
179	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(quoted))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.equals(quoted))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(commentStart!=  null  &&  quoteChar.equals(quoted))  {	  if(c!=    null    &&    quoteChar.equals(quoted))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
180	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(quoted))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(quoted))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(quoted))  {	  if(c!=    null    &&    quoteChar.equals(quoted))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
181	[BUG]  [BUGGY]  Character  escapeChar  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  delimiter.charValue();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
182	[BUG]  [BUGGY]  Character  escapeChar  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  c.charValue();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
183	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  quoteChar.toCharArray();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
184	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  quoteChar.toCharBuffer();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
185	[BUG]  [BUGGY]  Character  escapeChar  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  character.charValue();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
186	[BUG]  [BUGGY]  Character  escapeChar  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  quoteChar.toChars();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
187	[BUG]  [BUGGY]  Character  delimiter  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  delimiter.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
188	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  quoteChar.toChars();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
189	[BUG]  [BUGGY]  Character  c  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.toChars();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
190	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(prefix))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(prefix))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(prefix))  {	  if(c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
191	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(quote))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(quote))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(quote))  {	  if(c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
192	[BUG]  [BUGGY]  if(c  ==  null  ||  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  ||  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  ||  c.equals(commentStart))  {	  if(c!=    null    ||    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
193	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(escape!=  null  &&  c.equals(commentStart))  {	  if(c!=    null    ||    c.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
194	[BUG]  [BUGGY]  while(quotePolicy!=  Quote.NONE  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(quotePolicy!=  Quote.NONE  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	while(quotePolicy!=  Quote.NONE  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy    ==    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
195	[BUG]  [BUGGY]  Character  c  =  escape.getCurrentChar();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escape.getCurrentChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  escape.getCurrentChar();	  Character    c    =    quoteChar.getCurrentChar();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
196	[BUG]  [BUGGY]  Character  c  =  quoteChar.getEscapeChar();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getEscapeChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getEscapeChar();	  Character    c    =    quoteChar.getCurrentChar();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
197	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
198	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c)||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c)||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(c)||  c  ==  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
199	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(escape!=  null  &&  delimiter.equals(commentStart))  {	  if(commentStart!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
200	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(copieChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(copieChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(copieChar))  {	  if(quoteChar!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
201	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
202	[BUG]  [BUGGY]  if(c!=  quoteChar  &&  delimiter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  quoteChar  &&  delimiter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  quoteChar  &&  delimiter.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
203	[BUG]  [BUGGY]  if  (c!=  DEFAULT  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  DEFAULT  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  DEFAULT  &&  quoteChar.equals(c))  {	  if    (c!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
204	[BUG]  [BUGGY]  if  (c!=  EXCEL  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  EXCEL  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  EXCEL  &&  quoteChar.equals(c))  {	  if    (c!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
205	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCSV();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCSV();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getCSV();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
206	[BUG]  [BUGGY]  Character  c  =  quoteChar.getChars();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getChars();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
207	[BUG]  [BUGGY]  if(prefixChar!=  null  &&  c.equals(prefixChar))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(prefixChar!=  null  &&  c.equals(prefixChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(prefixChar!=  null  &&  c.equals(prefixChar))  {	  if(c!=    null    &&    c.equals(prefixChar))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
208	[BUG]  [BUGGY]  if(prefixChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(prefixChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(prefixChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    null    &&    c.equals(prefixChar))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
209	[BUG]  [BUGGY]  String  quoteChar  =  escape.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  escape.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  escape.charValue();	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
210	[BUG]  [BUGGY]  char  quoteChar  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  char  quoteChar  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	char  quoteChar  =  delimiter.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
211	[BUG]  [BUGGY]  Char  quoteChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Char  quoteChar  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Char  quoteChar  =  quoteChar.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
212	[BUG]  [BUGGY]  if(quotePolicy!=  Quote.NONE  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  Quote.NONE  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quotePolicy!=  Quote.NONE  ||  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
213	[BUG]  [BUGGY]  While(quotePolicy!=  Quote.NONE  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(quotePolicy!=  Quote.NONE  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(quotePolicy!=  Quote.NONE  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
214	[BUG]  [BUGGY]  Character  c  =  delimiter.toChars();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.toChars();	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
215	[BUG]  [BUGGY]  for(Character  c  :  quotedHeaders)  {  set.add(c);  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  quotedHeaders)  {  set.add(c);  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	for(Character  c  :  quotedHeaders)  {  set.add(c);  }	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
216	[BUG]  [BUGGY]  Quote  quotePolicy  =  Quote.NONE;  for(Character  c  :  quotedHeaders)  {  set.add(c);  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  Quote.NONE;  for(Character  c  :  quotedHeaders)  {  set.add(c);  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quotePolicy  =  Quote.NONE;  for(Character  c  :  quotedHeaders)  {  set.add(c);  }	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
217	[BUG]  [BUGGY]  Quote  quotedHeaders  =  Quote.NONE.parseQuotedCharacter(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quotedHeaders  =  Quote.NONE.parseQuotedCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quotedHeaders  =  Quote.NONE.parseQuotedCharacter(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
218	[BUG]  [BUGGY]  Character  c  =  getCharacter().getCharacterIndex(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().getCharacterIndex(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().getCharacterIndex(c);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
219	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(relativeSurroundingSpaces))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(relativeSurroundingSpaces))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(relativeSurroundingSpaces))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
220	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(relativeChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(relativeChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(relativeChar))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
221	[BUG]  [BUGGY]  if(commentStart!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(commentStart!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
222	[BUG]  [BUGGY]  While(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	While(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
223	[BUG]  [BUGGY]  if(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
224	[BUG]  [BUGGY]  while(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	while(quote!=  null  &&  quoteChar!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
225	[BUG]  [BUGGY]  safeMultilineChar(commentStart)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  safeMultilineChar(commentStart)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	safeMultilineChar(commentStart)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
226	[BUG]  [BUGGY]  if  (c  ==  'n'  ||  c!=  'r'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c  ==  'n'  ||  c!=  'r'  ||  c!=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c  ==  'n'  ||  c!=  'r'  ||  c!=  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c!=    't')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
227	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance(delimiter);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.getInstance(delimiter);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
228	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.getValue(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.getValue(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.getValue(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
229	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.newInstance();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.newInstance();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.newInstance();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
230	[BUG]  [BUGGY]  Character  c  =  delimiter.charAt(quote);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charAt(quote);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.charAt(quote);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
231	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(quoteStart);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(quoteStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(quoteStart);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
232	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(quoteCharIndex);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(quoteCharIndex);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.charAt(quoteCharIndex);	  Character    c    =    quoteChar.charAt(quote);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
233	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue(c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.charValue(c);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
234	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  delimiter.equals(quoteChar))  {	  if(delimiter!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
235	[BUG]  [BUGGY]  if(char!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(char!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(char!=  null  &&  quoteChar.equals(c))  {	  if(c!=    null    &&    quoteChar.equals(char))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
236	[BUG]  [BUGGY]  Character  c  =  source.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  source.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  source.charValue();	  Character    c    =    character.charValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
237	[BUG]  [BUGGY]  if(copiedChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(copiedChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(copiedChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    null    &&    c.equals(copiedChar))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
238	[BUG]  [BUGGY]  if(copiedChar!=  null  &&  c.equals(copiedChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(copiedChar!=  null  &&  c.equals(copiedChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(copiedChar!=  null  &&  c.equals(copiedChar))  {	  if(c!=    null    &&    c.equals(copiedChar))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
239	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.copiedChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(info.copiedChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.copiedChar))  {	  if(c!=    null    &&    c.equals(copiedChar))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
240	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (delimiter!=  null  &&  delimiter.equals(commentStart))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
241	[BUG]  [BUGGY]  Character  escapeChar  =  this.quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  this.quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  this.quoteChar.charValue();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
242	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
243	[BUG]  [BUGGY]  if  (c!=  quoteStart  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  quoteStart  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  quoteStart  &&  quoteChar.equals(c))  {	  if    (c!=    quoteChar    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
244	[BUG]  [BUGGY]  if  (c!=  quoteSurroundingSpaces  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  quoteSurroundingSpaces  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  quoteSurroundingSpaces  &&  quoteChar.equals(c))  {	  if    (c!=    quoteChar    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
245	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.quote))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(info.quote))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.quote))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
246	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.htmlStart))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(info.htmlStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.htmlStart))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
247	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.charValue))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(info.charValue))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.charValue))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
248	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.charValue()))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(info.charValue()))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.charValue()))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
249	[BUG]  [BUGGY]  if(c!=  DEFAULT  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
250	[BUG]  [BUGGY]  if(c!=  delimiter  ||  quoteChar  ==  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  quoteChar  ==  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  quoteChar  ==  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
251	[BUG]  [BUGGY]  if(c!=  quoteStart  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  quoteStart  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  quoteStart  ||  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
252	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c!=  't')  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
253	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c!=  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c!=  'n'  ||  c  ==  delimiter)  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
254	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter)  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
255	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  quoteChar  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
256	[BUG]  [BUGGY]  if  (c!=  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  quoteChar.equals(c))  {	  if    (c!=    commentStart    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
257	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
258	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
259	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'escape'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'escape'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'escape'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
260	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
261	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
262	[BUG]  [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
263	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
264	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(priceChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(priceChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(priceChar))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
265	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(copieChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(copieChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(copieChar))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
266	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(ce))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(ce))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(ce))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
267	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(other.quoteChar))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(other.quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(other.quoteChar))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
268	[BUG]  [BUGGY]  Character  c  =  quoteChar.getChars(0,  quoteChar.length());  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getChars(0,  quoteChar.length());  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.getChars(0,  quoteChar.length());	  Character    c    =    quoteChar.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
269	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c!=  DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c!=  DEFAULT)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||  c!=  DEFAULT)  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
270	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c!=  EXCEL)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c)||  c!=  EXCEL)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(c)||  c!=  EXCEL)  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
271	[BUG]  [BUGGY]  if(ceilingChar!=  null  &&  c.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(ceilingChar!=  null  &&  c.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(ceilingChar!=  null  &&  c.equals(ceilingChar))  {	  if(c!=    null    &&    c.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
272	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(choiceChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(choiceChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(choiceChar))  {	  if(c!=    null    &&    c.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
273	[BUG]  [BUGGY]  if(c!=  delimiter  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  &&  c.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
274	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  c.equals(commentStart))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
275	[BUG]  [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  quoteChar.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  &&  quoteChar.equals(ceilingChar))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
276	[BUG]  [BUGGY]  if(delimiter!=  commentStart  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  commentStart  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  commentStart  &&  quoteChar.equals(c))  {	  if(c!=    delimiter    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
277	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  delimiter)  {	  if    (escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
278	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter)  {	  if    (escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
279	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  delimiter)  {	  if    (escape!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
280	[BUG]  [BUGGY]  if(c!=  'N'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'N'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'N'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
281	[BUG]  [BUGGY]  if(c!=  '.'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  '.'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  '.'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
282	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  delimiter  ||  c  ==  quoteChar)  {	  if(c!=    'n'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
283	[BUG]  [BUGGY]  if(c!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  delimiter.equals(c))  {	  if(c!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
284	[BUG]  [BUGGY]  Set  <  Character>  set  =  quotedHeaders.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  quotedHeaders.values().iterator().next();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Set  <  Character>  set  =  quotedHeaders.values().iterator().next();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
285	[BUG]  [BUGGY]  Set  <  Character>  set  =  quotedHeaders.iterator().next();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  quotedHeaders.iterator().next();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Set  <  Character>  set  =  quotedHeaders.iterator().next();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
286	[BUG]  [BUGGY]  Set  <  Character>  set  =  quotedHeaders.get(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  quotedHeaders.get(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Set  <  Character>  set  =  quotedHeaders.get(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
287	[BUG]  [BUGGY]  Set  <  Character>  set  =  quotedHeaders.keySet();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Set  <  Character>  set  =  quotedHeaders.keySet();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Set  <  Character>  set  =  quotedHeaders.keySet();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    quotedHeaders)    {    set.add(c);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
288	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  commentStart.equals(commentStart))  {	  if(commentStart!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
289	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  commentStart.equals(quoteChar))  {	  if(commentStart!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
290	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  delimiter!=  null  &&  quoteChar.equals(c))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
291	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar  ==  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar  ==  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar  ==  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
292	[BUG]  [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  DEFAULT  &&  quoteChar!=  null  &&  quoteChar.equals(ceilingChar))  {	  if(c!=    DEFAULT    &&    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
293	[BUG]  [BUGGY]  Character  escapeChar  =  writer.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  escapeChar  =  writer.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  escapeChar  =  writer.charValue();	  Character    escapeChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
294	[BUG]  [BUGGY]  if(c  >=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  >=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  >=  null  &&  quoteChar.equals(c))  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
295	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(ce))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(ce))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(ce))  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
296	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.startsWith(c))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.startsWith(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.startsWith(c))  {	  if(c    ==    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
297	[BUG]  [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
298	[BUG]  [BUGGY]  Character  c  =  this.quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  this.quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  this.quoteChar.toCharArray();	  Character    c    =    quoteChar.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
299	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharArray(delimiter);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharArray(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  quoteChar.toCharArray(delimiter);	  Character    c    =    quoteChar.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
300	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue()  + "' ";  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue()  + "' ";  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.charValue()  + "' ";	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
301	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue()  + "n ";  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue()  + "n ";  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.charValue()  + "n ";	  Character    c    =    delimiter.charValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
302	[BUG]  [BUGGY]  String  quoteChar  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String  quoteChar  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	String  quoteChar  =  character.charValue();	  String    quoteChar    =    c.charValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
303	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c!=  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
304	[BUG]  [BUGGY]  if(c!=' "'  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=' "'  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=' "'  &&  quoteChar.equals(c))  {	  if(escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
305	[BUG]  [BUGGY]  if(c!=  null  &&  delimiter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  delimiter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  delimiter.equals(commentStart))  {	  if(c!=    null    &&    commentStart.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
306	[BUG]  [BUGGY]  if(c!=  null  &&  c.startsWith(delimiter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.startsWith(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.startsWith(delimiter))  {	  if(c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
307	[BUG]  [BUGGY]  if(delimiter!=  null  &&  c.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  c.equals(delimiter))  {	  if(c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
308	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.getInstance(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
309	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.getInstance();	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
310	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.get(c);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.get(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Quote  quoteChar  =  quotePolicy.get(c);	  if(quotePolicy!=    Quote.NONE)    {    for(Character    c    :    description.charValue())    {    quoteChar    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
311	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  delimiter  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
312	[BUG]  [BUGGY]  Character  c  =  this.quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  this.quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  this.quoteChar.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
313	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(ptrChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(ptrChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(ptrChar))  {	  if(c!=    null    &&    c.equals(copiedChar))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
314	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(codegen.quoteChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(codegen.quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(codegen.quoteChar))  {	  if(c!=    null    &&    c.equals(copiedChar))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
315	[BUG]  [BUGGY]  Character  c  =  delimiter.quoteChar(c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.quoteChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter.quoteChar(c);	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
316	[BUG]  [BUGGY]  Character  c  =  delimiter;  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  delimiter;	  Character    c    =    quoteChar(c);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
317	[BUG]  [BUGGY]  Character  c  =  getCharacter().toLowerCase();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().toLowerCase();	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
318	[BUG]  [BUGGY]  Character  c  =  getCharacter().escapeChar(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter().escapeChar(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter().escapeChar(c);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
319	[BUG]  [BUGGY]  Character  c  =  getCharacter(quoteChar);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  getCharacter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  c  =  getCharacter(quoteChar);	  Character    c    =    getCharacter();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
320	[BUG]  [BUGGY]  if(ceilingChar!=  null  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(ceilingChar!=  null  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(ceilingChar!=  null  &&  c.equals(commentStart))  {	  if(c!=    null    &&    c.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
321	[BUG]  [BUGGY]  if(c!=  quoteChar  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  quoteChar  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  quoteChar  &&  c.equals(commentStart))  {	  if    (c!=    quoteChar    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
322	[BUG]  [BUGGY]  if(c!=  c  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  c  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  c  &&  quoteChar.equals(c))  {	  if    (c!=    quoteChar    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
323	[BUG]  [BUGGY]  if(c!=  quoteChar.charValue()  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  quoteChar.charValue()  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  quoteChar.charValue()  &&  quoteChar.equals(c))  {	  if    (c!=    quoteChar    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
324	[BUG]  [BUGGY]  if(c!=  quoteChar  &&  c.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  quoteChar  &&  c.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  quoteChar  &&  c.equals(quoteChar))  {	  if    (c!=    quoteChar    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
325	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  c!=  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
326	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c  ==  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c  ==  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  delimiter  ||  c  ==  null  &&  quoteChar.equals(delimiter))  {	  if(c!=    delimiter    ||    quoteChar!=    null    &&    quoteChar.equals(delimiter))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
327	[BUG]  [BUGGY]  Char  quoteChar  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Char  quoteChar  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Char  quoteChar  =  delimiter.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
328	[BUG]  [BUGGY]  Character  quoteChar  =  quotePolicy.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  quoteChar  =  quotePolicy.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  quoteChar  =  quotePolicy.charValue();	  char    quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
329	[BUG]  [BUGGY]  if(c!=  null  &&  c.startsWith(quoteChar))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.startsWith(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.startsWith(quoteChar))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
330	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(offset))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(offset))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(offset))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
331	[BUG]  [BUGGY]  if(quote!=  null  &&  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quote!=  null  &&  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quote!=  null  &&  quoteChar  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
332	[BUG]  [BUGGY]  if(quote!=  null  &&  quoteChar  ==  null.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quote!=  null  &&  quoteChar  ==  null.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quote!=  null  &&  quoteChar  ==  null.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
333	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  + "') ");  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  throw  new  IllegalStateException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  + "') ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	throw  new  IllegalStateException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  (' "  +  commentStart  + "') ");	  if(quote!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
334	[BUG]  [BUGGY]  if(ceilingChar!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(ceilingChar!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(ceilingChar!=  null  &&  quoteChar.equals(commentStart))  {	  if(c!=    null    &&    quoteChar.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
335	[BUG]  [BUGGY]  if(c  ==  null  &&  quoteChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  quoteChar.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  null  &&  quoteChar.equals(ceilingChar))  {	  if(c!=    null    &&    quoteChar.equals(ceilingChar))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
336	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(info.cSV))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(info.cSV))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(info.cSV))  {	  if(c!=    null    &&    c.equals(info.commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
337	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(ceilingChar))  {	  if(quoteChar!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
338	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(prettyPrinter))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(prettyPrinter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(prettyPrinter))  {	  if(c!=    null    &&    quoteChar.equals(quoteChar))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
339	[BUG]  [BUGGY]  if(commentStart!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(commentStart!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(commentStart!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
340	[BUG]  [BUGGY]  if(quoteChar!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(quoteChar!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
341	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
342	[BUG]  [BUGGY]  while(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	while(quotePolicy!=  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy!=    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
343	[BUG]  [BUGGY]  if(c  ==  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  Quote.NONE)  {  throw  new  IllegalStateException( " ");  }	  if(quotePolicy    ==    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
344	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  throw  new  IllegalStateException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	throw  new  IllegalStateException( "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('   "  +  quoteChar  +   "') ");	  if(quotePolicy    ==    Quote.NONE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
345	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(ceilingChar))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.equals(ceilingChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(delimiter!=  null  &&  quoteChar.equals(ceilingChar))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
346	[BUG]  [BUGGY]  if  (c!=  commentStart  &&  c.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  commentStart  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if  (c!=  commentStart  &&  c.equals(commentStart))  {	  if    (c!=    commentStart    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
347	[BUG]  [BUGGY]  if(c!=  'n'  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  &&  quoteChar.equals(c))  {	  if    (c!=    commentStart    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
348	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.startsWith(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.startsWith(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.startsWith(c))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
349	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(prettyPrinter))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(prettyPrinter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  EXCEL  &&  quoteChar!=  null  &&  quoteChar.equals(prettyPrinter))  {	  if(c!=    EXCEL    &&    quoteChar!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
350	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  commentStart  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  commentStart  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  commentStart  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
351	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
352	[BUG]  [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'N'  ||  c  ==  'r'  ||  c  ==  delimiter  ||  c  ==  delimiter)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    delimiter    ||    c    ==    delimiter    ||    c    ==    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
353	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(commentStart)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(commentStart)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  quoteChar.equals(commentStart)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
354	[BUG]  [BUGGY]  if(c  >=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  >=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  >=  null  &&  quoteChar.equals(c)||  c!=  delimiter)  {	  if(quoteChar!=    null    &&    quoteChar.equals(c)||    c!=    delimiter)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
355	[BUG]  [BUGGY]  Character  delimiter  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  character.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
356	[BUG]  [BUGGY]  Character  delimiter  =  this.quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  delimiter  =  this.quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	Character  delimiter  =  this.quoteChar.charValue();	  Character    delimiter    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
357	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c!=    't')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
358	[BUG]  [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c!=  't')  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'N'  ||  c  ==  'r'  ||  c!=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'N'  ||  c  ==  'r'  ||  c!=  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c!=    't')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
359	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  >=  't')  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  >=  't')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  >=  't')  {	  if    (c!=    'n'    ||    c!=    'r'    ||    c!=    't')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
360	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(prettyPrinter))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }  if  (commentStart  !=  null  &&  delimiter  ==  commentStart.charValue())  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(prettyPrinter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  ==  null  &&  quotePolicy  ==  Quote.NONE)  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.35355339059327373	651	651	1	replace	if(c!=  null  &&  c.equals(prettyPrinter))  {	  if(c!=    null    &&    c.equals(prefixChar))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
