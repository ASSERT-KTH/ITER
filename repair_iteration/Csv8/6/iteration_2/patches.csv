bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  While(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	While(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	28	None	replace
2	[BUG]  [BUGGY]  while(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	28	None	replace
3	[BUG]  [BUGGY]  aughtException( "No  quotes  mode  set  but  no  escape  character  is  set ");  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  aughtException( "No  quotes  mode  set  but  no  escape  character  is  set ");  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	aughtException( "No  quotes  mode  set  but  no  escape  character  is  set ");	  if(escape!=    null)    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	28	None	replace
4	[BUG]  [BUGGY]  if  (c!=  null  &&  c.equals(escape))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  c.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  c.equals(escape))  {	  if    (c!=    null    &&    c.equals(quotePolicy))    {    	non-compiled	[CE]  	11	None	replace
5	[BUG]  [BUGGY]  if  (c!=  null  &&  c.equals(commentStart))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  c.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  c.equals(commentStart))  {	  if    (c!=    null    &&    c.equals(quotePolicy))    {    	non-compiled	[CE]  	11	None	replace
6	[BUG]  [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
7	[BUG]  [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
8	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
9	[BUG]  [BUGGY]  While(c!=  null  &&  c.equals(quoteChar))  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(c!=  null  &&  c.equals(quoteChar))  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	While(c!=  null  &&  c.equals(quoteChar))  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
10	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
11	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
12	[BUG]  [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
13	[BUG]  [BUGGY]  if(c!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
14	[BUG]  [BUGGY]  while(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
15	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  the  escape  character  is  set. ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  the  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  the  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
16	[BUG]  [BUGGY]  if  (c  ==  null  &&  c.equals(delimiter))  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c  ==  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c  ==  null  &&  c.equals(delimiter))  {	  if    (c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  	4	None	replace
17	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  c.equals(c))  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  c.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (delimiter!=  null  &&  c.equals(c))  {	  if    (c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  	4	None	replace
18	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(delimiter))  {  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  c.equals(delimiter))  {	  if    (c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  	4	None	replace
19	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(escapeChar))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(escapeChar))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(escapeChar))  {	  if    (escape    ==    null    &&    escape.equals(c))    {    	non-compiled	[CE]  	2	None	replace
20	[BUG]  [BUGGY]  if  (c!=  null  &&  quotePolicy.isEmpty())  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quotePolicy.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quotePolicy.isEmpty())  {	  if    (c!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	17	None	replace
21	[BUG]  [BUGGY]  if  (c!=  null  &&  quotePolicy.isEmptyLines())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quotePolicy.isEmptyLines())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quotePolicy.isEmptyLines())  {	  if    (c!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	17	None	replace
22	[BUG]  [BUGGY]  if  (c!=  null  ||  quotePolicy.isNone())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  ||  quotePolicy.isNone())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  ||  quotePolicy.isNone())  {	  if    (c!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	17	None	replace
23	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(commentStart))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	39	None	replace
24	[BUG]  [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(commentStart))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	39	None	replace
25	[BUG]  [BUGGY]  while(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null    &&    escape.equals(commentStart))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	39	None	replace
26	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(commentStart))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	39	None	replace
27	[BUG]  [BUGGY]  if  (c!=  null  &&  quoteChar.equals(c))  {  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quoteChar.equals(c))  {	  if    (escape!=    null    &&    quoteChar.equals(escape))    {    	non-compiled	[CE]  	6	None	replace
28	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(c))  {	  if    (escape!=    null    &&    quoteChar.equals(escape))    {    	non-compiled	[CE]  	6	None	replace
29	[BUG]  [BUGGY]  if(escape  ==  null  &&  quotePolicy.equals(escape))  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  quotePolicy.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape  ==  null  &&  quotePolicy.equals(escape))  {	  if(escape    ==    null    &&    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	46	None	replace
30	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(quotePolicy))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  quoteChar.equals(quotePolicy))  {	  if(escape    ==    null    &&    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	46	None	replace
31	[BUG]  [BUGGY]  if  (c!=  delimiter  ||  escape!=  null  &&  quoteChar.equals(c))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  ||  escape!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  delimiter  ||  escape!=  null  &&  quoteChar.equals(c))  {	  if    (escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  	13	None	replace
32	[BUG]  [BUGGY]  if  (c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  delimiter  ||  quoteChar!=  null  &&  quoteChar.equals(c))  {	  if    (escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  	13	None	replace
33	[BUG]  [BUGGY]  if  (c!=  delimiter  ||  quotePolicy!=  null  &&  quotePolicy.equals(c))  {  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  ||  quotePolicy!=  null  &&  quotePolicy.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  delimiter  ||  quotePolicy!=  null  &&  quotePolicy.equals(c))  {	  if    (escape!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	7	None	replace
34	[BUG]  [BUGGY]  if  (c!=  delimiter  ||  escape!=  null  &&  quotePolicy.equals(c))  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  ||  escape!=  null  &&  quotePolicy.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  delimiter  ||  escape!=  null  &&  quotePolicy.equals(c))  {	  if    (escape!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isNoEscape())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isNoEscape())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isNoEscape())  {	  if    (escape!=    null    &&    quotePolicy.isNoEscape())    {    	non-compiled	[CE]  	36	None	replace
36	[BUG]  [BUGGY]  if  (c!=  null  &&  quotePolicy.isNoEscape())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quotePolicy.isNoEscape())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quotePolicy.isNoEscape())  {	  if    (escape!=    null    &&    quotePolicy.isNoEscape())    {    	non-compiled	[CE]  	36	None	replace
37	[BUG]  [BUGGY]  if  (escape!=  null  &&  quotePolicy.isEscape())  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  quotePolicy.isEscape())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  quotePolicy.isEscape())  {	  if    (escape!=    null    &&    quotePolicy.isNoEscape())    {    	non-compiled	[CE]  	36	None	replace
38	[BUG]  [BUGGY]  Character  c  =  escapeChar.charAt(0);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escapeChar.charAt(0);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  escapeChar.charAt(0);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
39	[BUG]  [BUGGY]  Character  c  =  escapeChar.charAt(escape);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escapeChar.charAt(escape);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  escapeChar.charAt(escape);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
40	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(0);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(0);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  quoteChar.charAt(0);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
41	[BUG]  [BUGGY]  Character  c  =  escapeChar.charAt(commentStart);  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escapeChar.charAt(commentStart);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  escapeChar.charAt(commentStart);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
42	[BUG]  [BUGGY]  Character  c  =  delimiter.charAt(escape);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charAt(escape);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  delimiter.charAt(escape);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
43	[BUG]  [BUGGY]  Character  c  =  escapeChar.charAt(quoteStart);  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escapeChar.charAt(quoteStart);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  escapeChar.charAt(quoteStart);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
44	[BUG]  [BUGGY]  while(c!=  null  &&  c.charAt(0)!=  delimiter)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.charAt(0)!=  delimiter)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.charAt(0)!=  delimiter)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
45	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
46	[BUG]  [BUGGY]  while(escape!=  null  &&  escape.charAt(0)!=  delimiter)  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(escape!=  null  &&  escape.charAt(0)!=  delimiter)  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(escape!=  null  &&  escape.charAt(0)!=  delimiter)  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
47	[BUG]  [BUGGY]  while(c!=  null)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
48	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
49	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  1]);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  1]);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  +  1]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
50	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  -  1]);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  -  1]);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  -  1]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
51	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  2]);  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  2]);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  +  2]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
52	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]  +  1);  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]  +  1);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ]  +  1);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
53	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]));  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ]));  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ]));	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
54	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ],  quoteChar);  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ],  quoteChar);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ],  quoteChar);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
55	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isEscaped())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isEscaped())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isEscaped())  {	  if    (escape!=    null    &&    quotePolicy.isEscaped())    {    	non-compiled	[CE]  	19	None	replace
56	[BUG]  [BUGGY]  if  (escape!=  null  &&  quotePolicy.isEmptyLines())  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  quotePolicy.isEmptyLines())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  quotePolicy.isEmptyLines())  {	  if    (escape!=    null    &&    quotePolicy.isEscaped())    {    	non-compiled	[CE]  	19	None	replace
57	[BUG]  [BUGGY]  if  (c!=  null  &&  quotePolicy.isEscaped())  {  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quotePolicy.isEscaped())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quotePolicy.isEscaped())  {	  if    (escape!=    null    &&    quotePolicy.isEscaped())    {    	non-compiled	[CE]  	19	None	replace
58	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isEmptyLines())  {  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isEmptyLines())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isEmptyLines())  {	  if    (escape!=    null    &&    quotePolicy.isEscaped())    {    	non-compiled	[CE]  	19	None	replace
59	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(quotePolicy))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  c.equals(quotePolicy))  {	  if(escape!=    null    ||    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	16	None	replace
60	[BUG]  [BUGGY]  if(escape!=  null  ||  quotePolicy.equals(escape))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  ||  quotePolicy.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  ||  quotePolicy.equals(escape))  {	  if(escape!=    null    ||    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	16	None	replace
61	[BUG]  [BUGGY]  if(escape!=  null  ||  quoteChar.equals(quotePolicy))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  ||  quoteChar.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  ||  quoteChar.equals(quotePolicy))  {	  if(escape!=    null    ||    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	16	None	replace
62	[BUG]  [BUGGY]  if(escape!=  null  ||  quoteChar.equals(escape))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  ||  quoteChar.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  ||  quoteChar.equals(escape))  {	  if(escape!=    null    ||    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	16	None	replace
63	[BUG]  [BUGGY]  if(c  ==  null  &&  quotePolicy.equals(c))  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  &&  quotePolicy.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c  ==  null  &&  quotePolicy.equals(c))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	8	None	replace
64	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quoteChar.equals(c))  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quoteChar.equals(c))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	8	None	replace
65	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
66	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
67	[BUG]  [BUGGY]  while(c!=  null  &&  c.isEmpty())  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.isEmpty())  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.isEmpty())  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
68	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  c  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
69	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  escape  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  escape  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  escape  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
70	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
71	[BUG]  [BUGGY]  while(c!=  null)  {  for(Character  c  :  c.getChars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null)  {  for(Character  c  :  c.getChars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null)  {  for(Character  c  :  c.getChars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
72	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  set.getChars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  set.getChars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  set.getChars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
73	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  delimiter.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  delimiter.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  delimiter.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
74	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
75	[BUG]  [BUGGY]  while(escape!=  null  &&  escape.chars()!=  c)  {  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(escape!=  null  &&  escape.chars()!=  c)  {  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(escape!=  null  &&  escape.chars()!=  c)  {  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
76	[BUG]  [BUGGY]  while(c!=  null  &&  c.chars()!=  escape.chars())  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.chars()!=  escape.chars())  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.chars()!=  escape.chars())  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
77	[BUG]  [BUGGY]  while(c!=  null)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
78	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
79	[BUG]  [BUGGY]  if(c!=  escape)  {  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escape)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  escape)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
80	[BUG]  [BUGGY]  if(escape!=  null  &&  c!=  delimiter)  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  c!=  delimiter)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
81	[BUG]  [BUGGY]  if(c!=  null  ||  c!=  delimiter)  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  c!=  delimiter)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
82	[BUG]  [BUGGY]  if(c  ==  delimiter)  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c  ==  delimiter)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
83	[BUG]  [BUGGY]  if(c!=  escapeChar)  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  escapeChar)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
84	[BUG]  [BUGGY]  if(c  ==  escape)  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  escape)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c  ==  escape)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
85	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals( "n "))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals( "n "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals( "n "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
86	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals( "   "))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals( "   "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
87	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals( "- "))  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals( "- "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
88	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals( "* "))  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals( "* "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals( "* "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
89	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals( "/ "))  {  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals( "/ "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals( "/ "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
90	[BUG]  [BUGGY]  if  (c!=  null  &&  quote.equals(c))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quote.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quote.equals(c))  {	  if    (c!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	14	None	replace
91	[BUG]  [BUGGY]  if  (c!=  null  &&  quoteSurroundingSpaces.equals(c))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quoteSurroundingSpaces.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quoteSurroundingSpaces.equals(c))  {	  if    (c!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	14	None	replace
92	[BUG]  [BUGGY]  safeGet(c)  {  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  safeGet(c)  {  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	safeGet(c)  {  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
93	[BUG]  [BUGGY]  if(c  ==  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c  ==  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
94	[BUG]  [BUGGY]  if(c!=  null  ||  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
95	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
96	[BUG]  [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
97	[BUG]  [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
98	[BUG]  [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "   ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "   ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
99	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "   ");  }  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "   ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
100	[BUG]  [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException(  [CE]  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException(  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException(	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
101	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(quoteChar))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  c.equals(quoteChar))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  	44	None	replace
102	[BUG]  [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.equals(c))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy  ==  null  &&  quotePolicy.equals(c))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
103	[BUG]  [BUGGY]  if(quotePolicy!=  null  ||  quotePolicy.equals(quotePolicy))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  ||  quotePolicy.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  ||  quotePolicy.equals(quotePolicy))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
104	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quoteChar.equals(quotePolicy))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quoteChar.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quoteChar.equals(quotePolicy))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
105	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals( " "))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.equals( " "))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
106	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isEmpty())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isEmpty())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
107	[BUG]  [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.isNone())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.isNone())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy  ==  null  &&  quotePolicy.isNone())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
108	[BUG]  [BUGGY]  if(quotePolicy!=  null  ||  quotePolicy.isNone())  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  ||  quotePolicy.isNone())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  ||  quotePolicy.isNone())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
109	[BUG]  [BUGGY]  if(c!=  null  ||  escape.equals(c))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  escape.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
110	[BUG]  [BUGGY]  if(c!=  null  ||  escapeChar.equals(c))  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  escapeChar.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
111	[BUG]  [BUGGY]  if(escape!=  null  ||  quoteChar.equals(c))  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  ||  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  ||  quoteChar.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
112	[BUG]  [BUGGY]  if(c  ==  null  ||  escape.equals(c))  {  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c  ==  null  ||  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c  ==  null  ||  escape.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
113	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escape!=  null  &&  escape.equals(c))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escape!=  null  &&  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  escape!=  null  &&  escape.equals(c))  {	  if    (escape!=    null    &&    escape.equals(c))    {    	non-compiled	[CE]  	1	None	replace
114	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	38	None	replace
115	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(escape))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	38	None	replace
116	[BUG]  [BUGGY]  if(c!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	38	None	replace
117	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(escapeChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(escapeChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(escapeChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	38	None	replace
118	[BUG]  [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
119	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
120	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
121	[BUG]  [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
122	[BUG]  [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(1))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(1))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(1))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
123	[BUG]  [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
124	[BUG]  [BUGGY]  if  (escape  ==  null  &&  quotePolicy.isEmpty())  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  quotePolicy.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape  ==  null  &&  quotePolicy.isEmpty())  {	  if    (escape!=    null    &&    quotePolicy.isEmpty())    {    	non-compiled	[CE]  	43	None	replace
125	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escape.equals(c))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(delimiter!=  null  &&  escape.equals(c))  {	  if    (escape!=    null    &&    escape.equals(delimiter))    {    	non-compiled	[CE]  	32	None	replace
126	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  quoteChar.equals(delimiter))  {	  if    (escape!=    null    &&    escape.equals(delimiter))    {    	non-compiled	[CE]  	32	None	replace
127	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escapeChar!=  null  &&  escapeChar.equals(c))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escapeChar!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  escapeChar!=  null  &&  escapeChar.equals(c))  {	  if(escape!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  	37	None	replace
128	[BUG]  [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(c))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape  ==  null  &&  escapeChar.equals(c))  {	  if(escape!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  	37	None	replace
129	[BUG]  [BUGGY]  if(c!=  null  &&  escapeChar.equals(c))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  escapeChar.equals(c))  {	  if(escape!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  	37	None	replace
130	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
131	[BUG]  [BUGGY]  while(c!=  null  &&  c.isEmpty())  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.isEmpty())  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.isEmpty())  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
132	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
133	[BUG]  [BUGGY]  if  (escape!=  null  &&  recordSeparator.equals(c))  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  recordSeparator.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  recordSeparator.equals(c))  {	  if    (escape!=    null    &&    escape.equals(recordSeparator))    {    	non-compiled	[CE]  	27	None	replace
134	[BUG]  [BUGGY]  if  (c!=  null  &&  c.equals(recordSeparator))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  c.equals(recordSeparator))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  c.equals(recordSeparator))  {	  if    (escape!=    null    &&    escape.equals(recordSeparator))    {    	non-compiled	[CE]  	27	None	replace
135	[BUG]  [BUGGY]  if  (escape  ==  null  &&  recordSeparator.equals(c))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  recordSeparator.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape  ==  null  &&  recordSeparator.equals(c))  {	  if    (escape!=    null    &&    escape.equals(recordSeparator))    {    	non-compiled	[CE]  	27	None	replace
136	[BUG]  [BUGGY]  while(c!=  null  &&  c.charAt(c)!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.charAt(c)!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.charAt(c)!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
137	[BUG]  [BUGGY]  if(c!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
138	[BUG]  [BUGGY]  while(c!=  null  &&  c.charAt(c)!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.charAt(c)!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.charAt(c)!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
139	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
140	[BUG]  [BUGGY]  while(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
141	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(offset))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(offset))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(offset))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  	44	None	replace
142	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(expandSurroundingSpaces))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(expandSurroundingSpaces))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(expandSurroundingSpaces))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  	44	None	replace
143	[BUG]  [BUGGY]  if(escape  >=  null  &&  escape.equals(quotePolicy))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  >=  null  &&  escape.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape  >=  null  &&  escape.equals(quotePolicy))  {	  if(escape!=    null    ||    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	16	None	replace
144	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isNone())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isNone())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isNone())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
145	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isSupported())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isSupported())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isSupported())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
146	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
147	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  c.equals(delimiter))  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (delimiter!=  null  &&  c.equals(delimiter))  {	  if    (c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  	4	None	replace
148	[BUG]  [BUGGY]  if  (c!=  delimiter  ||  escape!=  null  &&  c.equals(c))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  ||  escape!=  null  &&  c.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  delimiter  ||  escape!=  null  &&  c.equals(c))  {	  if    (escape!=    null    &&    quoteChar.equals(c))    {    	non-compiled	[CE]  	13	None	replace
149	[BUG]  [BUGGY]  if  (escape!=  null  &&  delimiter.equals(c))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  delimiter.equals(c))  {	  if    (escape!=    null    &&    escape.equals(delimiter))    {    	non-compiled	[CE]  	32	None	replace
150	[BUG]  [BUGGY]  if  (escape  ==  null  &&  quotePolicy.isNoEscape())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape  ==  null  &&  quotePolicy.isNoEscape())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape  ==  null  &&  quotePolicy.isNoEscape())  {	  if    (escape!=    null    &&    quotePolicy.isNoEscape())    {    	non-compiled	[CE]  	36	None	replace
151	[BUG]  [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.isNoEscape())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.isNoEscape())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy  ==  null  &&  quotePolicy.isNoEscape())  {	  if    (escape!=    null    &&    quotePolicy.isNoEscape())    {    	non-compiled	[CE]  	36	None	replace
152	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escape  ==  null  &&  escape.equals(c))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escape  ==  null  &&  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  escape  ==  null  &&  escape.equals(c))  {	  if    (escape    ==    null    &&    escape.equals(c))    {    	non-compiled	[CE]  	2	None	replace
153	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c)||  c!=  delimiter)  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c)||  c!=  delimiter)  {	  if    (escape    ==    null    &&    escape.equals(c))    {    	non-compiled	[CE]  	2	None	replace
154	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  3]);  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  +  3]);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  +  3]);	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
155	[BUG]  [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ])+  1;  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  String[]  header  =  set.toArray(new  String[set.size()  ])+  1;  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	String[]  header  =  set.toArray(new  String[set.size()  ])+  1;	  String[]    header    =    set.toArray(new    String[set.size()    ]);    	non-compiled	[CE]  	20	None	replace
156	[BUG]  [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
157	[BUG]  [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  not  escape  character  is  set ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  not  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  not  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
158	[BUG]  [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  none  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  none  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  none  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
159	[BUG]  [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(char))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(char))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(quoteChar.equals(char))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
160	[BUG]  [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  but  no  escape  character  is  set ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	29	None	replace
161	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
162	[BUG]  [BUGGY]  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
163	[BUG]  [BUGGY]  for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
164	[BUG]  [BUGGY]  if(c!=  EXCEL  &&  quotePolicy!=  null  &&  quotePolicy.equals(c))  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  &&  quotePolicy!=  null  &&  quotePolicy.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  EXCEL  &&  quotePolicy!=  null  &&  quotePolicy.equals(c))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	8	None	replace
165	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(c)||  c!=  delimiter)  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.equals(c)||  c!=  delimiter)  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	8	None	replace
166	[BUG]  [BUGGY]  while(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	38	None	replace
167	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  'n'  ||  c!=  'r')  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	38	None	replace
168	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals( "+ "))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals( "+ "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals( "+ "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
169	[BUG]  [BUGGY]  if(escape  ==  null  &&  escape.equals( " "))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  &&  escape.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape  ==  null  &&  escape.equals( " "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
170	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException(  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException(  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException(	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
171	[BUG]  [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
172	[BUG]  [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
173	[BUG]  [BUGGY]  if(c!=  null  ||  c.equals(escape))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  ||  c.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  ||  c.equals(escape))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
174	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escape!=  null  ||  escape.equals(c))  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escape!=  null  ||  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  escape!=  null  ||  escape.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
175	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escape  ==  null  ||  escape.equals(c))  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escape  ==  null  ||  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  escape  ==  null  ||  escape.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
176	[BUG]  [BUGGY]  if(c!=  EXCEL)  {  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  EXCEL)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
177	[BUG]  [BUGGY]  if(c!=  DEFAULT)  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  DEFAULT)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  DEFAULT)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
178	[BUG]  [BUGGY]  if(c!=  EXCEL  ||  c!=  delimiter)  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  EXCEL  ||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  EXCEL  ||  c!=  delimiter)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
179	[BUG]  [BUGGY]  if(c!=  null)  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
180	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
181	[BUG]  [BUGGY]  if(c!=  delimiter)  {  for(Character  c  :  escape.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  for(Character  c  :  escape.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  for(Character  c  :  escape.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
182	[BUG]  [BUGGY]  for(Character  c  :  delimiter.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  delimiter.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  delimiter.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
183	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  delimiter.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  delimiter.charAt(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  delimiter.charAt(c))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
184	[BUG]  [BUGGY]  if  (c!=  delimiter  ||  escape  ==  null  &&  quotePolicy.equals(c))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  delimiter  ||  escape  ==  null  &&  quotePolicy.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  delimiter  ||  escape  ==  null  &&  quotePolicy.equals(c))  {	  if    (escape    ==    null    &&    quotePolicy.equals(c))    {    	non-compiled	[CE]  	10	None	replace
185	[BUG]  [BUGGY]  if  (quotePolicy!=  null  &&  quotePolicy.equals(couldNotEscape))  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (quotePolicy!=  null  &&  quotePolicy.equals(couldNotEscape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (quotePolicy!=  null  &&  quotePolicy.equals(couldNotEscape))  {	  if    (escape!=    null    &&    quotePolicy.equals(escape))    {    	non-compiled	[CE]  	15	None	replace
186	[BUG]  [BUGGY]  for(Character  c  :  delimiter.chars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  delimiter.chars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  delimiter.chars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
187	[BUG]  [BUGGY]  while(c!=  null  &&  c.chars()!=  delimiter)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.chars()!=  delimiter)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.chars()!=  delimiter)  {  for(Character  c  :  c.chars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
188	[BUG]  [BUGGY]  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  escape.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
189	[BUG]  [BUGGY]  if  (nonEmptyLines!=  null  &&  quotePolicy.isEmpty())  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (nonEmptyLines!=  null  &&  quotePolicy.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (nonEmptyLines!=  null  &&  quotePolicy.isEmpty())  {	  if    (escape!=    null    &&    quotePolicy.isEmpty())    {    	non-compiled	[CE]  	43	None	replace
190	[BUG]  [BUGGY]  if  (escape!=  null  &&  quotePolicy.isEmpty()  ||  quotePolicy.isEmpty())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  quotePolicy.isEmpty()  ||  quotePolicy.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  quotePolicy.isEmpty()  ||  quotePolicy.isEmpty())  {	  if    (escape!=    null    &&    quotePolicy.isEmpty())    {    	non-compiled	[CE]  	43	None	replace
191	[BUG]  [BUGGY]  Character  c  =  escapeChar.charAt(quoteChar);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  escapeChar.charAt(quoteChar);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  escapeChar.charAt(quoteChar);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
192	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
193	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(1))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(1))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(1))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
194	[BUG]  [BUGGY]  while(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
195	[BUG]  [BUGGY]  if(escape!=  null  &&  escapeChar.equals(delimiter))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escapeChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escapeChar.equals(delimiter))  {	  if(escape!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  	37	None	replace
196	[BUG]  [BUGGY]  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  escape.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
197	[BUG]  [BUGGY]  for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
198	[BUG]  [BUGGY]  while(escape!=  null  &&  escape.getChars()!=  null)  {  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(escape!=  null  &&  escape.getChars()!=  null)  {  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(escape!=  null  &&  escape.getChars()!=  null)  {  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
199	[BUG]  [BUGGY]  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  escape.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
200	[BUG]  [BUGGY]  while(c!=  null  &&  c.getChars()!=  delimiter)  {  for(Character  c  :  c.getChars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.getChars()!=  delimiter)  {  for(Character  c  :  c.getChars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.getChars()!=  delimiter)  {  for(Character  c  :  c.getChars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
201	[BUG]  [BUGGY]  for(Character  c  :  delimiter.getChars())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  for(Character  c  :  delimiter.getChars())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	for(Character  c  :  delimiter.getChars())  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
202	[BUG]  [BUGGY]  if  (c!=  null  &&  c.equals(desc))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  c.equals(desc))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  c.equals(desc))  {	  if    (c!=    null    &&    c.equals(quotePolicy))    {    	non-compiled	[CE]  	11	None	replace
203	[BUG]  [BUGGY]  if  (escape!=  null  &&  recordSeparator.equals(escape))  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  recordSeparator.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  recordSeparator.equals(escape))  {	  if    (escape!=    null    &&    escape.equals(recordSeparator))    {    	non-compiled	[CE]  	27	None	replace
204	[BUG]  [BUGGY]  if  (escape!=  null  &&  recordSeparator.equals(delimiter))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  recordSeparator.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  recordSeparator.equals(delimiter))  {	  if    (escape!=    null    &&    escape.equals(recordSeparator))    {    	non-compiled	[CE]  	27	None	replace
205	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(1))  {  throw  new  IllegalStateException( "  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(1))  {  throw  new  IllegalStateException( "  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(1))  {  throw  new  IllegalStateException( "	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
206	[BUG]  [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( " ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
207	[BUG]  [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException(  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException(  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException(	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
208	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(escape))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(escape))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.equals(escape))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
209	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(commentStart))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.equals(commentStart))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
210	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(offset))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(offset))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.equals(offset))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
211	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals( " "))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals( " "))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals( " "))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	28	None	replace
212	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	28	None	replace
213	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.chars()!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.chars()!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.chars()!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
214	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  escape  :  c.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  escape  :  c.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  escape  :  c.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
215	[BUG]  [BUGGY]  if(escape!=  null)  {  for(Character  c  :  delimiter.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null)  {  for(Character  c  :  delimiter.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null)  {  for(Character  c  :  delimiter.chars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.chars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	23	None	replace
216	[BUG]  [BUGGY]  if(escape!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escapeChar.equals(c)||  c!=  delimiter)  {	  if(escape!=    null    &&    escapeChar.equals(c))    {    	non-compiled	[CE]  	37	None	replace
217	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(delimiter))  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  c.equals(delimiter))  {	  if    (c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  	4	None	replace
218	[BUG]  [BUGGY]  if  (c!=  null  &&  delimiter.equals(c))  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  delimiter.equals(c))  {	  if    (c!=    null    &&    c.equals(delimiter))    {    	non-compiled	[CE]  	4	None	replace
219	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(commentStart))  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(commentStart))  {	  if(escape    ==    null    &&    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	46	None	replace
220	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(ceiling))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(ceiling))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(ceiling))  {	  if(escape    ==    null    &&    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	46	None	replace
221	[BUG]  [BUGGY]  if(c!=  null  &&  c.isEscaped())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.isEscaped())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.isEscaped())  {	  if    (escape!=    null    &&    quotePolicy.isEscaped())    {    	non-compiled	[CE]  	19	None	replace
222	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(quoteChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(quoteChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(quoteChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
223	[BUG]  [BUGGY]  while(c!=  null  &&  c.equals(quoteChar))  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  while(c!=  null  &&  c.equals(quoteChar))  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	while(c!=  null  &&  c.equals(quoteChar))  {  if(quoteChar.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(quoteChar!=    null)    {    if(quoteChar.equals(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
224	[BUG]  [BUGGY]  if(c!=  null  &&  c.isNoEscape())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.isNoEscape())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.isNoEscape())  {	  if    (escape!=    null    &&    quotePolicy.isNoEscape())    {    	non-compiled	[CE]  	36	None	replace
225	[BUG]  [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
226	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
227	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
228	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
229	[BUG]  [BUGGY]  if(escape!=  null  &&  c.equals(quoteChar))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  c.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  c.equals(quoteChar))  {	  if(c!=    null    &&    c.equals(quoteChar))    {    	non-compiled	[CE]  	44	None	replace
230	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
231	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  escape.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
232	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
233	[BUG]  [BUGGY]  While(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  While(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	While(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	25	None	replace
234	[BUG]  [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
235	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
236	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
237	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  =  quoteChar;  c!=  null;  c  =  c.charAt(0))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set	  if(escape!=    null    &&    escape.equals(c))    {    for(Character    c    =    quoteChar;    c!=    null;    c    =    c.charAt(0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	41	None	replace
238	[BUG]  [BUGGY]  Character  c  =  quoteChar.charAt(delimiter);  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.charAt(delimiter);  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	Character  c  =  quoteChar.charAt(delimiter);	  Character    c    =    quoteChar.charAt(escape);    	non-compiled	[CE]  	21	None	replace
239	[BUG]  [BUGGY]  if(c!=  delimiter  ||  escape!=  null  &&  c.equals(delimiter))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  escape!=  null  &&  c.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  escape!=  null  &&  c.equals(delimiter))  {	  if    (escape!=    null    &&    escape.equals(delimiter))    {    	non-compiled	[CE]  	32	None	replace
240	[BUG]  [BUGGY]  if(delimiter!=  null  &&  escapeChar.equals(c))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  escapeChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(delimiter!=  null  &&  escapeChar.equals(c))  {	  if    (escape!=    null    &&    escape.equals(delimiter))    {    	non-compiled	[CE]  	32	None	replace
241	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
242	[BUG]  [BUGGY]  if(c!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter)  {  for(Character  c  :  c.charAt(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.charAt(c))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
243	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  escape  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  escape  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  escape  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
244	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  set.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
245	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  delimiter.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
246	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  for(Character  c  :  c.keySet())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.keySet())    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	31	None	replace
247	[BUG]  [BUGGY]  if(c!=  null  &&  c.isEmpty())  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.isEmpty())  {	  if    (escape!=    null    &&    quotePolicy.isEmpty())    {    	non-compiled	[CE]  	43	None	replace
248	[BUG]  [BUGGY]  if  (escape!=  null  &&  quoteChar.isEmpty())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  quoteChar.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  quoteChar.isEmpty())  {	  if    (escape!=    null    &&    quotePolicy.isEmpty())    {    	non-compiled	[CE]  	43	None	replace
249	[BUG]  [BUGGY]  if  (escape!=  null  &&  quoteLines.isEmpty())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (escape!=  null  &&  quoteLines.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (escape!=  null  &&  quoteLines.isEmpty())  {	  if    (escape!=    null    &&    quotePolicy.isEmpty())    {    	non-compiled	[CE]  	43	None	replace
250	[BUG]  [BUGGY]  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");	  if(escape!=    null    &&    escape.equals(commentStart))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	39	None	replace
251	[BUG]  [BUGGY]  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(commentStart))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	39	None	replace
252	[BUG]  [BUGGY]  if(escape  ==  null  ||  escape.equals(c))  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  ||  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape  ==  null  ||  escape.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
253	[BUG]  [BUGGY]  if(c!=  null  &&  escape.equals(c))  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  escape.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  escape.equals(c))  {	  if(escape!=    null    ||    escape.equals(c))    {    	non-compiled	[CE]  	3	None	replace
254	[BUG]  [BUGGY]  if(escape  ==  null  ||  escape.equals(quotePolicy))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape  ==  null  ||  escape.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape  ==  null  ||  escape.equals(quotePolicy))  {	  if(escape!=    null    ||    escape.equals(quotePolicy))    {    	non-compiled	[CE]  	16	None	replace
255	[BUG]  [BUGGY]  if  (c!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isNone())  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isNone())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if  (c!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isNone())  {	  if    (c!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	17	None	replace
256	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals( "))  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals( "))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals( "))  {	  if(escape!=    null    &&    escape.equals(   "   "))    {    	non-compiled	[CE]  	33	None	replace
257	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(ptr))  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.equals(ptr))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.equals(ptr))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
258	[BUG]  [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.equals(quotePolicy))  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy  ==  null  &&  quotePolicy.equals(quotePolicy))  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy  ==  null  &&  quotePolicy.equals(quotePolicy))  {	  if(quotePolicy!=    null    &&    quotePolicy.equals(quotePolicy))    {    	non-compiled	[CE]  	34	None	replace
259	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isSimple())  {  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isSimple())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isSimple())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
260	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isEmpty())  {  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isNone()  ||  quotePolicy.isEmpty())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
261	[BUG]  [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isStatic())  {  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(quotePolicy!=  null  &&  quotePolicy.isStatic())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(quotePolicy!=  null  &&  quotePolicy.isStatic())  {	  if(quotePolicy!=    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	18	None	replace
262	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.getChars()!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.getChars()!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.getChars()!=  delimiter)  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
263	[BUG]  [BUGGY]  if(c!=  null)  {  for(Character  escape  :  c.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [CE]  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null)  {  for(Character  escape  :  c.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null)  {  for(Character  escape  :  c.getChars())  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set   ");  }	  if(escape!=    null)    {    for(Character    c    :    escape.getChars())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
264	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c!=  escapeChar)  {  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c!=  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  c!=  escapeChar)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
265	[BUG]  [BUGGY]  if(c!=  delimiter  &&  c  <  commentStart)  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  c  <  commentStart)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  &&  c  <  commentStart)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
266	[BUG]  [BUGGY]  if(c!=  delimiter  &&  c!=  escapeChar)  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  c!=  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  &&  c!=  escapeChar)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
267	[BUG]  [BUGGY]  if(c!=  delimiter  &&  c  <  =  escapeChar)  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  &&  c  <  =  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  &&  c  <  =  escapeChar)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
268	[BUG]  [BUGGY]  if(c!=  delimiter  ||  c  ==  escapeChar)  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  delimiter  ||  c  ==  escapeChar)  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  delimiter  ||  c  ==  escapeChar)  {	  if(c!=    delimiter)    {    	non-compiled	[CE]  	45	None	replace
269	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [CE]  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set   ");    }    	non-compiled	[CE]  	38	None	replace
270	[BUG]  [BUGGY]  if(c!=  null  &&  c.isNone())  {  [CE]  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.isNone())  {  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.isNone())  {	  if    (escape    ==    null    &&    quotePolicy.isNone())    {    	non-compiled	[CE]  	35	None	replace
271	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(escapeChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(escapeChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(escapeChar))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
272	[BUG]  [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(c!=  null  &&  c.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(c!=  null  &&  c.equals(delimiter))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  no  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
273	[BUG]  [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  the  escape  character  is  set. ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  and  the  escape  character  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  the  escape  character  is  set. ");  }  [BUGGY]      throw  new  IllegalStateException(     "No  quotes  mode  set  but  no  escape  character  is  set     ");  }  if  (header  !=  null)  {  final  Set<String>  set  =  new  HashSet<String>(header.length);  set.addAll(Arrays.asList(header));  if  (set.size()  !=  header.length)  {  throw  new  IllegalStateException(     "The  header  contains  duplicate  names:       "  +  Arrays.toString(header));  }  }  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	661	661	1	replace	if(escape!=  null  &&  escape.equals(c))  {  throw  new  IllegalStateException( "No  quotes  mode  set  but  the  escape  character  is  set. ");  }	  if(escape!=    null    &&    escape.equals(c))    {    throw    new    IllegalStateException(   "No    quotes    mode    set    but    no    escape    character    is    set.   ");    }    	non-compiled	[CE]  	40	None	replace
