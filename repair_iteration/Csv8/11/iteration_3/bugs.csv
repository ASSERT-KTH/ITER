bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.characterValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.characterValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.characterValue())  {	  if    (delimiter!=    quotePolicy.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
2	[BUG]  [BUGGY]  if  (commentStart!=  quotePolicy.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  quotePolicy.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  quotePolicy.charValue())  {	  if    (delimiter!=    quotePolicy.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
3	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.commentStart)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.commentStart)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.commentStart)  {	  if    (delimiter!=    quotePolicy.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
4	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.commentStart())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.commentStart())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.commentStart())  {	  if    (delimiter!=    quotePolicy.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
5	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.title())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.title())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.title())  {	  if    (delimiter!=    quotePolicy.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
6	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.quoteChar())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.quoteChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.quoteChar())  {	  if    (delimiter!=    quotePolicy.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
7	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter!=  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
8	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quote.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quote.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quote.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
9	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quotePolicy.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quotePolicy.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quotePolicy.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
10	[BUG]  [BUGGY]  if  (c  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c  ==  quoteChar.charValue())  {	  if    (delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
11	[BUG]  [BUGGY]  if  (delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter  ==  quoteChar.length())  {	  if    (delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
12	[BUG]  [BUGGY]  if  (delimiter  ==  quoteChar.toLowerCase())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteChar.toLowerCase())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter  ==  quoteChar.toLowerCase())  {	  if    (delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  if  (c!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  quoteChar.charValue())  {	  if    (delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  c.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  c.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar!=  c.charValue())  {	  if    (c!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  if  (c!=  null  &&  delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  null  &&  delimiter  ==  quoteChar.length())  {	  if    (c!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  if  (c!=  null  &&  delimiter  ==  quote.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  delimiter  ==  quote.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  null  &&  delimiter  ==  quote.charValue())  {	  if    (c!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
17	[BUG]  [BUGGY]  if  (c!=  null  &&  delimiter  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  delimiter  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  null  &&  delimiter  ==  quoteChar.toString())  {	  if    (c!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteStart  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteStart  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteStart  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteStart    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
19	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart  ==  delimiter.toString())  {	  if    (delimiter!=    null    &&    quoteStart    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
20	[BUG]  [BUGGY]  if  (this.commentStart!=  null  &&  delimiter  ==  this.commentStart.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (this.commentStart!=  null  &&  delimiter  ==  this.commentStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (this.commentStart!=  null  &&  delimiter  ==  this.commentStart.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
21	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  delimiter  ==  this.commentStart.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  delimiter  ==  this.commentStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  delimiter  ==  this.commentStart.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
22	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteChar.toCharArray())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
23	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter!=  quoteChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter!=  quoteChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter!=  quoteChar.toCharArray())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
24	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quotePolicy.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quotePolicy.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quotePolicy.toCharArray())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
25	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  commentStart.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  commentStart.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  commentStart.toCharArray())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
26	[BUG]  [BUGGY]  if  (delimiter  ==  quoteStart.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter  ==  quoteStart.charValue())  {	  if    (delimiter    ==    commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
27	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue()    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue()    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue()    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  if(start!=  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(start!=  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(start!=  null  &&  quoteChar!=  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar!=  escape.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  templateChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  templateChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar!=  templateChar.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  null.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  null.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  null.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
35	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar!=  null.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar!=  null.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
36	[BUG]  [BUGGY]  if(commentStart!=  null  &&  commentStart  ==  null.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  commentStart  ==  null.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(commentStart!=  null  &&  commentStart  ==  null.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
37	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  start.toCharArray())  {	  if(delimiter!=    null    &&    delimiter    ==    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
38	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.intValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.intValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  start.intValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
39	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar  ==  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar  ==  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar  ==  delimiter.getCharValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
40	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar!=  delimiter.getCharValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
41	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteChar.getCharValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
42	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  delimiter.length())  {	  if(delimiter!=    null    &&    commentStart    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
43	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  quoteChar.length())  {	  if(delimiter!=    null    &&    commentStart    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
44	[BUG]  [BUGGY]  if(start!=  null  &&  commentStart  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(start!=  null  &&  commentStart  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(start!=  null  &&  commentStart  ==  delimiter.length())  {	  if(delimiter!=    null    &&    commentStart    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  if(commentStart!=  null  &&  commentStart  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  commentStart  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(commentStart!=  null  &&  commentStart  ==  delimiter.length())  {	  if(delimiter!=    null    &&    commentStart    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.getValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.getValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.getValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
47	[BUG]  [BUGGY]  if(start!=  null  &&  delimiter  ==  start.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(start!=  null  &&  delimiter  ==  start.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(start!=  null  &&  delimiter  ==  start.getCharValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
48	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  start.getCharValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
49	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  delimiter  ==  start.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  delimiter  ==  start.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter  ==  null  &&  delimiter  ==  start.getCharValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
50	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "commentStart ");  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "commentStart ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "commentStart ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotepolicy   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
51	[BUG]  [BUGGY]  Quote  quotePolicy  =  quoteChar.getFormat( "quotepolicy ");  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quoteChar.getFormat( "quotepolicy ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quoteChar.getFormat( "quotepolicy ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotepolicy   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
52	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "quote ",  null);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "quote ",  null);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "quote ",  null);	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotepolicy   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
53	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "quote-policy ");  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "quote-policy ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "quote-policy ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotepolicy   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
54	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentChar();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCurrentChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getCurrentChar();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
55	[BUG]  [BUGGY]  Character  c  =  delimiter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  delimiter.getCurrentCharacter();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
56	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentCharIndex();  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCurrentCharIndex();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getCurrentCharIndex();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
57	[BUG]  [BUGGY]  Character  c  =  quoteChar.getSurroundingSpaces();  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getSurroundingSpaces();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getSurroundingSpaces();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
58	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCurrentCharActer();  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCurrentCharActer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getCurrentCharActer();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
59	[BUG]  [BUGGY]  Character  c  =  quoteChar.getEscapedChar();  [CE]  illegal  start  of  type  [FE]                                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getEscapedChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getEscapedChar();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
60	[BUG]  [BUGGY]  if  (c!=  null  &&  c  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  c  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  null  &&  c  ==  quoteChar.charValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  commentStart  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  commentStart  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (quoteChar!=  null  &&  commentStart  ==  quoteChar.charValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  commentStart  ==  quoteChar.toString())  {	  if    (commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
63	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar!=  this.commentStart.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteChar!=  this.commentStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteChar!=  this.commentStart.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
64	[BUG]  [BUGGY]  if  (this.commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (this.commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (this.commentStart!=  null  &&  quoteChar!=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
65	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(escape);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(escape);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
66	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCSV(c);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCSV(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getCSV(c);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
67	[BUG]  [BUGGY]  Character  c  =  set.getCSV(c);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  set.getCSV(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  set.getCSV(c);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
68	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(quoteChar);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(quoteChar);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
69	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(defaultCharacter);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(defaultCharacter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(defaultCharacter);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
70	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(c,  escape);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(c,  escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(c,  escape);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
71	[BUG]  [BUGGY]  if  (delimiter!=  quoteStart.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quoteStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quoteStart.length())  {	  if    (delimiter!=    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
72	[BUG]  [BUGGY]  if  (c!=  quoteStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  quoteStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  quoteStart.charValue())  {	  if    (delimiter!=    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
73	[BUG]  [BUGGY]  Character  c  =  quoteCharacter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteCharacter.getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteCharacter.getCurrentCharacter();	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
74	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCurrentChar();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCurrentChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCurrentChar();	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
75	[BUG]  [BUGGY]  Character  c  =  quoteSurroundingSpaces.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteSurroundingSpaces.getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteSurroundingSpaces.getCurrentCharacter();	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
76	[BUG]  [BUGGY]  Character  c  =  quoteDelimiter.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteDelimiter.getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteDelimiter.getCurrentCharacter();	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
77	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  delimiter  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  delimiter  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(quoteChar!=  null  &&  delimiter  ==  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
78	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar.charValue()  ==  delimiter)  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
79	[BUG]  [BUGGY]  Quote  quotePolicy  =  quoteChar.getInstance();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quoteChar.getInstance();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quoteChar.getInstance();	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
80	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(c);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(c);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
81	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceUTC();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceUTC();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstanceUTC();	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
82	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceUTF8();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceUTF8();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstanceUTF8();	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
83	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(quoteChar);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(quoteChar);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
84	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceType();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceType();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstanceType();	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
85	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  quoteChar.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  quoteChar.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  commentStart  ==  quoteChar.getCharValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  if  (c!=  null  &&  c  ==  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  null  &&  c  ==  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  null  &&  c  ==  delimiter.getCharValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
87	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart!=  delimiter.getCharValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
88	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteStart.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
89	[BUG]  [BUGGY]  Quote  quotePolicy  =  quoteChar.getFormat();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quoteChar.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quoteChar.getFormat();	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
90	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy!=  null?  quotePolicy.getFormat()  :  null;  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy!=  null?  quotePolicy.getFormat()  :  null;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy!=  null?  quotePolicy.getFormat()  :  null;	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
91	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy!=  null?  quotePolicy.getFormat()  :  DEFAULT;  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy!=  null?  quotePolicy.getFormat()  :  DEFAULT;  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy!=  null?  quotePolicy.getFormat()  :  DEFAULT;	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
92	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getPosition();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getPosition();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getPosition();	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
93	[BUG]  [BUGGY]  Quote  quotePolicy  =  quote.getFormat();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quote.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quote.getFormat();	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
94	[BUG]  [BUGGY]  if  (delimiter!=  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quoteChar.length())  {	  if    (delimiter!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
95	[BUG]  [BUGGY]  if  (commentStart!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  quoteChar.charValue())  {	  if    (delimiter!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
96	[BUG]  [BUGGY]  if  (delimiter!=  quoteChar.toLowerCase())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quoteChar.toLowerCase())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quoteChar.toLowerCase())  {	  if    (delimiter!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
97	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
98	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(quoteChar);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCharacter(quoteChar);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
99	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(c,  escape);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(c,  escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCharacter(c,  escape);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
100	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(escape);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCharacter(escape);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
101	[BUG]  [BUGGY]  Character  c  =  set.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  set.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  set.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
102	[BUG]  [BUGGY]  Character  c  =  delimiter.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  delimiter.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
103	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
104	[BUG]  [BUGGY]  if(start!=  null  &&  delimiter  ==  start.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(start!=  null  &&  delimiter  ==  start.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(start!=  null  &&  delimiter  ==  start.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
105	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.getChar())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteStart.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
106	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.getChar())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  start.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
107	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  delimiter  ==  start.getChar())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  delimiter  ==  start.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter  ==  null  &&  delimiter  ==  start.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
108	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "CSVFormat ");  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "CSVFormat ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "CSVFormat ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotePolicy   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
109	[BUG]  [BUGGY]  Quote  quotePolicy  =  quoteChar.getFormat( "quotePolicy ");  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quoteChar.getFormat( "quotePolicy ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quoteChar.getFormat( "quotePolicy ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotePolicy   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
110	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "CommentStart ");  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "CommentStart ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "CommentStart ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotePolicy   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
111	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  quoteStart.toString())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  quoteStart.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart  ==  quoteStart.toString())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.toString())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
112	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart!=  quoteStart.toString())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart!=  quoteStart.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart!=  quoteStart.toString())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.toString())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
113	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  delimiter  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  delimiter  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  delimiter  ==  quoteChar.toString())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.toString())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
114	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  quoteStart.toString())  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  quoteStart.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart  ==  quoteStart.toString())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.toString())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
115	[BUG]  [BUGGY]  if  (source!=  null  ||  commentStart  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (source!=  null  ||  commentStart  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (source!=  null  ||  commentStart  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
116	[BUG]  [BUGGY]  if  (source!=  null  ||  commentStart  ==  source.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (source!=  null  ||  commentStart  ==  source.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (source!=  null  ||  commentStart  ==  source.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
117	[BUG]  [BUGGY]  if  (source!=  null  &&  commentStart  ==  source.charValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (source!=  null  &&  commentStart  ==  source.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (source!=  null  &&  commentStart  ==  source.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
118	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar  ==  source.charValue())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar  ==  source.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar  ==  source.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  if  (source!=  null  &&  commentStart  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (source!=  null  &&  commentStart  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (source!=  null  &&  commentStart  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
120	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  3);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  3);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  3);	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
121	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  +  1);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  +  1);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  +  1);	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
122	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  4);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  4);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  4);	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
123	[BUG]  [BUGGY]  Character  commentStart  =  quoteChar.substring(0,  quoteChar.length());  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  commentStart  =  quoteChar.substring(0,  quoteChar.length());  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  commentStart  =  quoteChar.substring(0,  quoteChar.length());	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
124	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar  ==  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar  ==  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar  ==  delimiter.toString())  {	  if    (delimiter!=    null    &&    commentStart    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
125	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar!=  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar!=  delimiter.toString())  {	  if    (delimiter!=    null    &&    commentStart    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
126	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart  ==  quoteChar.toString())  {	  if    (delimiter!=    null    &&    commentStart    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  DEFAULT.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  DEFAULT.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  DEFAULT.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
128	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.VALUE_STRING)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  DEFAULT.VALUE_STRING)  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
129	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.INVALID_COMMENT)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.INVALID_COMMENT)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  DEFAULT.INVALID_COMMENT)  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
130	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.DEFAULT.charValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.DEFAULT.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  DEFAULT.DEFAULT.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
131	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.DEFAULT.CHARValue())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.DEFAULT.CHARValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  DEFAULT.DEFAULT.CHARValue())  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
132	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.IN_VALUE.charValue())  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  DEFAULT.IN_VALUE.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  DEFAULT.IN_VALUE.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
133	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar    ==    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
134	[BUG]  [BUGGY]  if  (this.commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (this.commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (this.commentStart!=  null  &&  quoteChar  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar    ==    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
135	[BUG]  [BUGGY]  quoteChar  =  c.charValue();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  quoteChar  =  c.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	quoteChar  =  c.charValue();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
136	[BUG]  [BUGGY]  quoteChar  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  quoteChar  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	quoteChar  =  delimiter.charValue();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
137	[BUG]  [BUGGY]  quoteChar  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  quoteChar  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	quoteChar  =  quoteChar.toCharArray();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
138	[BUG]  [BUGGY]  Quote  quoteChar  =  quoteChar.getValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quoteChar.getValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quoteChar  =  quoteChar.getValue();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
139	[BUG]  [BUGGY]  char  quoteChar  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  char  quoteChar  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	char  quoteChar  =  quoteChar.charValue();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
140	[BUG]  [BUGGY]  quoteChar  =  escape.charValue();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  quoteChar  =  escape.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	quoteChar  =  escape.charValue();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
141	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar  >=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar  >=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar  >=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
142	[BUG]  [BUGGY]  While(delimiter!=  null  &&  delimiter.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  While(delimiter!=  null  &&  delimiter.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	While(delimiter!=  null  &&  delimiter.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
143	[BUG]  [BUGGY]  While(delimiter!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  While(delimiter!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	While(delimiter!=  null  &&  quoteChar.equals(c))  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
144	[BUG]  [BUGGY]  While(c!=  null  &&  delimiter!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  While(c!=  null  &&  delimiter!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	While(c!=  null  &&  delimiter!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
145	[BUG]  [BUGGY]  While(delimiter!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  While(delimiter!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	While(delimiter!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
146	[BUG]  [BUGGY]  While(c!=  null  &&  c!=  delimiter)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  While(c!=  null  &&  c!=  delimiter)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	While(c!=  null  &&  c!=  delimiter)  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
147	[BUG]  [BUGGY]  While(delimiter!=  null  &&  delimiter.charValue()  ==' "')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  While(delimiter!=  null  &&  delimiter.charValue()  ==' "')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	While(delimiter!=  null  &&  delimiter.charValue()  ==' "')  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
148	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quotes.length());  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quotes.length());  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quotes.length());	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
149	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quotedChar.length());  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quotedChar.length());  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quotedChar.length());	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
150	[BUG]  [BUGGY]  String  commentStart  =  quotedChar.substring(0,  quoteChar.length());  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quotedChar.substring(0,  quoteChar.length());  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quotedChar.substring(0,  quoteChar.length());	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
151	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (quoteChar!=  null  &&  quoteChar!=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
152	[BUG]  [BUGGY]  if  (delimiter  ==  null  &&  quoteChar!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  null  &&  quoteChar!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter  ==  null  &&  quoteChar!=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
153	[BUG]  [BUGGY]  if(commentStart!=  null  &&  commentStart!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  commentStart!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(commentStart!=  null  &&  commentStart!=  delimiter.charValue())  {	  if    (commentStart!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
154	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  description.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  description.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  description.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
155	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  description.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  description.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  description.getCharValue())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
156	[BUG]  [BUGGY]  if(delimiter!=  null  &&  description.charValue()  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  description.charValue()  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  description.charValue()  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
157	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  description.toString())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  description.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  description.toString())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
158	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.charValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  description.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
159	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (quoteChar!=  null  &&  quoteChar  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
160	[BUG]  [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (quoteChar!=  null  &&  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (quoteChar!=  null  &&  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    quoteChar    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
161	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar.equals(c))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
162	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteChar.equals(commentStart))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
163	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteChar.equals(delimiter))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteChar.equals(delimiter))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
164	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(quoteChar!=  null  &&  quoteChar.equals(c))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
165	[BUG]  [BUGGY]  if(start!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(start!=  null  &&  quoteChar  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(start!=  null  &&  quoteChar  ==  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar    ==    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
166	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  escape.charValue())  {	  if(delimiter!=    null    &&    quoteChar    ==    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
167	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  escape.getChar())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  escape.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  escape.getChar())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
168	[BUG]  [BUGGY]  if(escape!=  null  &&  delimiter  ==  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  delimiter  ==  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(escape!=  null  &&  delimiter  ==  escape.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
169	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  escape.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  escape.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  escape.getCharValue())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
170	[BUG]  [BUGGY]  if(escape!=  null  &&  commentStart  ==  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(escape!=  null  &&  commentStart  ==  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(escape!=  null  &&  commentStart  ==  escape.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
171	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  escape.length())  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  escape.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  escape.length())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
172	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  quoteStart.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  quoteStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart  ==  quoteStart.length())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.length())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
173	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart!=  quoteStart.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart!=  quoteStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart!=  quoteStart.length())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.length())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
174	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  quoteStart.length())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  quoteStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart  ==  quoteStart.length())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.length())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
175	[BUG]  [BUGGY]  if  (quoteStart!=  null  &&  delimiter  ==  quoteStart.length())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (quoteStart!=  null  &&  delimiter  ==  quoteStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (quoteStart!=  null  &&  delimiter  ==  quoteStart.length())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.length())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
176	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  delimiter  ==  quoteChar.length())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.length())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
177	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar.toString())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
178	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.toString().equals(c))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.toString().equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar.toString().equals(c))  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
179	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  quoteStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteChar.charValue()  ==  quoteStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteChar.charValue()  ==  quoteStart.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
180	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
181	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  commentStart.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
182	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteStart.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
183	[BUG]  [BUGGY]  if(commentStart!=  null  &&  delimiter  ==  start.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  delimiter  ==  start.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(commentStart!=  null  &&  delimiter  ==  start.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
184	[BUG]  [BUGGY]  if(delimiter  ==  null  &&  delimiter  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null  &&  delimiter  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter  ==  null  &&  delimiter  ==  quoteChar.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
185	[BUG]  [BUGGY]  if(start!=  null  &&  delimiter  ==  start.length())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(start!=  null  &&  delimiter  ==  start.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(start!=  null  &&  delimiter  ==  start.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
186	[BUG]  [BUGGY]  Character  c  =  delimiter.getCharacter();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  delimiter.getCharacter();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
187	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCSVFormat();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCSVFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getCSVFormat();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
188	[BUG]  [BUGGY]  Character  c  =  quoteChar.getDelimiter();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getDelimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getDelimiter();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
189	[BUG]  [BUGGY]  Character  c  =  quoteChar.getCSV();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getCSV();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getCSV();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
190	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharArray();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharArray();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.toCharArray();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
191	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
192	[BUG]  [BUGGY]  Character  c  =  delimiter.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  delimiter.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
193	[BUG]  [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toCharBuffer();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.toCharBuffer();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
194	[BUG]  [BUGGY]  Character  c  =  escape.charValue();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  escape.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  escape.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
195	[BUG]  [BUGGY]  Character  c  =  character.charValue();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  character.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  character.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
196	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quotes.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quotes.length()  -  1);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quotes.length()  -  1);	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
197	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()));  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quoteChar.length()));	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
198	[BUG]  [BUGGY]  String  commentStart  =  quoteString.substring(0,  quoteChar.length());  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteString.substring(0,  quoteChar.length());  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteString.substring(0,  quoteChar.length());	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
199	[BUG]  [BUGGY]  if(commentStart!=  null  &&  delimiter!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  delimiter!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(commentStart!=  null  &&  delimiter!=  quoteChar.charValue())  {	  if(start!=    null    &&    commentStart    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
200	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  quoteChar.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  quoteChar.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter!=  quoteChar.toString())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
201	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  commentStart.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  commentStart.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  commentStart.toString())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
202	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quote.toString())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quote.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quote.toString())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
203	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.toString())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter.toString())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toString())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
204	[BUG]  [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteChar.getDelimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quoteChar.getDelimiter(c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
205	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  escape);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c,  escape);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
206	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c,  c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
207	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c,  delimiter);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
208	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(escape);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(escape);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
209	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar);  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(quoteChar);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
210	[BUG]  [BUGGY]  if(commentStart!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(commentStart!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(commentStart!=  null  &&  quoteChar.charValue()  ==  delimiter)  {	  if(delimiter!=    null    &&    quoteChar.charValue()    ==    commentStart)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
211	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  descriptionStart)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  descriptionStart)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar.charValue()  ==  descriptionStart)  {	  if(delimiter!=    null    &&    quoteChar.charValue()    ==    commentStart)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
212	[BUG]  [BUGGY]  if(quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(quoteChar!=  null  &&  quoteChar.charValue()  ==  delimiter)  {	  if(delimiter!=    null    &&    quoteChar.charValue()    ==    commentStart)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
213	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  character)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  character)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar.charValue()  ==  character)  {	  if(delimiter!=    null    &&    quoteChar.charValue()    ==    commentStart)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
214	[BUG]  [BUGGY]  if  (c!=  quote.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (c!=  quote.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (c!=  quote.charValue())  {	  if    (delimiter!=    quote.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
215	[BUG]  [BUGGY]  if  (delimiter!=  quote.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quote.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quote.length())  {	  if    (delimiter!=    quote.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
216	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteStart.toString())  {	  if(delimiter!=    null    &&    delimiter    ==    start.toString())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
217	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.toString())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  start.toString())  {	  if(delimiter!=    null    &&    delimiter    ==    start.toString())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
218	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quotePolicy.toString())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quotePolicy.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quotePolicy.toString())  {	  if(delimiter!=    null    &&    delimiter    ==    start.toString())    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
219	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  quoteStart!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  quoteStart!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  quoteStart!=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteStart    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
220	[BUG]  [BUGGY]  if  (quoteStart!=  null  &&  quoteStart  ==  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (quoteStart!=  null  &&  quoteStart  ==  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (quoteStart!=  null  &&  quoteStart  ==  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteStart    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
221	[BUG]  [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  10);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  10);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	String  commentStart  =  quoteChar.substring(0,  quoteChar.length()  -  10);	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
222	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  end.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  end.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  end.charValue())  {	  if(start!=    null    &&    commentStart    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
223	[BUG]  [BUGGY]  if(delimiter!=  null  &&  start  ==  commentStart.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  start  ==  commentStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  start  ==  commentStart.length())  {	  if(delimiter!=    null    &&    commentStart    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
224	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  this.commentStart.length())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  this.commentStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  this.commentStart.length())  {	  if    (delimiter!=    null    &&    quoteChar    ==    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
225	[BUG]  [BUGGY]  Character  c  =  this.quotePolicy.getCharacter(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  this.quotePolicy.getCharacter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  this.quotePolicy.getCharacter(c);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
226	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCharacter(c,  delimiter);	  Character    c    =    quotePolicy.getCharacter(c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
227	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue()  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue()  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter.charValue()  ==  quoteChar.charValue())  {	  if(delimiter!=    null    &&    quoteChar.charValue()    ==    commentStart)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
228	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue()  ==  commentStart)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter.charValue()  ==  commentStart)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter.charValue()  ==  commentStart)  {	  if(delimiter!=    null    &&    quoteChar.charValue()    ==    commentStart)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
229	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  c)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar.charValue()  ==  c)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar.charValue()  ==  c)  {	  if(delimiter!=    null    &&    quoteChar.charValue()    ==    commentStart)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
230	[BUG]  [BUGGY]  if  (delimiter  ==  quoteChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quoteChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter  ==  quoteChar.toCharArray())  {	  if    (delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
231	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(commentStart))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(commentStart))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter.equals(commentStart))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
232	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(c))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(c))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter.equals(c))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
233	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(quoteChar))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.equals(quoteChar))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter.equals(quoteChar))  {	  if    (delimiter!=    null    &&    quoteChar.equals(commentStart))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
234	[BUG]  [BUGGY]  Quote  quotePolicy  =  this.quotePolicy.getFormat();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  this.quotePolicy.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  this.quotePolicy.getFormat();	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
235	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.createFormat( "n ");  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.createFormat( "n ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.createFormat( "n ");	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
236	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getCharacter();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getCharacter();	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
237	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  descriptionStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  descriptionStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  descriptionStart.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
238	[BUG]  [BUGGY]  if(delimiter  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
239	[BUG]  [BUGGY]  safeMultiply(delimiter)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  safeMultiply(delimiter)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	safeMultiply(delimiter)  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
240	[BUG]  [BUGGY]  Deserializer  <  Character>  delimiter  =  getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Deserializer  <  Character>  delimiter  =  getDelimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Deserializer  <  Character>  delimiter  =  getDelimiter(c);	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
241	[BUG]  [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalStateException( " ",  delimiter);  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalStateException( " ",  delimiter);  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null)  {  throw  new  IllegalStateException( " ",  delimiter);  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
242	[BUG]  [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalStateException( " ".);  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null)  {  throw  new  IllegalStateException( " ".);  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
243	[BUG]  [BUGGY]  securityChecker.checkState(delimiter!=  null);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  securityChecker.checkState(delimiter!=  null);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	securityChecker.checkState(delimiter!=  null);	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
244	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  delimiter.length())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
245	[BUG]  [BUGGY]  if  (commentStart!=  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  delimiter.getCharValue())  {	  if    (commentStart!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
246	[BUG]  [BUGGY]  if  (delimiter!=  commentStart.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  commentStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  commentStart.length())  {	  if    (commentStart!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
247	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart!=  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
248	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart!=  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
249	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.getFormat();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.getFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quoteChar  =  quotePolicy.getFormat();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
250	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.getInstance();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quoteChar  =  quotePolicy.getInstance();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
251	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  delimiter.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  delimiter.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart  ==  delimiter.length())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.length())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
252	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "commentpolicy ");  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "commentpolicy ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "commentpolicy ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotepolicy   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
253	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  this.commentStart.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  this.commentStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter!=  this.commentStart.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
254	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  this.commentStart.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  this.commentStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart!=  this.commentStart.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
255	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  this.commentStart!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  this.commentStart!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  this.commentStart!=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
256	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  commentStart.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  commentStart.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  commentStart.getCharValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
257	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  DEFAULT.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  DEFAULT.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart  ==  DEFAULT.getCharValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
258	[BUG]  [BUGGY]  if(delimiter!=  null  &&  description.equals(delimiter.charValue()))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  description.equals(delimiter.charValue()))  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  description.equals(delimiter.charValue()))  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
259	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  description.toString())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
260	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  description.getCharValue())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
261	[BUG]  [BUGGY]  if(delimiter!=  null  &&  description.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  description.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  description.length()  ==  0)  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
262	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.DEFAULT.DEFAULT.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.DEFAULT.DEFAULT.DEFAULT)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  DEFAULT.DEFAULT.DEFAULT.DEFAULT)  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
263	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.INVALID_COMMENT_START)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.INVALID_COMMENT_START)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  DEFAULT.INVALID_COMMENT_START)  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
264	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.DEFAULT.DEFAULT.DEFAULT.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.DEFAULT.DEFAULT.DEFAULT.DEFAULT)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  DEFAULT.DEFAULT.DEFAULT.DEFAULT.DEFAULT)  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
265	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  recordSeparator.toString())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  recordSeparator.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart  ==  recordSeparator.toString())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.toString())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
266	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  source.toString())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart  ==  source.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart  ==  source.toString())  {	  if    (commentStart!=    null    &&    delimiter    ==    quoteStart.toString())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
267	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart  ==  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    quoteChar    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
268	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
269	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(delimiter);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(delimiter);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
270	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(context);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(context);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(context);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
271	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(converter);  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(converter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(converter);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
272	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  delimiter.getCharValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
273	[BUG]  [BUGGY]  Character  c  =  getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  getCurrentCharacter();	  Character    c    =    quoteChar.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
274	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.node())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.node())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.node())  {	  if    (delimiter!=    quote.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
275	[BUG]  [BUGGY]  if  (delimiter  ==  quote.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quote.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter  ==  quote.charValue())  {	  if    (delimiter    ==    commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
276	[BUG]  [BUGGY]  if  (delimiter  ==  quotePolicy.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter  ==  quotePolicy.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter  ==  quotePolicy.charValue())  {	  if    (delimiter    ==    commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
277	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.getCharIndex())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.getCharIndex())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  start.getCharIndex())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
278	[BUG]  [BUGGY]  if(delimiter!=  null  &&  start  ==  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  start  ==  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  start  ==  delimiter.getCharValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
279	[BUG]  [BUGGY]  if(delimiter!=  null  &&  start!=  delimiter.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  start!=  delimiter.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  start!=  delimiter.getCharValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
280	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(false);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(false);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(false);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
281	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(DEFAULT);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(DEFAULT);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(DEFAULT);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
282	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(quoteStart);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(quoteStart);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(quoteStart);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
283	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceUTF();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstanceUTF();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstanceUTF();	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
284	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.quoteCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.quoteCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.quoteCharValue())  {	  if    (delimiter!=    quotePolicy.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
285	[BUG]  [BUGGY]  if(delimiter!=  null  &&  c  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  c  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  c  ==  quoteChar.charValue())  {	  if    (c!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
286	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  character  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  character  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  character  ==  quoteChar.charValue())  {	  if    (c!=    null    &&    delimiter    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
287	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quote.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quote.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quote.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
288	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quotePolicy.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quotePolicy.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quotePolicy.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
289	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCharacter();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCharacter();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
290	[BUG]  [BUGGY]  Character  c  =  quoteChar.getEscapeChar();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.getEscapeChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.getEscapeChar();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
291	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteStart!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteStart!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteStart!=  delimiter.charValue())  {	  if(delimiter!=    null    &&    quoteChar!=    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
292	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter!=  start.length())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter!=  start.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter!=  start.length())  {	  if(delimiter!=    null    &&    quoteChar!=    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
293	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter!=  start.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter!=  start.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter!=  start.getCharValue())  {	  if(delimiter!=    null    &&    quoteChar!=    start.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
294	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  quoteStart.charValue()  ==  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  quoteStart.charValue()  ==  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  quoteStart.charValue()  ==  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    quoteChar.charValue()    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
295	[BUG]  [BUGGY]  Character  c  =  quoteChar.toChars();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.toChars();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.toChars();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
296	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  escape.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
297	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.getChar())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  escape.getChar())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
298	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  escape.getCharValue())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
299	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.toString())  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  escape.toString())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
300	[BUG]  [BUGGY]  Character  delimiter  =  set.getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  set.getDelimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  set.getDelimiter(c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
301	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(delimiter);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(delimiter);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
302	[BUG]  [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c).delimiter();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quotePolicy.getDelimiter(c).delimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quotePolicy.getDelimiter(c).delimiter();	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
303	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteStart.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteStart.toCharArray())  {	  if    (delimiter!=    null    &&    quoteStart    ==    quoteStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
304	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  commentStart.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter!=  commentStart.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter!=  commentStart.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
305	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  delimiter.charValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  commentStart!=  delimiter.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  commentStart!=  delimiter.charValue())  {	  if    (delimiter!=    null    &&    quoteChar!=    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
306	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCurrentCharChar();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCurrentCharChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCurrentCharChar();	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
307	[BUG]  [BUGGY]  Character  c  =  this.quotePolicy.getCurrentCharacter();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  this.quotePolicy.getCurrentCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  this.quotePolicy.getCurrentCharacter();	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
308	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCurrentCharChar(escape);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCurrentCharChar(escape);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCurrentCharChar(escape);	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
309	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCurrentCharCharacter();  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCurrentCharCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCurrentCharCharacter();	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
310	[BUG]  [BUGGY]  if  (delimiter!=  quotePolicy.nullValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quotePolicy.nullValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quotePolicy.nullValue())  {	  if    (delimiter!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
311	[BUG]  [BUGGY]  if  (delimiter!=  quoteChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  quoteChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  quoteChar.toCharArray())  {	  if    (delimiter!=    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
312	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  this.commentStart  +   "')  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  this.commentStart  +   "')  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  this.commentStart  +   "')  {	  if    (delimiter!=    null    &&    delimiter    ==    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
313	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  commentStart.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
314	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quotePolicy.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quotePolicy.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quotePolicy.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
315	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.getLineno())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  start.getLineno())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  start.getLineno())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
316	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "cSVFormat ");  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "cSVFormat ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "cSVFormat ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotePolicy   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
317	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "commentPolicy ");  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getFormat( "commentPolicy ");  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getFormat( "commentPolicy ");	  Quote    quotePolicy    =    quotePolicy.getFormat(   "quotePolicy   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
318	[BUG]  [BUGGY]  if  (source!=  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (source!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (source!=  null)  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
319	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.charValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  source.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
320	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.getChars())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.getChars())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  source.getChars())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
321	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.toString())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  source.toString())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
322	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  source.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  source.getCharValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
323	[BUG]  [BUGGY]  if  (source!=  null  ||  delimiter!=  source.charValue())  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (source!=  null  ||  delimiter!=  source.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (source!=  null  ||  delimiter!=  source.charValue())  {	  if    (delimiter!=    null    &&    commentStart    ==    source.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
324	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  quoteChar.length())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  quoteChar.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  commentStart  ==  quoteChar.length())  {	  if    (commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
325	[BUG]  [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  description.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (commentStart!=  null  &&  commentStart  ==  description.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (commentStart!=  null  &&  commentStart  ==  description.charValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
326	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteStart.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteStart.getCharValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
327	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  point.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  point.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  point.getCharValue())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
328	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(c,  delimiter);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
329	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(c,  DEFAULT);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(c,  DEFAULT);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(c,  DEFAULT);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
330	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(Character.DEPRECATED);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.getInstance(Character.DEPRECATED);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.getInstance(Character.DEPRECATED);	  Quote    quotePolicy    =    quotePolicy.getInstance();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
331	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.getChars())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.getChars())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteChar.getChars())  {	  if    (delimiter!=    null    &&    delimiter    ==    quoteChar.toString())    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
332	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  DEFAULT.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
333	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.toString())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  DEFAULT.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  DEFAULT.toString())  {	  if(delimiter!=    null    &&    commentStart    ==    DEFAULT.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
334	[BUG]  [BUGGY]  Character  c  =  delimiter.getCSV(c);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  delimiter.getCSV(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  delimiter.getCSV(c);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
335	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCSV(c,  delimiter);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCSV(c,  delimiter);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCSV(c,  delimiter);	  Character    c    =    quotePolicy.getCSV(c);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
336	[BUG]  [BUGGY]  if(delimiter!=  quotePolicy.cSVValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  quotePolicy.cSVValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  quotePolicy.cSVValue())  {	  if    (delimiter!=    quote.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
337	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  commentStart)  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
338	[BUG]  [BUGGY]  while(delimiter!=  null  &&  delimiter.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  while(delimiter!=  null  &&  delimiter.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	while(delimiter!=  null  &&  delimiter.equals(commentStart))  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
339	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException( " ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
340	[BUG]  [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalStateException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null)  {  throw  new  IllegalStateException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null)  {  throw  new  IllegalStateException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
341	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart)  {  throw  new  IllegalStateException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  commentStart)  {  throw  new  IllegalStateException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  commentStart)  {  throw  new  IllegalStateException( "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('   "  +  commentStart  + "') ");  }	  if(delimiter!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
342	[BUG]  [BUGGY]  Character  delimiter  =  c.getDelimiter(quoteChar);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  c.getDelimiter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  c.getDelimiter(quoteChar);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
343	[BUG]  [BUGGY]  Character  delimiter  =  quoteDelimiter.getDelimiter(c);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  delimiter  =  quoteDelimiter.getDelimiter(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  delimiter  =  quoteDelimiter.getDelimiter(c);	  Character    delimiter    =    quotePolicy.getDelimiter(c);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
344	[BUG]  [BUGGY]  char  c  =  quoteChar.charValue();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  char  c  =  quoteChar.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	char  c  =  quoteChar.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
345	[BUG]  [BUGGY]  Character  c  =  writer.charValue();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  writer.charValue();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  writer.charValue();	  Character    c    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
346	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.toLowerCase())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  quoteChar.toLowerCase())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  quoteChar.toLowerCase())  {	  if    (delimiter!=    null    &&    quoteChar    ==    quoteChar.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
347	[BUG]  [BUGGY]  Character  c  =  quotePolicy.getCurrentCharacter(quoteChar);  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quotePolicy.getCurrentCharacter(quoteChar);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quotePolicy.getCurrentCharacter(quoteChar);	  Character    c    =    quotePolicy.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
348	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  templateChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  templateChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  templateChar.charValue())  {	  if(start!=    null    &&    commentStart    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
349	[BUG]  [BUGGY]  Character  c  =  quoteChar.delimiter();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.delimiter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.delimiter();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
350	[BUG]  [BUGGY]  Character  c  =  character.getCharacter();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  character.getCharacter();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  character.getCharacter();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
351	[BUG]  [BUGGY]  Character  c  =  quoteChar.delimiterChar();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Character  c  =  quoteChar.delimiterChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Character  c  =  quoteChar.delimiterChar();	  Character    c    =    quoteChar.getCharacter();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
352	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.commentStart)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.commentStart)  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  escape.commentStart)  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
353	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.cValue())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.cValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  escape.cValue())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
354	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.hashCode())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  escape.hashCode())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  escape.hashCode())  {	  if(delimiter!=    null    &&    commentStart    ==    escape.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
355	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  templateChar.charValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  templateChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  templateChar.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
356	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  character.charValue())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  character.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  character.charValue())  {	  if(delimiter!=    null    &&    commentStart    ==    null.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
357	[BUG]  [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  this.commentStart.toString())  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if  (delimiter!=  null  &&  delimiter  ==  this.commentStart.toString())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if  (delimiter!=  null  &&  delimiter  ==  this.commentStart.toString())  {	  if    (delimiter!=    null    &&    delimiter    ==    this.commentStart.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
358	[BUG]  [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.length())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  quoteChar  ==  start.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  quoteChar  ==  start.length())  {	  if(delimiter!=    null    &&    commentStart    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
359	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getChars())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getChars())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  description.getChars())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
360	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  description.getChar())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
361	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getCharacter())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.getCharacter())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  description.getCharacter())  {	  if(delimiter!=    null    &&    commentStart    ==    description.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
362	[BUG]  [BUGGY]  CharType  commentStart  =  quoteChar.substring(0,  quoteChar.length());  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  CharType  commentStart  =  quoteChar.substring(0,  quoteChar.length());  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	CharType  commentStart  =  quoteChar.substring(0,  quoteChar.length());	  String    commentStart    =    quoteChar.substring(0,    quoteChar.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
363	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  delimiter.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  delimiter.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  delimiter.toCharArray())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
364	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  description.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  description.toCharArray())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
365	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  templateChar.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  templateChar.toCharArray())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  templateChar.toCharArray())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
366	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  <  commentStart.length())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  <  commentStart.length())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  <  commentStart.length())  {	  if(delimiter!=    null    &&    delimiter    ==    start.length())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
367	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.createFormat();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.createFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.createFormat();	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
368	[BUG]  [BUGGY]  Quote  quotePolicy  =  quotePolicy.createFormat(c);  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quotePolicy  =  quotePolicy.createFormat(c);  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quotePolicy  =  quotePolicy.createFormat(c);	  Quote    quotePolicy    =    quotePolicy.getFormat();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
369	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.getCSVFormat();  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.getCSVFormat();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quoteChar  =  quotePolicy.getCSVFormat();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
370	[BUG]  [BUGGY]  Quote  quoteChar  =  quotePolicy.quoteChar();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  Quote  quoteChar  =  quotePolicy.quoteChar();  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	Quote  quoteChar  =  quotePolicy.quoteChar();	  quoteChar    =    quoteChar.charValue();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
371	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  source.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  source.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  source.getCharValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
372	[BUG]  [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  buffer.getCharValue())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  commentStart  ==  buffer.getCharValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  commentStart  ==  buffer.getCharValue())  {	  if    (commentStart!=    null    &&    commentStart    ==    delimiter.getCharValue())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
373	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  point.getChar())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  point.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  point.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
374	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  templateChar.getChar())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  ==  templateChar.getChar())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  ==  templateChar.getChar())  {	  if(delimiter!=    null    &&    delimiter    ==    start.getChar())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
375	[BUG]  [BUGGY]  if(delimiter!=  null  &&  delimiter  <  quoteChar.charValue())  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (quoteChar  !=  null  &&  delimiter  ==  quoteChar.charValue())  {  throw  new  IllegalStateException(       "The  quoteChar  character  and  the  delimiter  cannot  be  the  same  ('     "  +  quoteChar  +       "')     ");  }  if  (escape  !=  null  &&  delimiter  ==  escape.charValue())  {  throw  new  IllegalStateException(       "The  escape  character  and  the  delimiter  cannot  be  the  same  ('     "  +  escape  +       "')     ");  }      [BUGGY]  if(delimiter!=  null  &&  delimiter  <  quoteChar.charValue())  {  [BUGGY]      throw  new  IllegalStateException(       "The  comment  start  character  and  the  delimiter  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (quoteChar  !=  null  &&  quoteChar.equals(commentStart))  {  throw  new  IllegalStateException(       "The  comment  start  character  and  the  quoteChar  cannot  be  the  same  ('     "  +  commentStart  +       "')     ");  }  if  (escape  !=  null  &&  escape.equals(commentStart))  {  [CLASS]  CSVFormat  [METHOD]  validate  [RETURN_TYPE]  void  [VARIABLES]  Quote  quotePolicy  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  set  Character  c  commentStart  escape  quoteChar  char  c  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  other  String  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv8/src/main/java/org/apache/commons/csv/CSVFormat.java	0.3333333333333333	646	646	1	replace	if(delimiter!=  null  &&  delimiter  <  quoteChar.charValue())  {	  if    (delimiter!=    null    &&    delimiter    ==    delimiter.charValue())    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
