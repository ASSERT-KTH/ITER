bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  observe  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed));  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed));	      ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  observe	20	None	replace
2	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed));  [CE]  inconvertible  types  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed));  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed));	      ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  inconvertible  types	20	None	replace
3	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  distribution));  [CE]  no  suitable  method  found  for  chiSquare(double[],ChiSquaredDistribution)  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  distribution));  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  distribution));	      ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  chiSquare(double[],ChiSquaredDistribution)	20	None	replace
4	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(false);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(false);	      ((    ChiSquaredDistributionImpl)distribution).setMean(true);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
5	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(true,  observed);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(true,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(true,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setMean(true);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
6	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(null);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(null);	      ((    ChiSquaredDistributionImpl)distribution).setMean(true);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	16	6	add
8	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	16	6	add
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	16	6	add
10	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	16	6	add
11	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	16	6	add
12	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	16	6	add
13	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  ditribution  [FE]          IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  cannot  find  symbol  ditribution	16	None	add
14	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  ')'  expected	16	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	9	6	replace
16	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	9	6	replace
17	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  20.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  MaxIterationsExceededException  	9	6	replace
18	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  20.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  MaxIterationsExceededException  	9	6	replace
19	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	6	None	replace
20	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	6	None	replace
21	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null);  [CE]  cannot  find  symbol  x  [FE]                  AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  cannot  find  symbol  x	6	None	replace
22	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  null);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	6	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	22	6	replace
24	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	22	6	replace
25	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	3	None	replace
26	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	3	6	replace
27	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	3	6	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	18	6	add
29	[BUG]  [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	18	6	add
30	[BUG]  [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
31	[BUG]  [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  ')'  expected	18	None	add
32	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
33	[BUG]  [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	18	6	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
35	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
37	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
38	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
40	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
41	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);	  	non-compiled	[CE]  ']'  expected	12	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
43	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
44	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
45	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0);  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0);	  	non-compiled	[CE]  ']'  expected	8	None	add
46	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
47	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	17	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
49	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
50	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
51	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0);  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0);	  	non-compiled	[CE]  ']'  expected	21	None	add
52	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
53	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
54	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	      ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  IllegalArgumentException  	19	6	replace
55	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	      ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  IllegalArgumentException  	19	6	replace
56	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed);	      ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	19	None	replace
57	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);	      ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	19	6	replace
58	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);	      ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	19	6	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);	  	compilable	  [FE]  AssertionFailedError  	4	6	add
60	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);	  	compilable	  [FE]  AssertionFailedError  	4	6	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	4	6	add
62	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	4	6	add
63	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);  [CE]  cannot  find  symbol  ditribution  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);	  	non-compiled	[CE]  cannot  find  symbol  ditribution	4	None	add
64	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	11	None	replace
65	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	11	6	replace
66	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [FE]  MaxIterationsExceededException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	11	6	replace
67	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	11	6	replace
68	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	11	6	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  /  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	15	6	replace
70	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  /  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	15	6	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
72	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
74	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
75	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
77	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
78	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0);	  	non-compiled	[CE]  ']'  expected	14	None	add
79	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	10	6	add
80	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	10	6	add
81	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	10	6	add
82	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	10	6	add
83	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	10	6	add
84	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	10	6	add
85	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  [CE]  ']'  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);	  	non-compiled	[CE]  ']'  expected	10	None	add
86	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	1	None	replace
87	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	1	None	replace
88	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true);  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  cannot  find  symbol  x	1	None	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	2	6	add
90	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	2	6	add
91	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  ditribution  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  cannot  find  symbol  ditribution	2	None	add
92	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	2	6	add
93	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	2	6	add
94	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (1(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  ')'  expected	2	None	add
95	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	5	None	replace
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    	compilable	  [FE]  AssertionFailedError  	5	6	replace
97	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    	compilable	  [FE]  AssertionFailedError  	5	6	replace
98	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0]);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	5	None	replace
99	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1]);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	5	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  20.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	13	6	replace
101	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  20.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	13	6	replace
102	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	12	None	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
104	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
106	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
108	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	21	6	add
109	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    Distribution  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  ';'  expected	21	None	add
110	[BUG]  [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  (1(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  (1(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    (1(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  ')'  expected	18	None	add
111	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x,  true);  [CE]  cannot  find  symbol  x  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x,  true);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(x,  true);	      ((    ChiSquaredDistributionImpl)distribution).setMean(true);    	non-compiled	[CE]  cannot  find  symbol  x	7	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	4	6	add
113	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	4	6	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
115	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
117	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
119	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	8	6	add
120	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  Distribution  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  Distribution  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    Distribution  distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	non-compiled	[CE]  ';'  expected	8	None	add
121	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed));  [CE]  inconvertible  types  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed));  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed));	      ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  inconvertible  types	20	None	replace
122	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquare(expected,  observed));  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquare(expected,  observed));  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquare(expected,  observed));	      ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ')'  expected	20	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  *  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	15	6	replace
124	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  *  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	15	6	replace
125	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  }  );  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  }  );  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  }  );	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	6	None	replace
126	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  }  );  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  }  );  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  }  );	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	6	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
128	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
129	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  ';'  expected	14	None	add
130	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  true);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  true);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	1	None	replace
131	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	1	None	replace
132	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed),  observed);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed),  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed),  observed);	      ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
133	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
135	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	12	6	add
136	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
137	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	2	6	add
139	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	2	6	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	18	6	add
141	[BUG]  [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	18	6	add
142	[BUG]  [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]      ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
143	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
144	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  x.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  x  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  x.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  x	14	None	add
145	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0);  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed[length  -  1.0);	  	non-compiled	[CE]  ']'  expected	14	None	add
146	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  -  observed.length);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	11	6	replace
147	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  observed.length);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	11	6	replace
148	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0.0);  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  1.0.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  ')'  expected	11	None	replace
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  -  0.01);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  AssertionFailedError  	11	6	replace
150	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [FE]  AssertionFailedError  [FE]        IllegalArgumentException    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  0.01);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  AssertionFailedError  	11	6	replace
151	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  2);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	13	6	replace
153	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  2);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	13	6	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  40.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	13	6	replace
155	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]    return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  40.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	13	6	replace
156	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed);  [CE]  cannot  find  symbol  x  [FE]              AssertionFailedError    [CONTEXT]    public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {    [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed);  [BUGGY]    distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed);	      ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);    	non-compiled	[CE]  cannot  find  symbol  x	6	None	replace
