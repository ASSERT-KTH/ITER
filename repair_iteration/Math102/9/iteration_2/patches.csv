bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    	compilable	  [FE]  IllegalArgumentException  	12	6	replace
2	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    	compilable	  [FE]  IllegalArgumentException  	12	6	replace
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    	compilable	  [FE]  IllegalArgumentException  	12	6	replace
4	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    	compilable	  [FE]  IllegalArgumentException  	12	6	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	72	6	replace
6	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	72	6	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	72	6	replace
8	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	72	6	replace
9	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(this.distribution.length  -  1.0);  [CE]  cannot  find  symbol  length  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(this.distribution.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(this.distribution.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
10	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  [CE]  cannot  find  symbol  normalized  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  normalized	72	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	115	6	replace
12	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	115	6	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	115	6	replace
14	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	115	6	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	115	6	replace
16	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	115	6	replace
17	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    2.0);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
18	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  *  2.0);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    2.0);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
19	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  2.0);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    2.0);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	73	6	add
21	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	73	6	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	73	6	add
23	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	73	6	add
24	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
25	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
27	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
29	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
31	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
33	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
35	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
37	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
39	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
40	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1));  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	non-compiled	[CE]  ';'  expected	138	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
42	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.2);	  	compilable	  [FE]  AssertionFailedError  	138	6	add
43	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0,  expected);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  -  10.0,  expected);	  distribution.setDegreesOfFreedom(expected.length    -    10.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	64	None	replace
44	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  observed);	  distribution.setDegreesOfFreedom(expected.length    -    10.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	64	None	replace
45	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1,  observed,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  1,  observed,  observed);	  distribution.setDegreesOfFreedom(expected.length    -    10.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	64	None	replace
46	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected,  observed.length  -  10.0,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected,  observed.length  -  10.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected,  observed.length  -  10.0,  observed);	  distribution.setDegreesOfFreedom(expected.length    -    10.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	64	None	replace
47	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
48	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
50	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
51	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
52	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
53	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
54	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
55	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
56	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	9	6	add
57	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(false,  observed);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(false,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(false,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setMean(true,    observed);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
58	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setMean(true,  observed);  [CE]  inconvertible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setMean(true,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setMean(true,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setMean(true,    observed);    	non-compiled	[CE]  inconvertible  types	5	None	replace
59	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(null,  observed);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(null,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(null,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setMean(true,    observed);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	106	6	replace
61	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	106	6	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	106	6	replace
63	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	106	6	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	106	6	replace
65	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	106	6	replace
66	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	20	None	replace
67	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	20	None	replace
68	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed);  [CE]  inconvertible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  inconvertible  types	20	None	replace
69	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	84	6	replace
70	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	84	6	replace
71	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	84	6	replace
72	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	84	6	replace
73	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	84	6	replace
74	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [FE]  MaxIterationsExceededException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	84	6	replace
75	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  11.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  11.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	84	6	replace
76	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  11.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  11.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  11.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	84	6	replace
77	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  inconvertible  types	63	None	replace
78	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected[0]);  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected[0]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  inconvertible  types	63	None	replace
79	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  [CE]  inconvertible  types  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(expected[0]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  inconvertible  types	63	None	replace
80	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	126	None	replace
81	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  expected,  observed  }  );  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  expected,  observed  }  );  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  expected,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    }    );    	non-compiled	[CE]  incompatible  types	126	None	replace
82	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  }  );  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  }  );  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    }    );    	non-compiled	[CE]  incompatible  types	126	None	replace
83	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed  }  );  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed  }  );  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    }    );    	non-compiled	[CE]  incompatible  types	126	None	replace
84	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
85	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
86	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
87	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
88	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
89	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
90	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
91	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
92	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
93	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	49	6	replace
95	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	49	6	replace
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	49	6	replace
97	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	49	6	replace
98	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x,  null);  [CE]  cannot  find  symbol  x  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(x,  null);	  ((    ChiSquaredDistributionImpl)distribution).setMean(null);    	non-compiled	[CE]  cannot  find  symbol  x	6	None	replace
99	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x);  [CE]  cannot  find  symbol  x  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(x);	  ((    ChiSquaredDistributionImpl)distribution).setMean(null);    	non-compiled	[CE]  cannot  find  symbol  x	6	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	114	6	add
101	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	114	6	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	114	6	add
103	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	114	6	add
104	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0	  	non-compiled	[CE]  ')'  expected	114	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	61	6	add
106	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	61	6	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	61	6	add
108	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	61	6	add
109	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]	  	non-compiled	[CE]  ')'  expected	61	None	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	61	6	add
111	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	61	6	add
112	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  ']'  expected	78	None	replace
113	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed[length  -  1.0);  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(observed[length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(observed[length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  ']'  expected	78	None	replace
114	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0]);  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  1.0]);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	78	None	replace
115	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  1.0);  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  ']'  expected	78	None	replace
116	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	145	None	replace
117	[BUG]  [BUGGY]  if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  }  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	145	None	replace
118	[BUG]  [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  }  [CE]  cannot  find  symbol  length  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed[length  -  1.0]);  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	145	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
120	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
122	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
124	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
125	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distributed.setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  distributed  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distributed.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distributed.setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  distributed	107	None	add
126	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution.setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  Distribution  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Distribution	107	None	add
127	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
128	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
129	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    10.0);    this.distribution.setDegreesOfFreedom(observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
130	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  10.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    this.distribution.setDegreesOfFreedom(observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
131	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
132	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
133	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  10.0);  [CE]  ']'  expected  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  -  10.0);	  	non-compiled	[CE]  ']'  expected	67	None	add
134	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistributionImpl)regex).setDegreesOfFreedom(observed.length  -  10.0);  [CE]  cannot  find  symbol  regex  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquaredDistributionImpl)regex).setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    ((  ChiSquaredDistributionImpl)regex).setDegreesOfFreedom(observed.length  -  10.0);	  	non-compiled	[CE]  cannot  find  symbol  regex	67	None	add
135	[BUG]  [BUGGY]  (1(ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1(ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1(ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  ')'  expected	110	None	replace
136	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	110	6	replace
137	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	110	6	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  10.0);	  distribution.setDegreesOfFreedom(expected.length    /    10.0);    	compilable	  [FE]  AssertionFailedError  	66	6	replace
139	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  10.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  10.0);	  distribution.setDegreesOfFreedom(expected.length    /    10.0);    	compilable	  [FE]  AssertionFailedError  	66	6	replace
140	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    /    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	66	6	replace
141	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  10.0);  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    /    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	66	6	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  this.distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    2.0);    this.distribution.setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
143	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  this.distribution.setDegreesOfFreedom(observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  this.distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    this.distribution.setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
145	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
146	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
148	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
149	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  /  2.0);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  /  2.0);	  	non-compiled	[CE]  ']'  expected	23	None	add
150	[BUG]  [BUGGY]  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)reference).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
151	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)reference).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
152	[BUG]  [BUGGY]  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected,  observed.length  /  2.0);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)reference).setDegreesOfFreedom(expected,  observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)reference).setDegreesOfFreedom(expected,  observed.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)reference).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  this.distribution.setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    2);    this.distribution.setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
154	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  this.distribution.setDegreesOfFreedom(expected.length  *  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  this.distribution.setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    this.distribution.setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    2);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
156	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
157	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2);	  	non-compiled	[CE]  cannot  find  symbol	152	None	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    2);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
159	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
160	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  2]);  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  2]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  2]);	  	non-compiled	[CE]  cannot  find  symbol  length	152	None	add
161	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
162	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
163	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	137	6	replace
164	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	137	6	replace
165	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
166	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	88	None	replace
167	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	88	None	replace
168	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  true);  [CE]  cannot  find  symbol  normalized  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  normalized	88	None	replace
169	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	88	None	replace
170	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
171	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
172	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
173	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
174	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
175	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
176	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
177	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
178	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
179	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	7	6	add
180	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	21	None	replace
181	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  null);  [CE]  cannot  find  symbol  observe  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observe,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  observe	21	None	replace
182	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  null);  [CE]  cannot  find  symbol  normalized  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  normalized	21	None	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  30.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  30.0);	  distribution.setDegreesOfFreedom(expected.length    *    40.0);    	compilable	  [FE]  AssertionFailedError  	155	6	replace
184	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  30.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  30.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  30.0);	  distribution.setDegreesOfFreedom(expected.length    *    40.0);    	compilable	  [FE]  AssertionFailedError  	155	6	replace
185	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  40.0);	  distribution.setDegreesOfFreedom(expected.length    *    40.0);    	compilable	  [FE]  MaxIterationsExceededException  	155	6	replace
186	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  40.0);  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  40.0);	  distribution.setDegreesOfFreedom(expected.length    *    40.0);    	compilable	  [FE]  MaxIterationsExceededException  	155	6	replace
187	[BUG]  [BUGGY]  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  ';'  expected	129	None	replace
188	[BUG]  [BUGGY]  Distribution  distribution.setDegreesOfFreedom(expected.length  -  1.0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  Distribution  distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	Distribution  distribution.setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  ';'  expected	129	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  this.distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    *    1.0);    this.distribution.setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
190	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  this.distribution.setDegreesOfFreedom(observed.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  this.distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    this.distribution.setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
192	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
193	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol	123	None	add
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
195	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
196	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  *  1.0);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  *  1.0);	  	non-compiled	[CE]  ']'  expected	123	None	add
197	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[0],  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[0],  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[0],  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	95	None	replace
198	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	95	None	replace
199	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected[0],  observed);  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected[0],  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected[0],  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed);    	non-compiled	[CE]  inconvertible  types	95	None	replace
200	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	125	None	replace
201	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed  }  );  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed  }  );  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  incompatible  types	125	None	replace
202	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  new  double[]  {  }  );  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  new  double[]  {  }  );  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  new  double[]  {  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	125	None	replace
203	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed  }  );  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed  }  );  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed  }  );	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  incompatible  types	125	None	replace
204	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  observed.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  observed.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  1.0);  observed.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	144	6	replace
206	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	144	6	replace
207	[BUG]  [BUGGY]  annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  annualDistribution  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  annualDistribution	144	None	replace
208	[BUG]  [BUGGY]  x.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  x  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  x.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	x.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  x	144	None	replace
209	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    	compilable	  [FE]  IllegalArgumentException  	58	6	replace
210	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0);  [FE]  IllegalArgumentException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    	compilable	  [FE]  IllegalArgumentException  	58	6	replace
211	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
212	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  /  2.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  *  2.0);	  distribution.setDegreesOfFreedom(observed.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	24	6	replace
214	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  *  2.0);	  distribution.setDegreesOfFreedom(observed.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	24	6	replace
215	[BUG]  [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    new    ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	102	None	replace
216	[BUG]  [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0,  observed);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0,  observed);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    new    ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	102	None	replace
217	[BUG]  [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected,  observed.length  *  1.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected,  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected,  observed.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    new    ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	102	None	replace
218	[BUG]  [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0,  observed.length);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  1.0,  observed.length);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    new    ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	102	None	replace
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  *  20.0);	  distribution.setDegreesOfFreedom(observed.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	124	6	replace
220	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  20.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  *  20.0);	  distribution.setDegreesOfFreedom(observed.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	124	6	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    20.0);    this.distribution.setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
222	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  20.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    this.distribution.setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    20.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
224	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    20.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
226	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
227	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  /  20.0);  [CE]  ']'  expected  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  /  20.0);	  	non-compiled	[CE]  ']'  expected	17	None	add
228	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected[length  /  20.0);  [CE]  ']'  expected  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected[length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected[length  /  20.0);	  	non-compiled	[CE]  ']'  expected	17	None	add
229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
230	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
232	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
234	[BUG]  [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
235	[BUG]  [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  ')'  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  ')'  expected	14	None	replace
236	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
237	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  10.0);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
238	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
239	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
240	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
242	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
243	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
244	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
245	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
246	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
247	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
248	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
249	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
250	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	74	6	replace
252	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	74	6	replace
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	74	6	replace
254	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	74	6	replace
255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	74	6	replace
256	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	74	6	replace
257	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0]);  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0]);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
258	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    *    1.0);    	non-compiled	[CE]  ']'  expected	41	None	replace
259	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0],  observed);  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0],  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0],  observed);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
260	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  *  1.0]);  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  *  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected[length  *  1.0]);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
261	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0,  observed);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	55	None	replace
262	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	79	6	add
263	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	79	6	add
264	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	79	6	add
265	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	79	6	add
266	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setSquaresOfFreedom(expected.length  -  10.0);  this.distribution.setSquaresOfFreedom(expected.length  -  10.0);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setSquaresOfFreedom(expected.length  -  10.0);  this.distribution.setSquaresOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setSquaresOfFreedom(expected.length  -  10.0);  this.distribution.setSquaresOfFreedom(expected.length  -  10.0);	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
267	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(  observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(  observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	79	6	add
268	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(  observed.length  -  10.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(  observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(  observed.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	79	6	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
270	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
271	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	89	6	add
272	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	89	6	add
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
274	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
276	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
277	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0	  	non-compiled	[CE]  ')'  expected	89	None	add
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	71	6	add
279	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	71	6	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	71	6	add
281	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	71	6	add
282	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  [CE]  cannot  find  symbol  normalized  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  normalized	71	None	add
283	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(this.distribution.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(this.distribution.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(this.distribution.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  length	71	None	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	71	6	add
285	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	71	6	add
286	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0.0);  [CE]  ')'  expected  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  1.0.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0.0);    	non-compiled	[CE]  ')'  expected	148	None	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  3.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  3.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0.0);    	compilable	  [FE]  AssertionFailedError  	148	6	replace
288	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  3.0);  [FE]  AssertionFailedError  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  3.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  3.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0.0);    	compilable	  [FE]  AssertionFailedError  	148	6	replace
289	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	47	None	replace
290	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	47	None	replace
291	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(0.0,  observed);  [CE]  inconvertible  types  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(0.0,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(0.0,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  inconvertible  types	47	None	replace
292	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  this.distribution.setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    20.0);    this.distribution.setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
294	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  this.distribution.setDegreesOfFreedom(expected.length  *  20.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  this.distribution.setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    this.distribution.setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
295	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  x.setDegreesOfFreedom(expected.length  *  20.0);  [CE]  cannot  find  symbol  x  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  x.setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    x.setDegreesOfFreedom(expected.length  *  20.0);	  	non-compiled	[CE]  cannot  find  symbol  x	100	None	add
296	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  FixedDistributionImpl  distribution  =  new  FixedDistributionImpl();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  FixedDistributionImpl  distribution  =  new  FixedDistributionImpl();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    FixedDistributionImpl  distribution  =  new  FixedDistributionImpl();	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
297	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  FixedDistributionImpl  distribution  =  new  FixedDistributionImpl(this,  observed);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  FixedDistributionImpl  distribution  =  new  FixedDistributionImpl(this,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    FixedDistributionImpl  distribution  =  new  FixedDistributionImpl(this,  observed);	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  this.distribution.setDegreesOfFreedom(expected.length  *  21.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    20.0);    this.distribution.setDegreesOfFreedom(expected.length  *  21.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
299	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  this.distribution.setDegreesOfFreedom(expected.length  *  21.0);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  this.distribution.setDegreesOfFreedom(expected.length  *  21.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    this.distribution.setDegreesOfFreedom(expected.length  *  21.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
301	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
303	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
305	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
306	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[1]);  [CE]  cannot  find  symbol  ditribution  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[1]);	  	non-compiled	[CE]  cannot  find  symbol  ditribution	96	None	add
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);	  	compilable	  [FE]  AssertionFailedError  	59	6	add
308	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);	  	compilable	  [FE]  AssertionFailedError  	59	6	add
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	59	6	add
310	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	59	6	add
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	59	6	add
312	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	59	6	add
313	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]	  	non-compiled	[CE]  ')'  expected	59	None	add
314	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	54	6	add
315	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	54	6	add
316	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	54	6	add
317	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	54	6	add
318	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	54	6	add
319	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.00);	  	compilable	  [FE]  IllegalArgumentException  	54	6	add
320	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  (1(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  (1(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    (1(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  ')'  expected	54	None	add
321	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
322	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[1]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[1]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	97	None	replace
323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	36	6	add
324	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	36	6	add
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	36	6	add
326	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	36	6	add
327	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0	  	non-compiled	[CE]  ')'  expected	36	None	add
328	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquareTest(expected,  observed));  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquareTest(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquareTest(expected,  observed));	  ((    ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  inconvertible  types	2	None	replace
329	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed,  x));  [CE]  cannot  find  symbol  x  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed,  x));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed,  x));	  ((    ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  x	2	None	replace
330	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed,  0));  [CE]  no  suitable  method  found  for  chiSquare(double[],long[],int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed,  0));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed,  0));	  ((    ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  chiSquare(double[],long[],int)	2	None	replace
331	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed.length));  [CE]  no  suitable  method  found  for  chiSquare(double[],int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed.length));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed.length));	  ((    ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  chiSquare(double[],int)	2	None	replace
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    10.0);    this.distribution.setDegreesOfFreedom(expected.length  /  10.0);	  	compilable	  [FE]  AssertionFailedError  	65	6	add
333	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  10.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    this.distribution.setDegreesOfFreedom(expected.length  /  10.0);	  	compilable	  [FE]  AssertionFailedError  	65	6	add
334	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  x.setDegreesOfFreedom(expected.length  /  10.0);  [CE]  cannot  find  symbol  x  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  x.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    x.setDegreesOfFreedom(expected.length  /  10.0);	  	non-compiled	[CE]  cannot  find  symbol  x	65	None	add
335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    10.0);    this.distribution.setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	65	6	add
336	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  20.0);  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    this.distribution.setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	65	6	add
337	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);  [CE]  cannot  find  symbol  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
338	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected,  observed);  [CE]  cannot  find  symbol  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected,  observed);	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  this.distribution.setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    40.0);    this.distribution.setDegreesOfFreedom(expected.length  *  40.0);	  	compilable	  [FE]  AssertionFailedError  	154	6	add
340	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  this.distribution.setDegreesOfFreedom(expected.length  *  40.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  this.distribution.setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    this.distribution.setDegreesOfFreedom(expected.length  *  40.0);	  	compilable	  [FE]  AssertionFailedError  	154	6	add
341	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  40.0);	  	non-compiled	[CE]  cannot  find  symbol	154	None	add
342	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  40.0);  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  40.0);	  	non-compiled	[CE]  ']'  expected	154	None	add
343	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  FixedDistributionImpl  distribution  =  new  FixedDistributionImpl();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  FixedDistributionImpl  distribution  =  new  FixedDistributionImpl();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    FixedDistributionImpl  distribution  =  new  FixedDistributionImpl();	  	non-compiled	[CE]  cannot  find  symbol	154	None	add
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  this.distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    1.0);    this.distribution.setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
345	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  this.distribution.setDegreesOfFreedom(observed.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  this.distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    this.distribution.setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
347	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
348	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol	69	None	add
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
350	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
351	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  /  1.0);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length  /  1.0);	  	non-compiled	[CE]  ']'  expected	69	None	add
352	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true,  observed);  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  true,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	86	None	replace
353	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	86	None	replace
354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
355	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.3);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.3);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
357	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.3);  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.3);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.3);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.2);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
359	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.2);  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.2);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.6);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.6);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
361	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.6);  [FE]  AssertionFailedError  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.6);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.6);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.4);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.4);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
363	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.4);  [FE]  AssertionFailedError  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.4);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.4);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    0.01);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
365	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.01);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    0.01);    this.distribution.setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
367	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  0.01);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    this.distribution.setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    0.01);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
369	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  0.01);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
370	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  x.setDegreesOfFreedom(expected.length  -  0.01);  [CE]  cannot  find  symbol  x  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  x.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    x.setDegreesOfFreedom(expected.length  -  0.01);	  	non-compiled	[CE]  cannot  find  symbol  x	149	None	add
371	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
372	[BUG]  [BUGGY]  observed.length  -  1.0;  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  observed.length  -  1.0;  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	observed.length  -  1.0;  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  not  a  statement	75	None	replace
373	[BUG]  [BUGGY]  observer.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  observer  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  observer.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	observer.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  observer	75	None	replace
374	[BUG]  [BUGGY]  observed.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  observed.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	observed.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
375	[BUG]  [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [CE]  package  This  does  not  exist  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  This.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	This.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  package  This  does  not  exist	35	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  *  10.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	35	6	replace
377	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  10.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  *  10.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	35	6	replace
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
379	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
381	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
382	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  theDistribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  theDistribution  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  theDistribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  theDistribution.setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  theDistribution	127	None	add
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
384	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
385	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distributed.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  distributed  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distributed.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  distributed.setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  distributed	127	None	add
386	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	76	6	add
387	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	76	6	add
388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	76	6	add
389	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	76	6	add
390	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
391	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
392	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	82	6	replace
393	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	82	6	replace
394	[BUG]  [BUGGY]  =(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  =(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	=(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
395	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	82	6	replace
396	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [FE]  MaxIterationsExceededException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	82	6	replace
397	[BUG]  [BUGGY]  Distribution  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  Distribution  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	Distribution  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  ';'  expected	120	None	replace
398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	103	6	add
399	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	103	6	add
400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	103	6	add
401	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	103	6	add
402	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0	  	non-compiled	[CE]  ')'  expected	103	None	add
403	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(expected,  true);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(expected,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(expected,  true);	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
404	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(observed,  true);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(observed,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(observed,  true);	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
405	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(unexpected,  true);  [CE]  cannot  find  symbol  unexpected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(unexpected,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(unexpected,  true);	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol  unexpected	111	None	replace
406	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(normalized,  true);  [CE]  cannot  find  symbol  normalized  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(normalized,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(normalized,  true);	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol  normalized	111	None	replace
407	[BUG]  [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  ')'  expected	94	None	replace
408	[BUG]  [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  ')'  expected	94	None	replace
409	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
410	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
411	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
412	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
413	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
414	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
415	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
416	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
417	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0	  	non-compiled	[CE]  ')'  expected	92	None	add
418	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  20.0,  observed);	  distribution.setDegreesOfFreedom(expected.length    *    20.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	101	None	replace
419	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0  +  observed);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0  +  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  20.0  +  observed);	  distribution.setDegreesOfFreedom(expected.length    *    20.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	101	None	replace
420	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
421	[BUG]  [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
422	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
423	[BUG]  [BUGGY]  if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(this.distribution!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
424	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
425	[BUG]  [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
426	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  20.0,  observed);	  distribution.setDegreesOfFreedom(expected.length    /    20.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	18	None	replace
427	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  observed);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	56	None	replace
428	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  expected);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	56	None	replace
429	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	56	None	replace
430	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  x);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  x);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	56	None	replace
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    	compilable	  [FE]  AssertionFailedError  	113	6	replace
432	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    	compilable	  [FE]  AssertionFailedError  	113	6	replace
433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	39	6	add
434	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	39	6	add
435	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	39	6	add
436	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	39	6	add
437	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    *    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
438	[BUG]  [BUGGY]  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
439	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	128	6	replace
440	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	128	6	replace
441	[BUG]  [BUGGY]  annualDistribution.setDegreesOfFreedom(expected.length  -  1.0);annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  annualDistribution  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  annualDistribution.setDegreesOfFreedom(expected.length  -  1.0);annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	annualDistribution.setDegreesOfFreedom(expected.length  -  1.0);annualDistribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  annualDistribution	128	None	replace
442	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0]);  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0]);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	45	None	replace
443	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0);  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    1.0);    	non-compiled	[CE]  ']'  expected	45	None	replace
444	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0]);  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0]);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	45	None	replace
445	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0);  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    1.0);    	non-compiled	[CE]  ']'  expected	45	None	replace
446	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	19	None	replace
447	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0.0);  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  /  1.0.0);	  distribution.setDegreesOfFreedom(observed.length    -    10.0);    	non-compiled	[CE]  ')'  expected	68	None	replace
448	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  0.01);	  distribution.setDegreesOfFreedom(expected.length    -    0.01);    	compilable	  [FE]  AssertionFailedError  	150	6	replace
449	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  0.01);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  0.01);	  distribution.setDegreesOfFreedom(expected.length    -    0.01);    	compilable	  [FE]  AssertionFailedError  	150	6	replace
450	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de  distributed).setProbability(chiSquare(expected,  observed));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)de  distributed).setProbability(chiSquare(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)de  distributed).setProbability(chiSquare(expected,  observed));	  ((    ChiSquaredDistributionImpl)de    distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ')'  expected	122	None	replace
451	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  de  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)de).setProbability(chiSquare(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)de).setProbability(chiSquare(expected,  observed));	  ((    ChiSquaredDistributionImpl)de    distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  de	122	None	replace
452	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setDegreesOfFreedom(chiSquare(expected,  observed));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setDegreesOfFreedom(chiSquare(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)de  distribution).setDegreesOfFreedom(chiSquare(expected,  observed));	  ((    ChiSquaredDistributionImpl)de    distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ')'  expected	122	None	replace
453	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	118	6	add
454	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	118	6	add
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	118	6	add
456	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	118	6	add
457	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0	  	non-compiled	[CE]  ')'  expected	118	None	add
458	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length  +  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  -  observed.length  +  1);	  distribution.setDegreesOfFreedom(expected.length    -    observed.length);    	compilable	  [FE]  MaxIterationsExceededException  	147	6	replace
459	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length  +  1);  [FE]  MaxIterationsExceededException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length  +  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  observed.length  +  1);	  distribution.setDegreesOfFreedom(expected.length    -    observed.length);    	compilable	  [FE]  MaxIterationsExceededException  	147	6	replace
460	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length,  observed.length);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  observed.length,  observed.length);	  distribution.setDegreesOfFreedom(expected.length    -    observed.length);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	147	None	replace
461	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  -  expected.length);	  distribution.setDegreesOfFreedom(expected.length    -    observed.length);    	compilable	  [FE]  IllegalArgumentException  	147	6	replace
462	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  expected.length);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  -  expected.length);	  distribution.setDegreesOfFreedom(expected.length    -    observed.length);    	compilable	  [FE]  IllegalArgumentException  	147	6	replace
463	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	81	6	add
464	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	81	6	add
465	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	81	6	add
466	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	81	6	add
467	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0	  	non-compiled	[CE]  ')'  expected	81	None	add
468	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  1	  	non-compiled	[CE]  ')'  expected	81	None	add
469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
470	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
472	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
474	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
475	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distributed.setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  distributed  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distributed.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  distributed.setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  distributed	134	None	add
476	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  Distribution.setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  Distribution  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  Distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  Distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  Distribution	134	None	add
477	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)data).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  data  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)data).setProbability(chiSquare(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)data).setProbability(chiSquare(expected,  observed));	  ((    ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  data	1	None	replace
478	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	119	6	replace
479	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	119	6	replace
480	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	119	6	replace
481	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	119	6	replace
482	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
483	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
484	[BUG]  [BUGGY]  DesertionFailedError  distribution  =  (AssertionFailedError)distribution.clone();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  DesertionFailedError  distribution  =  (AssertionFailedError)distribution.clone();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	DesertionFailedError  distribution  =  (AssertionFailedError)distribution.clone();	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	77	6	replace
486	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	77	6	replace
487	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	77	6	replace
488	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	77	6	replace
489	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	77	6	replace
490	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	77	6	replace
491	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  this.distribution.setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    this.distribution.setDegreesOfFreedom(expected.length  -  observed.length);	  	compilable	  [FE]  IllegalArgumentException  	146	6	add
492	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  this.distribution.setDegreesOfFreedom(expected.length  -  observed.length);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  this.distribution.setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    this.distribution.setDegreesOfFreedom(expected.length  -  observed.length);	  	compilable	  [FE]  IllegalArgumentException  	146	6	add
493	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);	  	compilable	  [FE]  IllegalArgumentException  	146	6	add
494	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  -  observed.length);	  	compilable	  [FE]  IllegalArgumentException  	146	6	add
495	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  observed.length);  [CE]  ']'  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  observed.length);	  	non-compiled	[CE]  ']'  expected	146	None	add
496	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  observed.length);	  	compilable	  [FE]  IllegalArgumentException  	146	6	add
497	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  observed.length);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  observed.length);	  	compilable	  [FE]  IllegalArgumentException  	146	6	add
498	[BUG]  [BUGGY]  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  ')'  expected	31	None	replace
499	[BUG]  [BUGGY]  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  ')'  expected	31	None	replace
500	[BUG]  [BUGGY]  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(0.0);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution),distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution),distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  ')'  expected	31	None	replace
501	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  distribution);  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  distribution);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  distribution);	  ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  inconvertible  types	132	None	replace
502	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed),  distribution);  [CE]  cannot  find  symbol  observe  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed),  distribution);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed),  distribution);	  ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  cannot  find  symbol  observe	132	None	replace
503	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  ')'  expected	132	None	replace
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	105	6	add
505	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	105	6	add
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	105	6	add
507	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	105	6	add
508	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    /    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
509	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
510	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
511	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
512	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
514	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
516	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);	  	compilable	  [FE]  AssertionFailedError  	140	6	add
517	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1));  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1));  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1));  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	non-compiled	[CE]  ';'  expected	140	None	add
518	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	130	None	replace
519	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	130	None	replace
520	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  true);  [CE]  cannot  find  symbol  x  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  cannot  find  symbol  x	130	None	replace
521	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  observed[1]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  observed[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  observed[1]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed[0]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	98	None	replace
522	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected[0]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected[0]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed[0]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	98	None	replace
523	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed[0]);  [CE]  inconvertible  types  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setDegreesOfFreedom(expected,  observed[0]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed[0]);    	non-compiled	[CE]  inconvertible  types	98	None	replace
524	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	87	None	replace
525	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0],  observed);  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0],  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  /  2.0],  observed);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
526	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  -  2.0);  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  -  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  -  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    2.0);    	non-compiled	[CE]  ']'  expected	51	None	replace
527	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	83	6	add
528	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	83	6	add
529	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	83	6	add
530	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	compilable	  [FE]  IllegalArgumentException  	83	6	add
531	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);  [(  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  -  10.0);	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
532	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    2.0);    this.distribution.setDegreesOfFreedom(expected.length  *  2.0);	  	compilable	  [FE]  AssertionFailedError  	15	6	add
533	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  this.distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2.0);    this.distribution.setDegreesOfFreedom(expected.length  *  2.0);	  	compilable	  [FE]  AssertionFailedError  	15	6	add
534	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  	compilable	  [FE]  AssertionFailedError  	15	6	add
535	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  	compilable	  [FE]  AssertionFailedError  	15	6	add
536	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2.0);    ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
537	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  	compilable	  [FE]  AssertionFailedError  	15	6	add
538	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  	compilable	  [FE]  AssertionFailedError  	15	6	add
539	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  2.0);  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  2.0);	  	non-compiled	[CE]  ']'  expected	15	None	add
540	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
541	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
542	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
543	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
544	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
545	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
546	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distributed.setDegreesOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  distributed  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distributed.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  distributed.setDegreesOfFreedom(expected.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol  distributed	116	None	add
547	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  Distribution.setDegreesOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  Distribution  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  Distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  Distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol  Distribution	116	None	add
548	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
549	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.3);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.3);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
551	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.3);  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.3);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.3);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.2);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
553	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.2);  [FE]  AssertionFailedError  [FE]        MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.2);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
554	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.6);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.6);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
555	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.6);  [FE]  AssertionFailedError  [FE]          MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.6);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.6);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.4);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.4);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
557	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.4);  [FE]  AssertionFailedError  [FE]            MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.4);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.4);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
558	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	34	6	add
559	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	34	6	add
560	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setSquaresOfFreedom(expected.length  *  1.0);  this.distribution.setSquaresOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setSquaresOfFreedom(expected.length  *  1.0);  this.distribution.setSquaresOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setSquaresOfFreedom(expected.length  *  1.0);  this.distribution.setSquaresOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	34	6	add
562	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	34	6	add
563	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  1.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
564	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  observed);  [CE]  inconvertible  types  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  observed);	  ((    ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,    distribution));    	non-compiled	[CE]  inconvertible  types	3	None	replace
565	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  x);  [CE]  cannot  find  symbol  x  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  x);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,  observed),  x);	  ((    ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,    distribution));    	non-compiled	[CE]  cannot  find  symbol  x	3	None	replace
566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  2);	  distribution.setDegreesOfFreedom(expected.length    *    2);    	compilable	  [FE]  AssertionFailedError  	153	6	replace
567	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  2);	  distribution.setDegreesOfFreedom(expected.length    *    2);    	compilable	  [FE]  AssertionFailedError  	153	6	replace
568	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2  +  observed);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2  +  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  2  +  observed);	  distribution.setDegreesOfFreedom(expected.length    *    2);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	153	None	replace
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  2  -  observed.length);	  distribution.setDegreesOfFreedom(expected.length    *    2);    	compilable	  [FE]  AssertionFailedError  	153	6	replace
570	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2  -  observed.length);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  2  -  observed.length);	  distribution.setDegreesOfFreedom(expected.length    *    2);    	compilable	  [FE]  AssertionFailedError  	153	6	replace
571	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	25	None	replace
572	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	25	None	replace
573	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  x);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	25	None	replace
574	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	25	None	replace
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
576	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
577	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  This.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [CE]  package  This  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  This.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    This.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	non-compiled	[CE]  package  This  does  not  exist	42	None	add
578	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setSquaresOfFreedom(expected.length  /  1.0);  this.distribution.setSquaresOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setSquaresOfFreedom(expected.length  /  1.0);  this.distribution.setSquaresOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setSquaresOfFreedom(expected.length  /  1.0);  this.distribution.setSquaresOfFreedom(expected.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
579	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
580	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	37	6	replace
582	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	37	6	replace
583	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);  [CE]  inconvertible  types  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  inconvertible  types	13	None	replace
584	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  ditribution  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol  ditribution	13	None	replace
585	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);  [CE]  inconvertible  types  [FE]                  IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  inconvertible  types	13	None	replace
586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  AssertionFailedError  	139	6	replace
587	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  AssertionFailedError  	139	6	replace
588	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
589	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
590	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
591	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
592	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
593	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
594	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
595	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
596	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[3]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
597	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]	  	non-compiled	[CE]  ')'  expected	112	None	add
598	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
599	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);	  	compilable	  [FE]  AssertionFailedError  	112	6	add
600	[BUG]  [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  not  a  statement	104	None	replace
601	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	22	None	replace
602	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	22	None	replace
603	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  expected,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	22	None	replace
604	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	22	None	replace
605	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  [CE]  ']'  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  ']'  expected	85	None	replace
606	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0]);  [CE]  cannot  find  symbol  length  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0]);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
607	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0],  observed);  [CE]  cannot  find  symbol  length  [FE]                  IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0],  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0],  observed);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
608	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0,  observed);  [CE]  ']'  expected  [FE]                    IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0,  observed);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  ']'  expected	85	None	replace
609	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[0],  observed[1]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[0],  observed[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[0],  observed[1]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed[1]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	99	None	replace
610	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  observed[2]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  observed[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  observed[2]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed[1]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	99	None	replace
611	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  x);  [CE]  cannot  find  symbol  x  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  x);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed[1]);    	non-compiled	[CE]  cannot  find  symbol  x	99	None	replace
612	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  expected[2]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  expected[2]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  expected[2]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed[1]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	99	None	replace
613	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  [CE]  inconvertible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  inconvertible  types	91	None	replace
614	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1);  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1);  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  inconvertible  types	91	None	replace
615	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  inconvertible  types	91	None	replace
616	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
617	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
618	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setSquaresOfFreedom(expected.length  /  2.0);  this.distribution.setSquaresOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setSquaresOfFreedom(expected.length  /  2.0);  this.distribution.setSquaresOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setSquaresOfFreedom(expected.length  /  2.0);  this.distribution.setSquaresOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
619	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
620	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
621	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
622	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
623	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed);  [CE]  cannot  find  symbol  normalized  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(normalized,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  normalized	156	None	replace
624	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unobserved,  observed);  [CE]  cannot  find  symbol  unobserved  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unobserved,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unobserved,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  unobserved	156	None	replace
625	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest(expected,  observed));  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest(expected,  observed));	  ((    ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  inconvertible  types	121	None	replace
626	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed),  observed);  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed),  observed);	  ((    ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  inconvertible  types	121	None	replace
627	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed,  x));  [CE]  cannot  find  symbol  x  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed,  x));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,  observed,  x));	  ((    ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  cannot  find  symbol  x	121	None	replace
628	[BUG]  [BUGGY]  Distribution  distribution.setDegreesOfFreedom(expected.length  *  2.0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  Distribution  distribution.setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	Distribution  distribution.setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  ';'  expected	109	None	replace
629	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  false);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  false);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  false);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	131	None	replace
630	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  false);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  false);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  false);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	131	None	replace
631	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
632	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
633	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[1]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    	compilable	  [FE]  AssertionFailedError  	62	6	replace
634	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[1]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[1]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    	compilable	  [FE]  AssertionFailedError  	62	6	replace
635	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
636	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
637	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	28	6	add
638	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	28	6	add
639	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
640	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
641	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
642	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
644	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	28	6	add
645	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	104	6	replace
646	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	104	6	replace
647	[BUG]  [BUGGY]  (1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
648	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	108	6	replace
649	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	108	6	replace
650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	108	6	replace
651	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	108	6	replace
652	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
653	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.7);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.7);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
654	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.7);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.7);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.7);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
655	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
656	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
657	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
658	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	116	6	add
659	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.data.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  data  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.data.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.data.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  data	144	None	replace
660	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  AssertionFailedError  	141	6	replace
661	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  AssertionFailedError  	141	6	replace
662	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  null);  [CE]  cannot  find  symbol  x  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed,    null);    	non-compiled	[CE]  cannot  find  symbol  x	22	None	replace
663	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
664	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
666	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(expected.length  -  1.0);  distribution.setDegreesOfFreedom(expected.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
667	[BUG]  [BUGGY]  if(expected  <  =  0.0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected  <  =  0.0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected  <  =  0.0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
668	[BUG]  [BUGGY]  if(expected  <  =  0.0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected  <  =  0.0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected  <  =  0.0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
669	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    Distribution  distribution.setDegreesOfFreedom(observed.length  /  2.0);	  	non-compiled	[CE]  ';'  expected	23	None	add
670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    2.0);    distribution.setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
671	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  distribution.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    distribution.setDegreesOfFreedom(observed.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	23	6	add
672	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquareTest,  observed));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observed).setProbability(chiSquareTest,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observed).setProbability(chiSquareTest,  observed));	  ((    ChiSquaredDistributionImpl)observed).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ';'  expected	2	None	replace
673	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  expected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	47	None	replace
674	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	47	None	replace
675	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected.length);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected.length);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,  observed,  expected.length);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	47	None	replace
676	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed[0]);  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  observed[0]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed[0]);    	non-compiled	[CE]  cannot  find  symbol  x	98	None	replace
677	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  expected[1]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  expected[1]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  expected[1]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed[0]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	98	None	replace
678	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,  observed,  1.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	25	None	replace
679	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(wrapped,  true);  [CE]  cannot  find  symbol  wrapped  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(wrapped,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(wrapped,  true);	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol  wrapped	111	None	replace
680	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(unwrapped,  true);  [CE]  cannot  find  symbol  unwrapped  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(unwrapped,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(unwrapped,  true);	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	111	None	replace
681	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(new  double[]  {  0,  }  );  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(new  double[]  {  0,  }  );  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(new  double[]  {  0,  }  );	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
682	[BUG]  [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  /  1.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    new    ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	102	None	replace
683	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  x);  [CE]  cannot  find  symbol  x  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  x);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed);    	non-compiled	[CE]  cannot  find  symbol  x	95	None	replace
684	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[0],  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	95	None	replace
685	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	95	None	replace
686	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
687	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);	  	compilable	  [FE]  AssertionFailedError  	96	6	add
688	[BUG]  [BUGGY]  this.distribution.setDistribution(expected.length  *  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDistribution(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDistribution(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
689	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  2.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2.0);    new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  2.0);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	15	None	add
690	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    20.0);    distribution.setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
691	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  distribution.setDegreesOfFreedom(expected.length  /  20.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  distribution.setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    distribution.setDegreesOfFreedom(expected.length  /  20.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
692	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [CE]  cannot  find  symbol  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  20.0);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
693	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  if(!((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  ')'  expected  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  if(!((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  if(!((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  ')'  expected	142	None	replace
694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.5);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  -  0.5);	  distribution.setDegreesOfFreedom(expected.length    -    0.01);    	compilable	  [FE]  AssertionFailedError  	150	6	replace
695	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.5);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.5);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  0.5);	  distribution.setDegreesOfFreedom(expected.length    -    0.01);    	compilable	  [FE]  AssertionFailedError  	150	6	replace
696	[BUG]  [BUGGY]  (1  <  <  (ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
697	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  ditribution  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  ditribution	91	None	replace
698	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  inconvertible  types	91	None	replace
699	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1);  [CE]  cannot  find  symbol  ditribution  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  ditribution	91	None	replace
700	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[2]);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[1]	  	non-compiled	[CE]  ')'  expected	112	None	add
701	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  -  1.0);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected[length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  ']'  expected	78	None	replace
702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    10.0);    distribution.setDegreesOfFreedom(expected.length  /  10.0);	  	compilable	  [FE]  AssertionFailedError  	65	6	add
703	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    distribution.setDegreesOfFreedom(expected.length  /  10.0);	  	compilable	  [FE]  AssertionFailedError  	65	6	add
704	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0.0);  [CE]  ')'  expected  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0.0);	  	non-compiled	[CE]  ')'  expected	65	None	add
705	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquareTest(expected,  observed));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquareTest(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquareTest(expected,  observed));	  ((    ChiSquaredDistributionImpl)de    distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ')'  expected	122	None	replace
706	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed);  [CE]  cannot  find  symbol  x  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	20	None	replace
707	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  x);  [CE]  cannot  find  symbol  x  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  x);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed,  x);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	20	None	replace
708	[BUG]  [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
709	[BUG]  [BUGGY]  (1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
710	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(this.length  -  1.0);  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(this.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(this.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
711	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    /    1.0);    distribution.setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
712	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    distribution.setDegreesOfFreedom(observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	69	6	add
713	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    Distribution  distribution.setDegreesOfFreedom(observed.length  /  1.0);	  	non-compiled	[CE]  ';'  expected	69	None	add
714	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  AssertionFailedError  	82	6	replace
715	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  10.0);  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  +  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  AssertionFailedError  	82	6	replace
716	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x,  true,  observed);  [CE]  cannot  find  symbol  x  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(x,  true,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(x,  true,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setMean(true,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	5	None	replace
717	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }  [CE]  ']'  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  ']'  expected	85	None	replace
718	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  ']'  expected	85	None	replace
719	[BUG]  [BUGGY]  if(expected  ==  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }  [CE]  ']'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected  ==  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected  ==  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  ']'  expected	85	None	replace
720	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0;  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0;  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0;  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	non-compiled	[CE]  ')'  expected	28	None	add
721	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	34	6	add
722	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	34	6	add
723	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  the.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [CE]  package  the  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  the.distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length  *  1.0);  the.distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	non-compiled	[CE]  package  the  does  not  exist	34	None	add
724	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  IllegalArgumentException.setDegreesOfFreedom(expected.length  -  observed.length);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  IllegalArgumentException.setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    IllegalArgumentException.setDegreesOfFreedom(expected.length  -  observed.length);	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
725	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  new  FixedDistributionImpl();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  new  FixedDistributionImpl();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    FixedDistribution  distribution  =  new  FixedDistributionImpl();	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
726	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  new  FixedDistributionImpl(this,  observed);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  new  FixedDistributionImpl(this,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    FixedDistribution  distribution  =  new  FixedDistributionImpl(this,  observed);	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
727	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  new  FixedDistributionImpl(new  Long[]  {  expected  }  );  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  new  FixedDistributionImpl(new  Long[]  {  expected  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    FixedDistribution  distribution  =  new  FixedDistributionImpl(new  Long[]  {  expected  }  );	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
728	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	130	None	replace
729	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    true);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	130	None	replace
730	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  /  2.0);  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected[length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    2.0);    	non-compiled	[CE]  ']'  expected	51	None	replace
731	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  /  20.0);	  distribution.setDegreesOfFreedom(expected.length    /    20.0);    	compilable	  [FE]  MaxIterationsExceededException  	18	6	replace
732	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  20.0);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  /  20.0);	  distribution.setDegreesOfFreedom(expected.length    /    20.0);    	compilable	  [FE]  MaxIterationsExceededException  	18	6	replace
733	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	128	6	replace
734	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	128	6	replace
735	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  [CE]  cannot  find  symbol  normalized  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.distribution.setDegreesOfFreedom(normalized.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  normalized	128	None	replace
736	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	109	6	replace
737	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	109	6	replace
738	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    40.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);	  	compilable	  [FE]  AssertionFailedError  	154	6	add
739	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);	  	compilable	  [FE]  AssertionFailedError  	154	6	add
740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    40.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  40.0);	  	compilable	  [FE]  AssertionFailedError  	154	6	add
741	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  40.0);	  	compilable	  [FE]  AssertionFailedError  	154	6	add
742	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  40.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  40.0);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	154	None	add
743	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  false);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  false);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  false);	  distribution.setDegreesOfFreedom(expected.length    -    10.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	64	None	replace
744	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  null);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  null);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  10.0,  observed,  null);	  distribution.setDegreesOfFreedom(expected.length    -    10.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	64	None	replace
745	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected,  observed.length  -  10.0,  expected);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected,  observed.length  -  10.0,  expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected,  observed.length  -  10.0,  expected);	  distribution.setDegreesOfFreedom(expected.length    -    10.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	64	None	replace
746	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
747	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
748	[BUG]  [BUGGY]  ditedDistribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [CE]  cannot  find  symbol  ditedDistribution  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ditedDistribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	ditedDistribution.setDegreesOfFreedom(expected.length  /  2.0);  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    2.0);    	non-compiled	[CE]  cannot  find  symbol  ditedDistribution	53	None	replace
749	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    0.01);    distribution.setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
750	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    distribution.setDegreesOfFreedom(expected.length  -  0.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
751	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  Distribution  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  Distribution  distribution.setDegreesOfFreedom(expected.length  -  0.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    Distribution  distribution.setDegreesOfFreedom(expected.length  -  0.01);	  	non-compiled	[CE]  ';'  expected	149	None	add
752	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  },  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	126	None	replace
753	[BUG]  [BUGGY]  this.distribution.setSquaresOfFreedom(observed[length  -  1.0);  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setSquaresOfFreedom(observed[length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setSquaresOfFreedom(observed[length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  ']'  expected	145	None	replace
754	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
755	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.00);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.000);	  	compilable	  [FE]  IllegalArgumentException  	11	6	add
756	[BUG]  [BUGGY]  diteDistribution.setDegreesOfFreedom(expected.length  -  10.0);  [CE]  cannot  find  symbol  diteDistribution  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  diteDistribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	diteDistribution.setDegreesOfFreedom(expected.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol  diteDistribution	143	None	replace
757	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
758	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	107	6	add
759	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution.setDegreesOfFreedom(expected.length  /  2.0);  [CE]  cannot  find  symbol  Distribution  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        distribution.setDegreesOfFreedom(expected.length    /    2.0);    distribution.setDegreesOfFreedom(expected.length  /  2.0);  Distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Distribution	107	None	add
760	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
761	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        2.0);        this.distribution.setDegreesOfFreedom(expected.length    /    2.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	48	6	add
762	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2  -  observed);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2  -  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  2  -  observed);	  distribution.setDegreesOfFreedom(expected.length    *    2);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	153	None	replace
763	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	140	6	add
764	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	140	6	add
765	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(wrapped,  true);  [CE]  cannot  find  symbol  wrapped  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(wrapped,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(wrapped,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  wrapped	88	None	replace
766	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
767	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
768	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
769	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	135	6	replace
770	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  for(int  i  =  0;  i  <  observed.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  for(int  i  =  0;  i  <  observed.length;  ++i)  {  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  for(int  i  =  0;  i  <  observed.length;  ++i)  {	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
771	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  *  1.0);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected[length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    *    1.0);    	non-compiled	[CE]  ']'  expected	41	None	replace
772	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  /  1.0);  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    *    1.0);    	non-compiled	[CE]  ']'  expected	41	None	replace
773	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
774	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  },  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	125	None	replace
775	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  observed);  [CE]  cannot  find  symbol  x  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  null,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	19	None	replace
776	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  expected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	19	None	replace
777	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  expected);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  expected);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,  observed,  expected);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	19	None	replace
778	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	76	6	add
779	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	76	6	add
780	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
781	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  IllegalArgumentException  	80	6	replace
782	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	80	6	replace
783	[BUG]  [BUGGY]  if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [FE]  MaxIterationsExceededException  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  MaxIterationsExceededException  	80	6	replace
784	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  dest  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)dest).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol  dest	13	None	replace
785	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  dividual  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)dividual).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol  dividual	13	None	replace
786	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  <identifier>  expected	92	None	add
787	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).;  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).;  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).;  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	non-compiled	[CE]  <identifier>  expected	92	None	add
788	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);  [CE]  cannot  find  symbol  ditribution  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  cannot  find  symbol  ditribution	63	None	replace
789	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  Distribution  distribution.setDegreesOfFreedom(expected.length  *  2);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  Distribution  distribution.setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    Distribution  distribution.setDegreesOfFreedom(expected.length  *  2);	  	non-compiled	[CE]  ';'  expected	152	None	add
790	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  +  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  +  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  AssertionFailedError  	84	6	replace
791	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  +  10.0);  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  +  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  +  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	compilable	  [FE]  AssertionFailedError  	84	6	replace
792	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  expected[3]);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  expected[3]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  expected[3]);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed[1]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	99	None	replace
793	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.7);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.7);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
794	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.7);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.7);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.7);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
795	[BUG]  [BUGGY]  diteDistribution.setDegreesOfFreedom(expected.length  /  1.0);  [CE]  cannot  find  symbol  diteDistribution  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  diteDistribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	diteDistribution.setDegreesOfFreedom(expected.length  /  1.0);	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol  diteDistribution	136	None	replace
796	[BUG]  [BUGGY]  diteDistribution.setDegreesOfFreedom(expected.length  *  1.0);  [CE]  cannot  find  symbol  diteDistribution  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  diteDistribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	diteDistribution.setDegreesOfFreedom(expected.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  cannot  find  symbol  diteDistribution	133	None	replace
797	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed),  observed);  [CE]  cannot  find  symbol  observe  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,  observed),  observed);	  ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  cannot  find  symbol  observe	132	None	replace
798	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0	  	non-compiled	[CE]  ')'  expected	9	None	add
799	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  1.0);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  1.0);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	56	None	replace
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
801	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
802	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
803	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distribution.setDegreesOfFreedom(expected.length  /  1.0);  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	117	6	replace
804	[BUG]  [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distributed.setDegreesOfFreedom(expected.length  /  1.0);  }  [CE]  cannot  find  symbol  distributed  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distributed.setDegreesOfFreedom(expected.length  /  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected!=  null)  {  distribution.setDegreesOfFreedom(expected.length  /  1.0);  distributed.setDegreesOfFreedom(expected.length  /  1.0);  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	non-compiled	[CE]  cannot  find  symbol  distributed	117	None	replace
805	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(data.length  -  1.0);  [CE]  cannot  find  symbol  data  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(data.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(data.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  data	74	None	replace
806	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  observed.length);	  distribution.setDegreesOfFreedom(expected.length    -    observed.length);    	compilable	  [FE]  AssertionFailedError  	147	6	replace
807	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  observed.length);  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  observed.length);	  distribution.setDegreesOfFreedom(expected.length    -    observed.length);    	compilable	  [FE]  AssertionFailedError  	147	6	replace
808	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    20.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
809	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
810	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    20.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
811	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
812	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  20.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  20.0);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	100	None	add
813	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0	  	non-compiled	[CE]  ')'  expected	7	None	add
814	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unwrapped,  null);  [CE]  cannot  find  symbol  unwrapped  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unwrapped,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unwrapped,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	21	None	replace
815	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(miSquare,  null);  [CE]  cannot  find  symbol  miSquare  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(miSquare,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(miSquare,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  miSquare	21	None	replace
816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    	compilable	  [FE]  AssertionFailedError  	58	6	replace
817	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.0);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    	compilable	  [FE]  AssertionFailedError  	58	6	replace
818	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest(observed,  expected));  [CE]  no  suitable  method  found  for  chiSquareTest(long[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest(observed,  expected));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest(observed,  expected));	  ((    ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  no  suitable  method  found  for  chiSquareTest(long[],double[])	121	None	replace
819	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest,  observed));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)expected).setProbability(chiSquareTest,  observed));	  ((    ChiSquaredDistributionImpl)expected).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ';'  expected	121	None	replace
820	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1).);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	non-compiled	[CE]  <identifier>  expected	138	None	add
821	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	138	6	add
822	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  IllegalArgumentException  	138	6	add
823	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  FixedDistribution  distribution  =  new  FixedDistributionImpl();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  FixedDistribution  distribution  =  new  FixedDistributionImpl();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    FixedDistribution  distribution  =  new  FixedDistributionImpl();	  	non-compiled	[CE]  cannot  find  symbol	67	None	add
824	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0.0);  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  1.0.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0.0);	  	non-compiled	[CE]  ')'  expected	67	None	add
825	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  FixedDistribution  distribution  =  new  FixedDistributionImpl(new  Long[]  {  expected,  observed  }  );  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  FixedDistribution  distribution  =  new  FixedDistributionImpl(new  Long[]  {  expected,  observed  }  );  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    FixedDistribution  distribution  =  new  FixedDistributionImpl(new  Long[]  {  expected,  observed  }  );	  	non-compiled	[CE]  cannot  find  symbol	67	None	add
826	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  11.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    -    10.0);    this.distribution.setDegreesOfFreedom(observed.length  -  11.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
827	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  11.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  this.distribution.setDegreesOfFreedom(observed.length  -  11.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    this.distribution.setDegreesOfFreedom(observed.length  -  11.0);	  	compilable	  [FE]  IllegalArgumentException  	67	6	add
828	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(wrapped,  observed);  [CE]  cannot  find  symbol  wrapped  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(wrapped,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(wrapped,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  wrapped	156	None	replace
829	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unexpected,  observed);  [CE]  cannot  find  symbol  unexpected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unexpected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unexpected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  unexpected	156	None	replace
830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
831	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        *        1.0);        distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length  *  1.0);  distribution.setDegreesOfFreedom(expected.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	134	6	add
832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	73	6	add
833	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	73	6	add
834	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length    -    1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  1.0	  	non-compiled	[CE]  ')'  expected	73	None	add
835	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length    *    1.0);    distribution.setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
836	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    distribution.setDegreesOfFreedom(observed.length  *  1.0);	  	compilable	  [FE]  AssertionFailedError  	123	6	add
837	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  Distribution  distribution.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    Distribution  distribution.setDegreesOfFreedom(observed.length  *  1.0);	  	non-compiled	[CE]  ';'  expected	123	None	add
838	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
839	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
841	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        /        1.0);        this.distribution.setDegreesOfFreedom(expected.length    /    1.0);    this.distribution.setDegreesOfFreedom(expected.length  /  1.0);  this.distribution.setDegreesOfFreedom(  observed.length  /  1.0);	  	compilable	  [FE]  AssertionFailedError  	42	6	add
842	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  false,  observed);  [CE]  cannot  find  symbol  x  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  false,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,  false,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  cannot  find  symbol  x	87	None	replace
843	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  expected,  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  expected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true,  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(false,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	87	None	replace
844	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	40	None	replace
845	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  -  1);	  distribution.setDegreesOfFreedom(expected.length    -    0.01);    	compilable	  [FE]  AssertionFailedError  	150	6	replace
846	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  1);	  distribution.setDegreesOfFreedom(expected.length    -    0.01);    	compilable	  [FE]  AssertionFailedError  	150	6	replace
847	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);  this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);  [CE]  cannot  find  symbol  degrees  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length  -  1.0);  this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);  this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);  this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);	  	non-compiled	[CE]  cannot  find  symbol  degrees	71	None	add
848	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(expected[0]);  [CE]  cannot  find  symbol  delegate  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(expected[0]);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(expected[0]);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(expected[0]);    	non-compiled	[CE]  cannot  find  symbol  delegate	63	None	replace
849	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.5);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
850	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.5);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(2.5);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
851	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
852	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	32	6	add
853	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDurationOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDurationOfFreedom(0.0);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDurationOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDurationOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistribution)distribution).setDurationOfFreedom(1.0);  ((  ChiSquaredDistribution)distribution).setDurationOfFreedom(0.0);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
854	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	10	6	replace
855	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  MaxIterationsExceededException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	10	6	replace
856	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed);  [CE]  '}'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  long[]  {  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    long[]    {    }    );    	non-compiled	[CE]  '}'  expected	126	None	replace
857	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
858	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed,  observed.length  -  1.0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(observed,  observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(observed,  observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
859	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	37	None	replace
860	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);  [CE]  cannot  find  symbol  degrees  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(degrees.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  degrees	72	None	replace
861	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(this.degreesOfFreedom  -  1.0);  [CE]  cannot  find  symbol  degreesOfFreedom  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(this.degreesOfFreedom  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(this.degreesOfFreedom  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  degreesOfFreedom	72	None	replace
862	[BUG]  [BUGGY]  (1  <  <  (ChickenDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChickenDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChickenDistribution)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
863	[BUG]  [BUGGY]  (1  <  <  (ChiggyDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChiggyDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChiggyDistribution)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
864	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  ']'  expected	38	None	replace
865	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected  *  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	38	None	replace
866	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	129	6	replace
867	[BUG]  [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	129	6	replace
868	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	129	6	replace
869	[BUG]  [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(observed.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    Distribution    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	129	6	replace
870	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    20.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
871	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    this.distribution.setDegreesOfFreedom(expected.length  /  2.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
872	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  25.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    /    20.0);    this.distribution.setDegreesOfFreedom(expected.length  /  25.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
873	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  25.0);  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  20.0);  this.distribution.setDegreesOfFreedom(expected.length  /  25.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    20.0);    this.distribution.setDegreesOfFreedom(expected.length  /  25.0);	  	compilable	  [FE]  AssertionFailedError  	17	6	add
874	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol	69	None	add
875	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  x.setDegreesOfFreedom(observed.length  /  1.0);  [CE]  cannot  find  symbol  x  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  1.0);  x.setDegreesOfFreedom(observed.length  /  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    1.0);    x.setDegreesOfFreedom(observed.length  /  1.0);	  	non-compiled	[CE]  cannot  find  symbol  x	69	None	add
876	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)this).setProbability(chiSquare(expected,  observed));  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)this).setProbability(chiSquare(expected,  observed));  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)this).setProbability(chiSquare(expected,  observed));	  ((    ChiSquaredDistributionImpl)observe).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  inconvertible  types	1	None	replace
877	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  -  10.0);	  	non-compiled	[CE]  cannot  find  symbol	67	None	add
878	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  x.setDegreesOfFreedom(observed.length  -  10.0);  [CE]  cannot  find  symbol  x  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  10.0);  x.setDegreesOfFreedom(observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    -    10.0);    x.setDegreesOfFreedom(observed.length  -  10.0);	  	non-compiled	[CE]  cannot  find  symbol  x	67	None	add
879	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.5);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  1.5);	  distribution.setDegreesOfFreedom(observed.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	124	6	replace
880	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.5);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.5);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  1.5);	  distribution.setDegreesOfFreedom(observed.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	124	6	replace
881	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  -  1.0);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  ']'  expected	78	None	replace
882	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setProbability(chiSquare(expected,  observed),  observed);  [CE]  cannot  find  symbol  delegate  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)delegate).setProbability(chiSquare(expected,  observed),  observed);	  ((    ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,    observed),    observed);    	non-compiled	[CE]  cannot  find  symbol  delegate	132	None	replace
883	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  MaxIterationsExceededException  	141	6	replace
884	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  MaxIterationsExceededException  	141	6	replace
885	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  MaxIterationsExceededException  	141	6	replace
886	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.2);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    	compilable	  [FE]  MaxIterationsExceededException  	141	6	replace
887	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  IllegalArgumentException  	117	6	replace
888	[BUG]  [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  IllegalArgumentException  	117	6	replace
889	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  IllegalArgumentException  	117	6	replace
890	[BUG]  [BUGGY]  if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  >  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  IllegalArgumentException  	117	6	replace
891	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  IllegalArgumentException  	117	6	replace
892	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  IllegalArgumentException  	117	6	replace
893	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution  =  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [CE]  incompatible  types  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  10.0);  this.distribution  =  distribution.setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    /    10.0);    this.distribution  =  distribution.setDegreesOfFreedom(expected.length  /  10.0);	  	non-compiled	[CE]  incompatible  types	65	None	add
894	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	140	6	add
895	[BUG]  [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	140	6	add
896	[BUG]  [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChickenDistributionImpl)distribution).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
897	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.redistribution.setDegreesOfFreedom(observed.length  -  1.0);  [CE]  cannot  find  symbol  redistribution  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.redistribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  -  1.0);  this.redistribution.setDegreesOfFreedom(observed.length  -  1.0);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    x.setDegreesOfFreedom(observed.length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  redistribution	144	None	replace
898	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected  *  1.0);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	133	None	replace
899	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected[length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  ']'  expected	133	None	replace
900	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
901	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(mapping,  true);  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setMean(mapping,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setMean(mapping,  true);	  ((    ChiSquaredDistributionImpl)distribution).setMean(x,    true);    	non-compiled	[CE]  cannot  find  symbol  mapping	111	None	replace
902	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	compilable	  [FE]  MaxIterationsExceededException  	8	6	replace
903	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  [FE]  MaxIterationsExceededException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.001);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    	compilable	  [FE]  MaxIterationsExceededException  	8	6	replace
904	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
905	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length        -        1.0);        distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length  -  1.0);  distribution.setDegreesOfFreedom(observed.length  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	127	6	add
906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	138	6	add
907	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);	  	compilable	  [FE]  IllegalArgumentException  	138	6	add
908	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  -  10.0);  [CE]  ']'  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected[length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  ']'  expected	85	None	replace
909	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  10.0);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	85	None	replace
910	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  -  10.0);  [CE]  ']'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    -    10.0);    	non-compiled	[CE]  ']'  expected	85	None	replace
911	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  40.0);	  	non-compiled	[CE]  cannot  find  symbol	154	None	add
912	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  x.setDegreesOfFreedom(expected.length  *  40.0);  [CE]  cannot  find  symbol  x  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  40.0);  x.setDegreesOfFreedom(expected.length  *  40.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    40.0);    x.setDegreesOfFreedom(expected.length  *  40.0);	  	non-compiled	[CE]  cannot  find  symbol  x	154	None	add
913	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  *  1.0);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed[length  *  1.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[length    *    1.0);    	non-compiled	[CE]  ']'  expected	41	None	replace
914	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDatasOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDatasOfFreedom(1.0);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDatasOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDatasOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDatasOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDatasOfFreedom(1.0);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
915	[BUG]  [BUGGY]  (1  <  <  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
916	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  if(distribution  instanceof  ChiSquareDistribution)  {  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  if(distribution  instanceof  ChiSquareDistribution)  {  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  }  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  if(distribution  instanceof  ChiSquareDistribution)  {  ((  ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);  }	          ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistribution)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
917	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  2.0);  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected[length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected.length    *    2.0);    	non-compiled	[CE]  ']'  expected	53	None	replace
918	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  2.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected,  observed.length  /  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
919	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
920	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
921	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);	  	compilable	  [FE]  IllegalArgumentException  	92	6	add
922	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  0.02);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    0.01);    this.distribution.setDegreesOfFreedom(expected.length  -  0.02);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
923	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  0.02);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  0.02);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    this.distribution.setDegreesOfFreedom(expected.length  -  0.02);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
924	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  1.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    -    0.01);    this.distribution.setDegreesOfFreedom(expected.length  -  1.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
925	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  1.01);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  0.01);  this.distribution.setDegreesOfFreedom(expected.length  -  1.01);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    0.01);    this.distribution.setDegreesOfFreedom(expected.length  -  1.01);	  	compilable	  [FE]  AssertionFailedError  	149	6	add
926	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  2);	  	non-compiled	[CE]  cannot  find  symbol	152	None	add
927	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  distribution.setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    2);    distribution.setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
928	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  distribution.setDegreesOfFreedom(expected.length  *  2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  2);  distribution.setDegreesOfFreedom(expected.length  *  2);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    2);    distribution.setDegreesOfFreedom(expected.length  *  2);	  	compilable	  [FE]  AssertionFailedError  	152	6	add
929	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  return  1.0;  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	120	6	replace
930	[BUG]  [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  return  1.0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  return  1.0;  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  return  1.0;  }	  distribution.setDegreesOfFreedom(expected.length    /    1.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    1.0);    	compilable	  [FE]  AssertionFailedError  	120	6	replace
931	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  true);  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  true);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  true);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    true);    	non-compiled	[CE]  cannot  find  symbol  mapping	88	None	replace
932	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquare(expected,  observed),  observed);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquare(expected,  observed),  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)de  distribution).setProbability(chiSquare(expected,  observed),  observed);	  ((    ChiSquaredDistributionImpl)de    distribution).setProbability(chiSquare(expected,    observed));    	non-compiled	[CE]  ')'  expected	122	None	replace
933	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    	compilable	  [FE]  AssertionFailedError  	27	6	replace
934	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.0);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    	compilable	  [FE]  AssertionFailedError  	27	6	replace
935	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(1.0);  [CE]  cannot  find  symbol  delegate  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)delegate).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  cannot  find  symbol  delegate	91	None	replace
936	[BUG]  [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  2.0);  [CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	new  ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length  *  2.0);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    new    ChiSquaredDistributionImpl().setDegreesOfFreedom(expected.length    *    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  ChiSquaredDistributionImpl()	102	None	replace
937	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  1.0.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length        -        10.0);        this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length  -  1.0.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);	  	non-compiled	[CE]  ')'  expected	79	None	add
938	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  null);  [CE]  cannot  find  symbol  mapping  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mapping,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  mapping	21	None	replace
939	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mutable,  null);  [CE]  cannot  find  symbol  mutable  [FE]                        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mutable,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(mutable,  null);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    null);    	non-compiled	[CE]  cannot  find  symbol  mutable	21	None	replace
940	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
941	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  x.setDegreesOfFreedom(observed.length  /  2.0);  [CE]  cannot  find  symbol  x  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  /  2.0);  x.setDegreesOfFreedom(observed.length  /  2.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    /    2.0);    x.setDegreesOfFreedom(observed.length  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  x	23	None	add
942	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  x.setDegreesOfFreedom(expected.length  -  observed.length);  [CE]  cannot  find  symbol  x  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  x.setDegreesOfFreedom(expected.length  -  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    x.setDegreesOfFreedom(expected.length  -  observed.length);	  	non-compiled	[CE]  cannot  find  symbol  x	146	None	add
943	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected);	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
944	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected,  observed);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected,  observed);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    FixedDistribution  distribution  =  FixedDistribution.getDistribution(expected,  observed);	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
945	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  FixedDistribution.getDistribution();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  observed.length);  FixedDistribution  distribution  =  FixedDistribution.getDistribution();  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    -    observed.length);    FixedDistribution  distribution  =  FixedDistribution.getDistribution();	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
946	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  -  1.0]);  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected[length  -  1.0]);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected[length  -  1.0]);	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    this.distribution.setDegreesOfFreedom(observed[length    -    1.0);    	non-compiled	[CE]  cannot  find  symbol  length	145	None	replace
947	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
948	[BUG]  [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	                ((        ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);        ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.1);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);	  	compilable	  [FE]  AssertionFailedError  	89	6	add
949	[BUG]  [BUGGY]  (1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  (1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	(1  <  <  (ChittleDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    (1(    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
950	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)diff).setDegreesOfFreedom(0.0);  [CE]  cannot  find  symbol  diff  [FE]              IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)diff).setDegreesOfFreedom(0.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)diff).setDegreesOfFreedom(0.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);    ((    ChiSquaredDistributionImpl)ditribution).setDegreesOfFreedom(0.0);    	non-compiled	[CE]  cannot  find  symbol  diff	13	None	replace
951	[BUG]  [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  System.arraycopy(expected,  observed,  0,  observed.length);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  System.arraycopy(expected,  observed,  0,  observed.length);  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(expected.length  -  10.0);  this.distribution.setDegreesOfFreedom(expected.length  -  10.0);  }  else  {  System.arraycopy(expected,  observed,  0,  observed.length);  }	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    this.distribution.setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	80	None	replace
952	[BUG]  [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  AssertionFailedError)distribution).setDegreesOfFreedom(expected,  observed.length);	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    ((    AssertionFailedError)distribution).setDegreesOfFreedom(expected[length    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
953	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(observed.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol	123	None	add
954	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  x.setDegreesOfFreedom(observed.length  *  1.0);  [CE]  cannot  find  symbol  x  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(observed.length  *  1.0);  x.setDegreesOfFreedom(observed.length  *  1.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length    *    1.0);    x.setDegreesOfFreedom(observed.length  *  1.0);	  	non-compiled	[CE]  cannot  find  symbol  x	123	None	add
955	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  IllegalArgumentException  	135	6	replace
956	[BUG]  [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  <  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  IllegalArgumentException  	135	6	replace
957	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  IllegalArgumentException  	135	6	replace
958	[BUG]  [BUGGY]  if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length!=  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  *  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  IllegalArgumentException  	135	6	replace
959	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  //((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  //((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	137	6	replace
960	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  //((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  //((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  //((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);	          ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(1.0);    	compilable	  [FE]  MaxIterationsExceededException  	137	6	replace
961	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  observed);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],  observed[1],  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0],    observed[1]);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	99	None	replace
962	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(middle,  observed);  [CE]  cannot  find  symbol  middle  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(middle,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(middle,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  middle	156	None	replace
963	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unspecified,  observed);  [CE]  cannot  find  symbol  unspecified  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unspecified,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(unspecified,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(x,    observed);    	non-compiled	[CE]  cannot  find  symbol  unspecified	156	None	replace
964	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  ==  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  ==  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	109	6	replace
965	[BUG]  [BUGGY]  if(expected.length  ==  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  ==  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  ==  observed.length)  {  distribution.setDegreesOfFreedom(expected.length  /  2.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(expected.length    /    2.0);    Distribution    distribution.setDegreesOfFreedom(expected.length    /    2.0);    	compilable	  [FE]  AssertionFailedError  	109	6	replace
966	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  observed.length  -  10.0);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  observed.length  -  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length,  observed.length  -  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
967	[BUG]  [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  /  10.0);	  distribution.setDegreesOfFreedom(expected.length    -    10.0);    ((    ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length    -    10.0);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
968	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	128	6	replace
969	[BUG]  [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	if(expected.length  >  0)  {  distribution.setDegreesOfFreedom(observed.length  -  1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  distribution.setDegreesOfFreedom(observed.length    -    1.0);    distribution.setDegreesOfFreedom(observed.length    -    1.0);    	compilable	  [FE]  AssertionFailedError  	128	6	replace
970	[BUG]  [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  null);  [CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  null);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,  observed,  null);	  ((    ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0,    observed);    	non-compiled	[CE]  method  setDegreesOfFreedom  in  interface  ChiSquaredDistribution  cannot  be  applied  to  given  types;	56	None	replace
971	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    ((  ChiSquareDistributionImpl)distribution).setDegreesOfFreedom(expected.length  *  20.0);	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
972	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  distribution.setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length    *    20.0);    distribution.setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
973	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  distribution.setDegreesOfFreedom(expected.length  *  20.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  20.0);  distribution.setDegreesOfFreedom(expected.length  *  20.0);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length    *    20.0);    distribution.setDegreesOfFreedom(expected.length  *  20.0);	  	compilable	  [FE]  AssertionFailedError  	100	6	add
974	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setMean(true,  observed);  [CE]  cannot  find  symbol  observe  [FE]                      AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)observe).setMean(true,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)observe).setMean(true,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setMean(true,    observed);    	non-compiled	[CE]  cannot  find  symbol  observe	5	None	replace
975	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed);  [CE]  '}'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  expected,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  '}'  expected	125	None	replace
976	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed);  [CE]  '}'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new  double[]  {  observed,  observed);	  ((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(new    double[]    {    }    );    	non-compiled	[CE]  '}'  expected	125	None	replace
977	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.5);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	this.distribution.setDegreesOfFreedom(expected.length  *  1.5);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	35	6	replace
978	[BUG]  [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.5);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  this.distribution.setDegreesOfFreedom(expected.length  *  1.5);  [BUGGY]      return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	this.distribution.setDegreesOfFreedom(expected.length  *  1.5);	  distribution.setDegreesOfFreedom(expected.length    *    1.0);    this.distribution.setDegreesOfFreedom(expected.length    *    1.0);    	compilable	  [FE]  AssertionFailedError  	35	6	replace
979	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.5);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
980	[BUG]  [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.5);  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException    [CONTEXT]      public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {      [BUGGY]  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);  ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.5);  [BUGGY]      distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	((    ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.5);    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(2.5);	  	compilable	  [FE]  AssertionFailedError  	26	6	add
