bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(true);		non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	18	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);		compilable	  [FE]  AssertionFailedError  	18	6	add
3	[BUG]  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(1.0);		compilable	  [FE]  AssertionFailedError  	18	6	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);		compilable	  [FE]  AssertionFailedError  	18	6	add
5	[BUG]  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(expected[0]);		compilable	  [FE]  AssertionFailedError  	18	6	add
6	[BUG]  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);  [CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(null);		non-compiled	[CE]  method  setDegreesOfFreedom  in  class  ChiSquaredDistributionImpl  cannot  be  applied  to  given  types;	18	None	add
7	[BUG]  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setMean(true);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setMean(true);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistributionImpl)distribution).setMean(true);		non-compiled	[CE]  cannot  find  symbol	18	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  1.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
9	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  1.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  1.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
10	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  -  10.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  IllegalArgumentException  	17	6	replace
11	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  [FE]  IllegalArgumentException  [FE]      AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  10.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  -  10.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  IllegalArgumentException  	17	6	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  *  1.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
13	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  *  1.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  *  1.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(observed.length  -  1.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
15	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(observed.length  -  1.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(observed.length  -  1.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
16	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);		compilable	  [FE]  IllegalArgumentException  	18	6	add
17	[BUG]  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistributionImpl)distribution).setDegreesOfFreedom(0.0);		compilable	  [FE]  IllegalArgumentException  	18	6	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);		compilable	  [FE]  AssertionFailedError  	18	6	add
19	[BUG]  [BUGGY]    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistribution)distribution).setDegreesOfFreedom(1.0);		compilable	  [FE]  AssertionFailedError  	18	6	add
20	[BUG]  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]    ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  -  1.0);  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	    ((  ChiSquaredDistributionImpl)distribution).setProbability(chiSquare(expected,  observed));		non-compiled	[CE]  cannot  find  symbol	18	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	add	distribution.setDegreesOfFreedom(expected.length  /  2.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
22	[BUG]  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  chiSquareTest(double[]  expected,  long[]  observed)  throws  IllegalArgumentException,  MathException  {  [BUGGY]  distribution.setDegreesOfFreedom(expected.length  /  2.0);  [BUGGY]  return  1.0  -  distribution.cumulativeProbability(  chiSquare(expected,  observed));  }  [CLASS]  ChiSquareTestImpl  [METHOD]  chiSquareTest  [RETURN_TYPE]  double  double[]  expected  long[]  observed  [VARIABLES]  ChiSquaredDistribution  distribution  x  boolean  double[]  expected  long[]  observed  	projects/Math102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java	1.0	97	97	6	replace	distribution.setDegreesOfFreedom(expected.length  /  2.0);	distribution.setDegreesOfFreedom(expected.length  -  1.0);  	compilable	  [FE]  AssertionFailedError  	17	6	replace
